var Module;
if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};
var moduleOverrides = {};
for (var key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
if (Module["ENVIRONMENT"]) {
 if (Module["ENVIRONMENT"] === "WEB") {
  ENVIRONMENT_IS_WEB = true;
 } else if (Module["ENVIRONMENT"] === "WORKER") {
  ENVIRONMENT_IS_WORKER = true;
 } else if (Module["ENVIRONMENT"] === "NODE") {
  ENVIRONMENT_IS_NODE = true;
 } else if (Module["ENVIRONMENT"] === "SHELL") {
  ENVIRONMENT_IS_SHELL = true;
 } else {
  throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
 }
} else {
 ENVIRONMENT_IS_WEB = typeof window === "object";
 ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
 ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
 ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}
if (ENVIRONMENT_IS_NODE) {
 if (!Module["print"]) Module["print"] = console.log;
 if (!Module["printErr"]) Module["printErr"] = console.warn;
 var nodeFS;
 var nodePath;
 Module["read"] = function read(filename, binary) {
  if (!nodeFS) nodeFS = require("fs");
  if (!nodePath) nodePath = require("path");
  filename = nodePath["normalize"](filename);
  var ret = nodeFS["readFileSync"](filename);
  if (!ret && filename != nodePath["resolve"](filename)) {
   filename = path.join(__dirname, "..", "src", filename);
   ret = nodeFS["readFileSync"](filename);
  }
  if (ret && !binary) ret = ret.toString();
  return ret;
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 Module["load"] = function load(f) {
  globalEval(read(f));
 };
 if (!Module["thisProgram"]) {
  if (process["argv"].length > 1) {
   Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
  } else {
   Module["thisProgram"] = "unknown-program";
  }
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (!Module["print"]) Module["print"] = print;
 if (typeof printErr != "undefined") Module["printErr"] = printErr;
 if (typeof read != "undefined") {
  Module["read"] = read;
 } else {
  Module["read"] = function read() {
   throw "no read() available (jsc?)";
  };
 }
 Module["readBinary"] = function readBinary(f) {
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  var data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function read(url) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, false);
  xhr.send(null);
  return xhr.responseText;
 };
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
   } else {
    onerror();
   }
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof console !== "undefined") {
  if (!Module["print"]) Module["print"] = function print(x) {
   console.log(x);
  };
  if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
   console.warn(x);
  };
 } else {
  var TRY_USE_DUMP = false;
  if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
   dump(x);
  }) : (function(x) {});
 }
 if (ENVIRONMENT_IS_WORKER) {
  Module["load"] = importScripts;
 }
 if (typeof Module["setWindowTitle"] === "undefined") {
  Module["setWindowTitle"] = (function(title) {
   document.title = title;
  });
 }
} else {
 throw "Unknown runtime environment. Where are we?";
}
function globalEval(x) {
 eval.call(null, x);
}
if (!Module["load"] && Module["read"]) {
 Module["load"] = function load(f) {
  globalEval(Module["read"](f));
 };
}
if (!Module["print"]) {
 Module["print"] = (function() {});
}
if (!Module["printErr"]) {
 Module["printErr"] = Module["print"];
}
if (!Module["arguments"]) {
 Module["arguments"] = [];
}
if (!Module["thisProgram"]) {
 Module["thisProgram"] = "./this.program";
}
Module.print = Module["print"];
Module.printErr = Module["printErr"];
Module["preRun"] = [];
Module["postRun"] = [];
for (var key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
moduleOverrides = undefined;
var Runtime = {
 setTempRet0: (function(value) {
  tempRet0 = value;
 }),
 getTempRet0: (function() {
  return tempRet0;
 }),
 stackSave: (function() {
  return STACKTOP;
 }),
 stackRestore: (function(stackTop) {
  STACKTOP = stackTop;
 }),
 getNativeTypeSize: (function(type) {
  switch (type) {
  case "i1":
  case "i8":
   return 1;
  case "i16":
   return 2;
  case "i32":
   return 4;
  case "i64":
   return 8;
  case "float":
   return 4;
  case "double":
   return 8;
  default:
   {
    if (type[type.length - 1] === "*") {
     return Runtime.QUANTUM_SIZE;
    } else if (type[0] === "i") {
     var bits = parseInt(type.substr(1));
     assert(bits % 8 === 0);
     return bits / 8;
    } else {
     return 0;
    }
   }
  }
 }),
 getNativeFieldSize: (function(type) {
  return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
 }),
 STACK_ALIGN: 16,
 prepVararg: (function(ptr, type) {
  if (type === "double" || type === "i64") {
   if (ptr & 7) {
    assert((ptr & 7) === 4);
    ptr += 4;
   }
  } else {
   assert((ptr & 3) === 0);
  }
  return ptr;
 }),
 getAlignSize: (function(type, size, vararg) {
  if (!vararg && (type == "i64" || type == "double")) return 8;
  if (!type) return Math.min(size, 8);
  return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
 }),
 dynCall: (function(sig, ptr, args) {
  if (args && args.length) {
   if (!args.splice) args = Array.prototype.slice.call(args);
   args.splice(0, 0, ptr);
   return Module["dynCall_" + sig].apply(null, args);
  } else {
   return Module["dynCall_" + sig].call(null, ptr);
  }
 }),
 functionPointers: [],
 addFunction: (function(func) {
  for (var i = 0; i < Runtime.functionPointers.length; i++) {
   if (!Runtime.functionPointers[i]) {
    Runtime.functionPointers[i] = func;
    return 2 * (1 + i);
   }
  }
  throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
 }),
 removeFunction: (function(index) {
  Runtime.functionPointers[(index - 2) / 2] = null;
 }),
 warnOnce: (function(text) {
  if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
  if (!Runtime.warnOnce.shown[text]) {
   Runtime.warnOnce.shown[text] = 1;
   Module.printErr(text);
  }
 }),
 funcWrappers: {},
 getFuncWrapper: (function(func, sig) {
  assert(sig);
  if (!Runtime.funcWrappers[sig]) {
   Runtime.funcWrappers[sig] = {};
  }
  var sigCache = Runtime.funcWrappers[sig];
  if (!sigCache[func]) {
   sigCache[func] = function dynCall_wrapper() {
    return Runtime.dynCall(sig, func, arguments);
   };
  }
  return sigCache[func];
 }),
 getCompilerSetting: (function(name) {
  throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
 }),
 stackAlloc: (function(size) {
  var ret = STACKTOP;
  STACKTOP = STACKTOP + size | 0;
  STACKTOP = STACKTOP + 15 & -16;
  return ret;
 }),
 staticAlloc: (function(size) {
  var ret = STATICTOP;
  STATICTOP = STATICTOP + size | 0;
  STATICTOP = STATICTOP + 15 & -16;
  return ret;
 }),
 dynamicAlloc: (function(size) {
  var ret = DYNAMICTOP;
  DYNAMICTOP = DYNAMICTOP + size | 0;
  DYNAMICTOP = DYNAMICTOP + 15 & -16;
  if (DYNAMICTOP >= TOTAL_MEMORY) {
   var success = enlargeMemory();
   if (!success) {
    DYNAMICTOP = ret;
    return 0;
   }
  }
  return ret;
 }),
 alignMemory: (function(size, quantum) {
  var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
  return ret;
 }),
 makeBigInt: (function(low, high, unsigned) {
  var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
  return ret;
 }),
 GLOBAL_BASE: 8,
 QUANTUM_SIZE: 4,
 __dummy__: 0
};
Module["Runtime"] = Runtime;
var ABORT = false;
var EXITSTATUS = 0;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
function getCFunc(ident) {
 var func = Module["_" + ident];
 if (!func) {
  try {
   func = eval("_" + ident);
  } catch (e) {}
 }
 assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
 return func;
}
var cwrap, ccall;
((function() {
 var JSfuncs = {
  "stackSave": (function() {
   Runtime.stackSave();
  }),
  "stackRestore": (function() {
   Runtime.stackRestore();
  }),
  "arrayToC": (function(arr) {
   var ret = Runtime.stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }),
  "stringToC": (function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    ret = Runtime.stackAlloc((str.length << 2) + 1);
    writeStringToMemory(str, ret);
   }
   return ret;
  })
 };
 var toC = {
  "string": JSfuncs["stringToC"],
  "array": JSfuncs["arrayToC"]
 };
 ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
   for (var i = 0; i < args.length; i++) {
    var converter = toC[argTypes[i]];
    if (converter) {
     if (stack === 0) stack = Runtime.stackSave();
     cArgs[i] = converter(args[i]);
    } else {
     cArgs[i] = args[i];
    }
   }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === "string") ret = Pointer_stringify(ret);
  if (stack !== 0) {
   if (opts && opts.async) {
    EmterpreterAsync.asyncFinalizers.push((function() {
     Runtime.stackRestore(stack);
    }));
    return;
   }
   Runtime.stackRestore(stack);
  }
  return ret;
 };
 var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
 function parseJSFunc(jsfunc) {
  var parsed = jsfunc.toString().match(sourceRegex).slice(1);
  return {
   arguments: parsed[0],
   body: parsed[1],
   returnValue: parsed[2]
  };
 }
 var JSsource = null;
 function ensureJSsource() {
  if (!JSsource) {
   JSsource = {};
   for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
     JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
   }
  }
 }
 cwrap = function cwrap(ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  var numericArgs = argTypes.every((function(type) {
   return type === "number";
  }));
  var numericRet = returnType !== "string";
  if (numericRet && numericArgs) {
   return cfunc;
  }
  var argNames = argTypes.map((function(x, i) {
   return "$" + i;
  }));
  var funcstr = "(function(" + argNames.join(",") + ") {";
  var nargs = argTypes.length;
  if (!numericArgs) {
   ensureJSsource();
   funcstr += "var stack = " + JSsource["stackSave"].body + ";";
   for (var i = 0; i < nargs; i++) {
    var arg = argNames[i], type = argTypes[i];
    if (type === "number") continue;
    var convertCode = JSsource[type + "ToC"];
    funcstr += "var " + convertCode.arguments + " = " + arg + ";";
    funcstr += convertCode.body + ";";
    funcstr += arg + "=(" + convertCode.returnValue + ");";
   }
  }
  var cfuncname = parseJSFunc((function() {
   return cfunc;
  })).returnValue;
  funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
  if (!numericRet) {
   var strgfy = parseJSFunc((function() {
    return Pointer_stringify;
   })).returnValue;
   funcstr += "ret = " + strgfy + "(ret);";
  }
  if (!numericArgs) {
   ensureJSsource();
   funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
  }
  funcstr += "return ret})";
  return eval(funcstr);
 };
}))();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
Module["setValue"] = setValue;
function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];
 case "i8":
  return HEAP8[ptr >> 0];
 case "i16":
  return HEAP16[ptr >> 1];
 case "i32":
  return HEAP32[ptr >> 2];
 case "i64":
  return HEAP32[ptr >> 2];
 case "float":
  return HEAPF32[ptr >> 2];
 case "double":
  return HEAPF64[ptr >> 3];
 default:
  abort("invalid type for setValue: " + type);
 }
 return null;
}
Module["getValue"] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var ptr = ret, stop;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  if (typeof curr === "function") {
   curr = Runtime.getFunctionIndex(curr);
  }
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = Runtime.getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
Module["allocate"] = allocate;
function getMemory(size) {
 if (!staticSealed) return Runtime.staticAlloc(size);
 if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized) return Runtime.dynamicAlloc(size);
 return _malloc(size);
}
Module["getMemory"] = getMemory;
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return Module["UTF8ToString"](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;
function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = HEAP8[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}
Module["AsciiToString"] = AsciiToString;
function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;
function UTF8ArrayToString(u8Array, idx) {
 var u0, u1, u2, u3, u4, u5;
 var str = "";
 while (1) {
  u0 = u8Array[idx++];
  if (!u0) return str;
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  u1 = u8Array[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  u2 = u8Array[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   u3 = u8Array[idx++] & 63;
   if ((u0 & 248) == 240) {
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
   } else {
    u4 = u8Array[idx++] & 63;
    if ((u0 & 252) == 248) {
     u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
    } else {
     u5 = u8Array[idx++] & 63;
     u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
    }
   }
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;
function demangle(func) {
 var hasLibcxxabi = !!Module["___cxa_demangle"];
 if (hasLibcxxabi) {
  try {
   var buf = _malloc(func.length);
   writeStringToMemory(func.substr(1), buf);
   var status = _malloc(4);
   var ret = Module["___cxa_demangle"](buf, 0, 0, status);
   if (getValue(status, "i32") === 0 && ret) {
    return Pointer_stringify(ret);
   }
  } catch (e) {
   return func;
  } finally {
   if (buf) _free(buf);
   if (status) _free(status);
   if (ret) _free(ret);
  }
 }
 Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 return func;
}
function demangleAll(text) {
 return text.replace(/__Z[\w\d_]+/g, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
 if (x % 4096 > 0) {
  x += 4096 - x % 4096;
 }
 return x;
}
var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;
var DYNAMIC_BASE = 0, DYNAMICTOP = 0;
function abortOnCannotGrowMemory() {
 abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}
function enlargeMemory() {
 abortOnCannotGrowMemory();
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 30100100;
var totalMemory = 64 * 1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
 if (totalMemory < 16 * 1024 * 1024) {
  totalMemory *= 2;
 } else {
  totalMemory += 16 * 1024 * 1024;
 }
}
if (totalMemory !== TOTAL_MEMORY) {
 TOTAL_MEMORY = totalMemory;
}
if (Module["buffer"]) {
 buffer = Module["buffer"];
} else {
 buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw "Typed arrays 2 must be run on a little-endian system";
Module["HEAP"] = HEAP;
Module["buffer"] = buffer;
Module["HEAP8"] = HEAP8;
Module["HEAP16"] = HEAP16;
Module["HEAP32"] = HEAP32;
Module["HEAPU8"] = HEAPU8;
Module["HEAPU16"] = HEAPU16;
Module["HEAPU32"] = HEAPU32;
Module["HEAPF32"] = HEAPF32;
Module["HEAPF64"] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Runtime.dynCall("v", func);
   } else {
    Runtime.dynCall("vi", func, [ callback.arg ]);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;
function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;
function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;
function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
Module["intArrayFromString"] = intArrayFromString;
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
Module["intArrayToString"] = intArrayToString;
function writeStringToMemory(string, buffer, dontAddNull) {
 var array = intArrayFromString(string, dontAddNull);
 var i = 0;
 while (i < array.length) {
  var chr = array[i];
  HEAP8[buffer + i >> 0] = chr;
  i = i + 1;
 }
}
Module["writeStringToMemory"] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
 for (var i = 0; i < array.length; i++) {
  HEAP8[buffer++ >> 0] = array[i];
 }
}
Module["writeArrayToMemory"] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;
if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
 var ah = a >>> 16;
 var al = a & 65535;
 var bh = b >>> 16;
 var bl = b & 65535;
 return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math["imul"];
if (!Math["clz32"]) Math["clz32"] = (function(x) {
 x = x >>> 0;
 for (var i = 0; i < 32; i++) {
  if (x & 1 << 31 - i) return i;
 }
 return 32;
});
Math.clz32 = Math["clz32"];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
function getUniqueRunDependency(id) {
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}
Module["addRunDependency"] = addRunDependency;
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["removeRunDependency"] = removeRunDependency;
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var memoryInitializer = null;
var ASM_CONSTS = [];
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 57024;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__I_000101();
 })
}, {
 func: (function() {
  ___cxx_global_var_init_90();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_mcc2_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_iostream_cpp();
 })
});
memoryInitializer = "mcc2.compiled.js.mem";
var tempDoublePtr = STATICTOP;
STATICTOP += 16;
function _emscripten_get_now() {
 if (!_emscripten_get_now.actual) {
  if (ENVIRONMENT_IS_NODE) {
   _emscripten_get_now.actual = function _emscripten_get_now_actual() {
    var t = process["hrtime"]();
    return t[0] * 1e3 + t[1] / 1e6;
   };
  } else if (typeof dateNow !== "undefined") {
   _emscripten_get_now.actual = dateNow;
  } else if (typeof self === "object" && self["performance"] && typeof self["performance"]["now"] === "function") {
   _emscripten_get_now.actual = function _emscripten_get_now_actual() {
    return self["performance"]["now"]();
   };
  } else if (typeof performance === "object" && typeof performance["now"] === "function") {
   _emscripten_get_now.actual = function _emscripten_get_now_actual() {
    return performance["now"]();
   };
  } else {
   _emscripten_get_now.actual = Date.now;
  }
 }
 return _emscripten_get_now.actual();
}
function _emscripten_get_now_is_monotonic() {
 return ENVIRONMENT_IS_NODE || typeof dateNow !== "undefined" || (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && self["performance"] && self["performance"]["now"];
}
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
 return value;
}
function _clock_gettime(clk_id, tp) {
 var now;
 if (clk_id === 0) {
  now = Date.now();
 } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
  now = _emscripten_get_now();
 } else {
  ___setErrNo(ERRNO_CODES.EINVAL);
  return -1;
 }
 HEAP32[tp >> 2] = now / 1e3 | 0;
 HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
 return 0;
}
Module["_i64Subtract"] = _i64Subtract;
function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;
 case 85:
  return totalMemory / PAGE_SIZE;
 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;
 case 79:
  return 0;
 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;
 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;
 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;
 case 31:
 case 42:
 case 72:
  return 32;
 case 87:
 case 26:
 case 33:
  return 2147483647;
 case 34:
 case 1:
  return 47839;
 case 38:
 case 36:
  return 99;
 case 43:
 case 37:
  return 2048;
 case 0:
  return 2097152;
 case 3:
  return 65536;
 case 28:
  return 32768;
 case 44:
  return 32767;
 case 75:
  return 16384;
 case 39:
  return 1e3;
 case 89:
  return 700;
 case 71:
  return 256;
 case 40:
  return 255;
 case 2:
  return 100;
 case 180:
  return 64;
 case 25:
  return 20;
 case 5:
  return 16;
 case 6:
  return 6;
 case 73:
  return 4;
 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(ERRNO_CODES.EINVAL);
 return -1;
}
function __ZSt18uncaught_exceptionv() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}
var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: (function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var ptr in EXCEPTIONS.infos) {
   var info = EXCEPTIONS.infos[ptr];
   if (info.adjusted === adjusted) {
    return ptr;
   }
  }
  return adjusted;
 }),
 addRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 }),
 decRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0) {
   if (info.destructor) {
    Runtime.dynCall("vi", info.destructor, [ ptr ]);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 }),
 clearRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 })
};
function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}
function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (asm["setTempRet0"](0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (asm["setTempRet0"](0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted = thrown;
   return (asm["setTempRet0"](typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (asm["setTempRet0"](throwntype), thrown) | 0;
}
function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: ptr,
  type: type,
  destructor: destructor,
  refcount: 0
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}
Module["_memset"] = _memset;
function _pthread_mutex_lock() {}
function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}
var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}
function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
 };
 var pattern = Pointer_stringify(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);
  case 1:
   return janFourth;
  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);
  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);
  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);
  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);
  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": (function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  }),
  "%A": (function(date) {
   return WEEKDAYS[date.tm_wday];
  }),
  "%b": (function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  }),
  "%B": (function(date) {
   return MONTHS[date.tm_mon];
  }),
  "%C": (function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  }),
  "%d": (function(date) {
   return leadingNulls(date.tm_mday, 2);
  }),
  "%e": (function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  }),
  "%g": (function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  }),
  "%G": (function(date) {
   return getWeekBasedYear(date);
  }),
  "%H": (function(date) {
   return leadingNulls(date.tm_hour, 2);
  }),
  "%I": (function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  }),
  "%j": (function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  }),
  "%m": (function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  }),
  "%M": (function(date) {
   return leadingNulls(date.tm_min, 2);
  }),
  "%n": (function() {
   return "\n";
  }),
  "%p": (function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  }),
  "%S": (function(date) {
   return leadingNulls(date.tm_sec, 2);
  }),
  "%t": (function() {
   return "\t";
  }),
  "%u": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  }),
  "%U": (function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  }),
  "%V": (function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  }),
  "%w": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  }),
  "%W": (function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  }),
  "%y": (function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  }),
  "%Y": (function(date) {
   return date.tm_year + 1900;
  }),
  "%z": (function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  }),
  "%Z": (function(date) {
   return date.tm_zone;
  }),
  "%%": (function() {
   return "%";
  })
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}
function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}
function _abort() {
 Module["abort"]();
}
function _pthread_once(ptr, func) {
 if (!_pthread_once.seen) _pthread_once.seen = {};
 if (ptr in _pthread_once.seen) return;
 Runtime.dynCall("v", func);
 _pthread_once.seen[ptr] = 1;
}
function ___lock() {}
function ___unlock() {}
var PTHREAD_SPECIFIC = {};
function _pthread_getspecific(key) {
 return PTHREAD_SPECIFIC[key] || 0;
}
var _llvm_fabs_f64 = Math_abs;
function ___assert_fail(condition, filename, line, func) {
 ABORT = true;
 throw "Assertion failed: " + Pointer_stringify(condition) + ", at: " + [ filename ? Pointer_stringify(filename) : "unknown filename", line, func ? Pointer_stringify(func) : "unknown function" ] + " at " + stackTrace();
}
var PTHREAD_SPECIFIC_NEXT_KEY = 1;
function _pthread_key_create(key, destructor) {
 if (key == 0) {
  return ERRNO_CODES.EINVAL;
 }
 HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
 PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
 PTHREAD_SPECIFIC_NEXT_KEY++;
 return 0;
}
function _pthread_setspecific(key, value) {
 if (!(key in PTHREAD_SPECIFIC)) {
  return ERRNO_CODES.EINVAL;
 }
 PTHREAD_SPECIFIC[key] = value;
 return 0;
}
function _malloc(bytes) {
 var ptr = Runtime.dynamicAlloc(bytes + 8);
 return ptr + 8 & 4294967288;
}
Module["_malloc"] = _malloc;
function ___cxa_allocate_exception(size) {
 return _malloc(size);
}
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up--; up) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var fd = process.stdin.fd;
     var usingDevice = false;
     try {
      fd = fs.openSync("/dev/stdin", "r");
      usingDevice = true;
     } catch (e) {}
     bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
   transaction.onerror = (function(e) {
    callback(this.error);
    e.preventDefault();
   });
   var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
   var index = store.index("timestamp");
   index.openKeyCursor().onsuccess = (function(event) {
    var cursor = event.target.result;
    if (!cursor) {
     return callback(null, {
      type: "remote",
      db: db,
      entries: entries
     });
    }
    entries[cursor.primaryKey] = {
     timestamp: cursor.key
    };
    cursor.continue();
   });
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     encoding: "binary",
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 146) >> 1;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsToPermissionStringMap: {
  0: "r",
  1: "r+",
  2: "r+",
  64: "r",
  65: "r+",
  66: "r+",
  129: "rx+",
  193: "rx+",
  514: "w+",
  577: "w",
  578: "w+",
  705: "wx",
  706: "wx+",
  1024: "a",
  1025: "a",
  1026: "a+",
  1089: "a",
  1090: "a+",
  1153: "ax",
  1154: "ax+",
  1217: "ax",
  1218: "ax+",
  4096: "rs",
  4098: "rs+"
 },
 flagsToPermissionString: (function(flags) {
  flags &= ~32768;
  flags &= ~524288;
  if (flags in NODEFS.flagsToPermissionStringMap) {
   return NODEFS.flagsToPermissionStringMap[flags];
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   var nbuffer = new Buffer(length);
   var res;
   try {
    res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (res > 0) {
    for (var i = 0; i < res; i++) {
     buffer[offset + i] = nbuffer[i];
    }
   }
   return res;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
   var res;
   try {
    res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return res;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
STATICTOP += 16;
STATICTOP += 16;
STATICTOP += 16;
var FS = {
 root: null,
 mounts: [],
 devices: [ null ],
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  opts.encoding = opts.encoding || "utf8";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var stream = FS.open(path, opts.flags, opts.mode);
  if (opts.encoding === "utf8") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
  } else if (opts.encoding === "binary") {
   FS.write(stream, data, 0, data.length, 0, opts.canOwn);
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto").randomBytes(1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     })
    },
    chunkSize: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     })
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: (function() {
     return this.contents.length;
    })
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  ret = ret.slice(0, Math.max(0, bufsize));
  writeStringToMemory(ret, buf, true);
  return ret.length;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21506:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
Module["_i64Add"] = _i64Add;
Module["_bitshift64Lshr"] = _bitshift64Lshr;
function ___cxa_pure_virtual() {
 ABORT = true;
 throw "Pure virtual function called!";
}
function ___cxa_guard_release() {}
function _pthread_cleanup_push(routine, arg) {
 __ATEXIT__.push((function() {
  Runtime.dynCall("vi", routine, [ arg ]);
 }));
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function _pthread_cond_broadcast() {
 return 0;
}
function ___cxa_guard_acquire(variable) {
 if (!HEAP8[variable >> 0]) {
  HEAP8[variable >> 0] = 1;
  return 1;
 }
 return 0;
}
function _pthread_cleanup_pop() {
 assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
 __ATEXIT__.pop();
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function ___cxa_begin_catch(ptr) {
 __ZSt18uncaught_exceptionv.uncaught_exception--;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
Module["_memcpy"] = _memcpy;
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _sbrk(bytes) {
 var self = _sbrk;
 if (!self.called) {
  DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
  self.called = true;
  assert(Runtime.dynamicAlloc);
  self.alloc = Runtime.dynamicAlloc;
  Runtime.dynamicAlloc = (function() {
   abort("cannot dynamically allocate, sbrk now has control");
  });
 }
 var ret = DYNAMICTOP;
 if (bytes != 0) {
  var success = self.alloc(bytes);
  if (!success) return -1 >>> 0;
 }
 return ret;
}
Module["_bitshift64Shl"] = _bitshift64Shl;
Module["_memmove"] = _memmove;
function ___gxx_personality_v0() {}
function _pthread_cond_wait() {
 return 0;
}
var _llvm_fabs_f32 = Math_abs;
function _pthread_mutex_unlock() {}
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
function _pthread_self() {
 return 0;
}
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  assert(offset_high === 0);
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
Module["FS_createFolder"] = FS.createFolder;
Module["FS_createPath"] = FS.createPath;
Module["FS_createDataFile"] = FS.createDataFile;
Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
Module["FS_createLazyFile"] = FS.createLazyFile;
Module["FS_createLink"] = FS.createLink;
Module["FS_createDevice"] = FS.createDevice;
Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true;
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_DYNAMIC);
function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidi(index, a1, a2, a3) {
 try {
  Module["dynCall_vidi"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vid(index, a1, a2) {
 try {
  Module["dynCall_vid"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  return Module["dynCall_iiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_iiii": invoke_iiii,
 "invoke_vidi": invoke_vidi,
 "invoke_viiiii": invoke_viiiii,
 "invoke_vid": invoke_vid,
 "invoke_iiiiiid": invoke_iiiiiid,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_iiiiid": invoke_iiiiid,
 "invoke_ii": invoke_ii,
 "invoke_viii": invoke_viii,
 "invoke_v": invoke_v,
 "invoke_iiiiiiiii": invoke_iiiiiiiii,
 "invoke_iiiii": invoke_iiiii,
 "invoke_viiiiii": invoke_viiiiii,
 "invoke_iii": invoke_iii,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_viiii": invoke_viiii,
 "_pthread_cleanup_pop": _pthread_cleanup_pop,
 "_strftime": _strftime,
 "_pthread_cond_wait": _pthread_cond_wait,
 "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic,
 "_pthread_key_create": _pthread_key_create,
 "_abort": _abort,
 "_llvm_fabs_f64": _llvm_fabs_f64,
 "__addDays": __addDays,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___assert_fail": ___assert_fail,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "__isLeapYear": __isLeapYear,
 "___cxa_guard_release": ___cxa_guard_release,
 "_clock_gettime": _clock_gettime,
 "___cxa_guard_acquire": ___cxa_guard_acquire,
 "_strftime_l": _strftime_l,
 "___setErrNo": ___setErrNo,
 "_sbrk": _sbrk,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "___resumeException": ___resumeException,
 "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv,
 "_sysconf": _sysconf,
 "_pthread_getspecific": _pthread_getspecific,
 "_llvm_fabs_f32": _llvm_fabs_f32,
 "__arraySum": __arraySum,
 "_pthread_self": _pthread_self,
 "_pthread_mutex_unlock": _pthread_mutex_unlock,
 "_pthread_once": _pthread_once,
 "___syscall54": ___syscall54,
 "___unlock": ___unlock,
 "_pthread_cond_broadcast": _pthread_cond_broadcast,
 "_emscripten_get_now": _emscripten_get_now,
 "_pthread_setspecific": _pthread_setspecific,
 "___cxa_throw": ___cxa_throw,
 "___lock": ___lock,
 "___syscall6": ___syscall6,
 "_pthread_cleanup_push": _pthread_cleanup_push,
 "___cxa_pure_virtual": ___cxa_pure_virtual,
 "_time": _time,
 "_pthread_mutex_lock": _pthread_mutex_lock,
 "___syscall140": ___syscall140,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "cttz_i8": cttz_i8
};
// EMSCRIPTEN_START_ASM

var asm = (function(global,env,buffer) {

  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_vidi=env.invoke_vidi;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic;
  var _pthread_key_create=env._pthread_key_create;
  var _abort=env._abort;
  var _llvm_fabs_f64=env._llvm_fabs_f64;
  var __addDays=env.__addDays;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var __isLeapYear=env.__isLeapYear;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _clock_gettime=env._clock_gettime;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _strftime_l=env._strftime_l;
  var ___setErrNo=env.___setErrNo;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _sysconf=env._sysconf;
  var _pthread_getspecific=env._pthread_getspecific;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var __arraySum=env.__arraySum;
  var _pthread_self=env._pthread_self;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _emscripten_get_now=env._emscripten_get_now;
  var _pthread_setspecific=env._pthread_setspecific;
  var ___cxa_throw=env.___cxa_throw;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i7, i44) {
 i7 = i7 | 0;
 i44 = i44 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i45 = 0, i46 = 0;
 i46 = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 i35 = i46 + 320 | 0;
 i45 = i46 + 248 | 0;
 i1 = i46 + 300 | 0;
 i38 = i46 + 120 | 0;
 i4 = i46 + 280 | 0;
 i36 = i46 + 264 | 0;
 i40 = i46 + 96 | 0;
 i37 = i46 + 232 | 0;
 i39 = i46 + 64 | 0;
 i41 = i46 + 216 | 0;
 i42 = i46 + 204 | 0;
 i6 = i46 + 184 | 0;
 i16 = i46 + 168 | 0;
 i17 = i46 + 104 | 0;
 i3 = i46 + 76 | 0;
 i14 = i46 + 48 | 0;
 i15 = i46 + 32 | 0;
 i8 = i46 + 12 | 0;
 i9 = i46;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 30193, 4);
 HEAP8[i1 + 12 >> 0] = 46;
 HEAP32[i1 + 16 >> 2] = (HEAP8[i1 >> 0] & 1) == 0 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0;
 i34 = __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i7, i1) | 0;
 HEAP8[i35 >> 0] = 0;
 i5 = i35 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i34);
 HEAP8[i35 >> 0] = 1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i45, i5);
 if (HEAP8[i35 >> 0] | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  HEAP8[i35 >> 0] = 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 HEAP8[i44 >> 0] = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30100) | 0) == 0 & 1;
 if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30198) | 0)) {
  i44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30223, 30) | 0;
  HEAP32[i35 >> 2] = __ZNKSt3__18ios_base6getlocEv(i44 + (HEAP32[(HEAP32[i44 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i42 = __ZNKSt3__16locale9use_facetERNS0_2idE(i35, 52980) | 0;
  i42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i42 >> 2] | 0) + 28 >> 2] & 31](i42, 10) | 0;
  __ZNSt3__16localeD2Ev(i35);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i44, i42) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i44) | 0;
  i44 = __Znwj(40) | 0;
  HEAP32[i44 >> 2] = 20320;
  HEAPF32[i44 + 4 >> 2] = .44999998807907104;
  HEAPF32[i44 + 8 >> 2] = .20000000298023224;
  HEAPF32[i44 + 12 >> 2] = .20000000298023224;
  HEAPF32[i44 + 16 >> 2] = .20000000298023224;
  HEAPF32[i44 + 20 >> 2] = 0.0;
  HEAPF32[i44 + 24 >> 2] = 0.0;
  HEAPF32[i44 + 28 >> 2] = 0.0;
  i42 = __Znaj(48) | 0;
  HEAP32[i44 + 32 >> 2] = i42;
  i43 = __Znaj(48) | 0;
  HEAP32[i44 + 36 >> 2] = i43;
  HEAPF32[i42 >> 2] = 1.0;
  HEAPF32[i43 >> 2] = 1.0;
  HEAPF32[i42 + 4 >> 2] = 0.0;
  HEAPF32[i43 + 4 >> 2] = 0.0;
  HEAPF32[i42 + 8 >> 2] = 0.0;
  HEAPF32[i43 + 8 >> 2] = 0.0;
  HEAPF32[i42 + 12 >> 2] = 0.0;
  HEAPF32[i43 + 12 >> 2] = 0.0;
  HEAPF32[i42 + 16 >> 2] = 0.0;
  HEAPF32[i43 + 16 >> 2] = 0.0;
  HEAPF32[i42 + 20 >> 2] = 1.0;
  HEAPF32[i43 + 20 >> 2] = 1.0;
  HEAPF32[i42 + 24 >> 2] = 0.0;
  HEAPF32[i43 + 24 >> 2] = 0.0;
  HEAPF32[i42 + 28 >> 2] = 0.0;
  HEAPF32[i43 + 28 >> 2] = 0.0;
  HEAPF32[i42 + 32 >> 2] = 0.0;
  HEAPF32[i43 + 32 >> 2] = 0.0;
  HEAPF32[i42 + 36 >> 2] = 0.0;
  HEAPF32[i43 + 36 >> 2] = 0.0;
  HEAPF32[i42 + 40 >> 2] = 1.0;
  HEAPF32[i43 + 40 >> 2] = 1.0;
  HEAPF32[i42 + 44 >> 2] = 0.0;
  HEAPF32[i43 + 44 >> 2] = 0.0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
  STACKTOP = i46;
  return i44 | 0;
 }
 if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30254) | 0 ? __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30260) | 0 : 0) {
  if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30265) | 0 ? __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30275) | 0 : 0) {
   if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30284) | 0 ? __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30295) | 0 : 0) {
    if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30305) | 0 ? __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30311) | 0 : 0) {
     if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30316) | 0) {
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30331) | 0)) {
       __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i38, i7);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, 30322, 8);
       HEAP8[i6 + 12 >> 0] = 46;
       HEAP32[i6 + 16 >> 2] = (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0;
       i11 = __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i7, i6) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
       i11 = HEAP32[(HEAP32[i11 + 12 >> 2] | 0) + 4 >> 2] | 0;
       i1 = HEAP32[i11 + 44 >> 2] | 0;
       i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
       L24 : do if ((i1 | 0) == (i11 | 0)) {
        i3 = 0;
        i1 = 0;
       } else {
        i12 = i16 + 12 | 0;
        i13 = i17 + 12 | 0;
        i9 = i1;
        i3 = 0;
        i1 = 0;
        i10 = 0;
        while (1) {
         if (!i3) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i16, i9 + 12 | 0);
          i3 = __Znwj(16) | 0;
          __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i3, HEAP32[i9 + 24 >> 2] | 0);
          HEAP32[i12 >> 2] = i3;
          i3 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i16, i44) | 0;
          i8 = HEAP32[i12 >> 2] | 0;
          i7 = i8 + 4 | 0;
          i4 = HEAP32[i7 >> 2] | 0;
          i5 = HEAP32[i4 + 44 >> 2] | 0;
          i5 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
          if ((i5 | 0) != (i4 | 0)) {
           i6 = i8 + 8 | 0;
           while (1) {
            i4 = HEAP32[i5 + 44 >> 2] | 0;
            i4 = (i4 | 0) == 0 ? 0 : i4 + -40 | 0;
            __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i6, i5);
            __ZdlPv(i5);
            if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) break; else i5 = i4;
           }
          }
          __ZdlPv(i4);
          __ZdlPv(i8);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
         } else {
          if ((i10 | 0) > 1) break;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i17, i9 + 12 | 0);
          i1 = __Znwj(16) | 0;
          __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i1, HEAP32[i9 + 24 >> 2] | 0);
          HEAP32[i13 >> 2] = i1;
          i1 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i17, i44) | 0;
          i8 = HEAP32[i13 >> 2] | 0;
          i7 = i8 + 4 | 0;
          i4 = HEAP32[i7 >> 2] | 0;
          i5 = HEAP32[i4 + 44 >> 2] | 0;
          i5 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
          if ((i5 | 0) != (i4 | 0)) {
           i6 = i8 + 8 | 0;
           while (1) {
            i4 = HEAP32[i5 + 44 >> 2] | 0;
            i4 = (i4 | 0) == 0 ? 0 : i4 + -40 | 0;
            __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i6, i5);
            __ZdlPv(i5);
            if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) break; else i5 = i4;
           }
          }
          __ZdlPv(i4);
          __ZdlPv(i8);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
         }
         i43 = HEAP32[i9 + 44 >> 2] | 0;
         i9 = (i43 | 0) == 0 ? 0 : i43 + -40 | 0;
         if ((i9 | 0) == (i11 | 0)) break L24; else i10 = i10 + 1 | 0;
        }
        i44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30344, 45) | 0;
        HEAP32[i35 >> 2] = __ZNKSt3__18ios_base6getlocEv(i44 + (HEAP32[(HEAP32[i44 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
        i43 = __ZNKSt3__16locale9use_facetERNS0_2idE(i35, 52980) | 0;
        i43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i43 >> 2] | 0) + 28 >> 2] & 31](i43, 10) | 0;
        __ZNSt3__16localeD2Ev(i35);
        __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i44, i43) | 0;
        __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i44) | 0;
       } while (0);
       i44 = __Znwj(12) | 0;
       HEAP32[i44 >> 2] = 20628;
       HEAP32[i44 + 4 >> 2] = i3;
       HEAP32[i44 + 8 >> 2] = i1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
       STACKTOP = i46;
       return i44 | 0;
      }
      if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i45, 30390) | 0) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i8, 30447, 4);
       HEAP8[i8 + 12 >> 0] = 46;
       HEAP32[i8 + 16 >> 2] = (HEAP8[i8 >> 0] & 1) == 0 ? i8 + 1 | 0 : HEAP32[i8 + 8 >> 2] | 0;
       __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i35, i7, i8);
       i44 = HEAP8[i35 >> 0] | 0;
       d2 = i44 << 24 >> 24 ? +HEAPF32[i35 + 4 >> 2] : nan;
       if (i44 << 24 >> 24) HEAP8[i35 >> 0] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
       i42 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30452, 10) | 0, 30463, 14) | 0;
       i44 = HEAP8[i45 >> 0] | 0;
       i43 = (i44 & 1) == 0;
       i44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i42, i43 ? i45 + 1 | 0 : HEAP32[i45 + 8 >> 2] | 0, i43 ? (i44 & 255) >>> 1 : HEAP32[i45 + 4 >> 2] | 0) | 0;
       HEAP32[i35 >> 2] = __ZNKSt3__18ios_base6getlocEv(i44 + (HEAP32[(HEAP32[i44 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
       i43 = __ZNKSt3__16locale9use_facetERNS0_2idE(i35, 52980) | 0;
       i43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i43 >> 2] | 0) + 28 >> 2] & 31](i43, 10) | 0;
       __ZNSt3__16localeD2Ev(i35);
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i44, i43) | 0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i44) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i9, i45);
       i44 = __Z21object_factory_simplefNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(d2, i9) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
       STACKTOP = i46;
       return i44 | 0;
      }
      __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i38, i7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i3, 30322, 8);
      HEAP8[i3 + 12 >> 0] = 46;
      HEAP32[i3 + 16 >> 2] = (HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0;
      i11 = __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i7, i3) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
      i11 = HEAP32[(HEAP32[i11 + 12 >> 2] | 0) + 4 >> 2] | 0;
      i1 = HEAP32[i11 + 44 >> 2] | 0;
      i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
      L54 : do if ((i1 | 0) == (i11 | 0)) {
       i3 = 0;
       i1 = 0;
      } else {
       i12 = i14 + 12 | 0;
       i13 = i15 + 12 | 0;
       i9 = i1;
       i3 = 0;
       i1 = 0;
       i10 = 0;
       while (1) {
        if (!i3) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i14, i9 + 12 | 0);
         i3 = __Znwj(16) | 0;
         __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i3, HEAP32[i9 + 24 >> 2] | 0);
         HEAP32[i12 >> 2] = i3;
         i3 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i14, i44) | 0;
         i8 = HEAP32[i12 >> 2] | 0;
         i7 = i8 + 4 | 0;
         i4 = HEAP32[i7 >> 2] | 0;
         i5 = HEAP32[i4 + 44 >> 2] | 0;
         i5 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
         if ((i5 | 0) != (i4 | 0)) {
          i6 = i8 + 8 | 0;
          while (1) {
           i4 = HEAP32[i5 + 44 >> 2] | 0;
           i4 = (i4 | 0) == 0 ? 0 : i4 + -40 | 0;
           __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i6, i5);
           __ZdlPv(i5);
           if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) break; else i5 = i4;
          }
         }
         __ZdlPv(i4);
         __ZdlPv(i8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
        } else {
         if ((i10 | 0) > 1) break;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i15, i9 + 12 | 0);
         i1 = __Znwj(16) | 0;
         __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i1, HEAP32[i9 + 24 >> 2] | 0);
         HEAP32[i13 >> 2] = i1;
         i1 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i15, i44) | 0;
         i8 = HEAP32[i13 >> 2] | 0;
         i7 = i8 + 4 | 0;
         i4 = HEAP32[i7 >> 2] | 0;
         i5 = HEAP32[i4 + 44 >> 2] | 0;
         i5 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
         if ((i5 | 0) != (i4 | 0)) {
          i6 = i8 + 8 | 0;
          while (1) {
           i4 = HEAP32[i5 + 44 >> 2] | 0;
           i4 = (i4 | 0) == 0 ? 0 : i4 + -40 | 0;
           __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i6, i5);
           __ZdlPv(i5);
           if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) break; else i5 = i4;
          }
         }
         __ZdlPv(i4);
         __ZdlPv(i8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
        }
        i43 = HEAP32[i9 + 44 >> 2] | 0;
        i9 = (i43 | 0) == 0 ? 0 : i43 + -40 | 0;
        if ((i9 | 0) == (i11 | 0)) break L54; else i10 = i10 + 1 | 0;
       }
       i44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30401, 45) | 0;
       HEAP32[i35 >> 2] = __ZNKSt3__18ios_base6getlocEv(i44 + (HEAP32[(HEAP32[i44 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
       i43 = __ZNKSt3__16locale9use_facetERNS0_2idE(i35, 52980) | 0;
       i43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i43 >> 2] | 0) + 28 >> 2] & 31](i43, 10) | 0;
       __ZNSt3__16localeD2Ev(i35);
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i44, i43) | 0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i44) | 0;
      } while (0);
      i44 = __Znwj(12) | 0;
      HEAP32[i44 >> 2] = 20660;
      HEAP32[i44 + 4 >> 2] = i3;
      HEAP32[i44 + 8 >> 2] = i1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
      STACKTOP = i46;
      return i44 | 0;
     }
     __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i35, i7);
     HEAP32[i38 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 30322, 8);
     HEAP8[i4 + 12 >> 0] = 46;
     HEAP32[i4 + 16 >> 2] = (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0;
     i16 = __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i7, i4) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
     i16 = HEAP32[(HEAP32[i16 + 12 >> 2] | 0) + 4 >> 2] | 0;
     i1 = HEAP32[i16 + 44 >> 2] | 0;
     i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
     L77 : do if ((i1 | 0) != (i16 | 0)) {
      i17 = i36 + 12 | 0;
      i18 = i37 + 12 | 0;
      i19 = i39 + 4 | 0;
      i20 = i39 + 8 | 0;
      i21 = i39 + 8 | 0;
      i22 = i41 + 4 | 0;
      i23 = i41 + 8 | 0;
      i24 = HEAP32[i35 >> 2] | 0;
      i25 = HEAP32[i35 + 4 >> 2] | 0;
      i26 = HEAP32[i35 + 8 >> 2] | 0;
      i27 = HEAP32[i35 + 12 >> 2] | 0;
      i28 = HEAP32[i35 + 16 >> 2] | 0;
      i29 = HEAP32[i35 + 20 >> 2] | 0;
      i30 = HEAP32[i35 + 24 >> 2] | 0;
      i31 = HEAP32[i35 + 28 >> 2] | 0;
      i32 = HEAP32[i35 + 32 >> 2] | 0;
      i33 = HEAP32[i35 + 36 >> 2] | 0;
      i34 = HEAP32[i35 + 40 >> 2] | 0;
      i11 = HEAP32[i35 + 44 >> 2] | 0;
      i12 = i42 + 4 | 0;
      i13 = i42 + 8 | 0;
      i14 = i42 + 8 | 0;
      i15 = i41 + 8 | 0;
      i4 = 0;
      i3 = 0;
      L79 : while (1) {
       if (!i4) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i36, i1 + 12 | 0);
        i4 = __Znwj(16) | 0;
        __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i4, HEAP32[i1 + 24 >> 2] | 0);
        HEAP32[i17 >> 2] = i4;
        i4 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i36, i44) | 0;
        HEAP32[i38 >> 2] = i4;
        i9 = HEAP32[i17 >> 2] | 0;
        i8 = i9 + 4 | 0;
        i5 = HEAP32[i8 >> 2] | 0;
        i6 = HEAP32[i5 + 44 >> 2] | 0;
        i6 = (i6 | 0) == 0 ? 0 : i6 + -40 | 0;
        if ((i6 | 0) != (i5 | 0)) {
         i7 = i9 + 8 | 0;
         while (1) {
          i5 = HEAP32[i6 + 44 >> 2] | 0;
          i5 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
          __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i7, i6);
          __ZdlPv(i6);
          if ((i5 | 0) == (HEAP32[i8 >> 2] | 0)) break; else i6 = i5;
         }
        }
        __ZdlPv(i5);
        __ZdlPv(i9);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i36);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i37, i1 + 12 | 0);
        i8 = __Znwj(16) | 0;
        __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i8, HEAP32[i1 + 24 >> 2] | 0);
        HEAP32[i18 >> 2] = i8;
        i8 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i37, i44) | 0;
        i7 = HEAP32[i18 >> 2] | 0;
        i6 = i7 + 4 | 0;
        i3 = HEAP32[i6 >> 2] | 0;
        i4 = HEAP32[i3 + 44 >> 2] | 0;
        i4 = (i4 | 0) == 0 ? 0 : i4 + -40 | 0;
        if ((i4 | 0) != (i3 | 0)) {
         i5 = i7 + 8 | 0;
         while (1) {
          i3 = HEAP32[i4 + 44 >> 2] | 0;
          i3 = (i3 | 0) == 0 ? 0 : i3 + -40 | 0;
          __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i5, i4);
          __ZdlPv(i4);
          if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) break; else i4 = i3;
         }
        }
        __ZdlPv(i3);
        __ZdlPv(i7);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i37);
        HEAP32[i40 >> 2] = i8;
        HEAP32[i39 >> 2] = 0;
        HEAP32[i19 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        __ZNSt3__16vectorIP17implicit_functionNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i39, i38);
        i3 = HEAP32[i19 >> 2] | 0;
        if ((i3 | 0) == (HEAP32[i21 >> 2] | 0)) __ZNSt3__16vectorIP17implicit_functionNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i39, i40); else {
         HEAP32[i3 >> 2] = i8;
         HEAP32[i19 >> 2] = (HEAP32[i19 >> 2] | 0) + 4;
        }
        i10 = __Znwj(24) | 0;
        HEAP32[i41 >> 2] = 0;
        HEAP32[i22 >> 2] = 0;
        HEAP32[i23 >> 2] = 0;
        i3 = (HEAP32[i19 >> 2] | 0) - (HEAP32[i39 >> 2] | 0) | 0;
        i4 = i3 >> 2;
        do if (i4 | 0) {
         if (i4 >>> 0 > 1073741823) {
          i1 = 34;
          break L79;
         }
         i5 = __Znwj(i3) | 0;
         HEAP32[i22 >> 2] = i5;
         HEAP32[i41 >> 2] = i5;
         HEAP32[i15 >> 2] = i5 + (i4 << 2);
         i3 = HEAP32[i39 >> 2] | 0;
         i6 = HEAP32[i19 >> 2] | 0;
         if ((i3 | 0) == (i6 | 0)) break;
         i4 = i5;
         do {
          HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
          i4 = (HEAP32[i22 >> 2] | 0) + 4 | 0;
          HEAP32[i22 >> 2] = i4;
          i3 = i3 + 4 | 0;
         } while ((i3 | 0) != (i6 | 0));
        } while (0);
        HEAP32[i10 >> 2] = 20584;
        i8 = __Znaj(48) | 0;
        HEAP32[i10 + 4 >> 2] = i8;
        i7 = __Znaj(48) | 0;
        HEAP32[i10 + 8 >> 2] = i7;
        HEAP32[i8 >> 2] = i24;
        HEAP32[i8 + 4 >> 2] = i25;
        HEAP32[i8 + 8 >> 2] = i26;
        HEAP32[i8 + 12 >> 2] = i27;
        HEAP32[i8 + 16 >> 2] = i28;
        HEAP32[i8 + 20 >> 2] = i29;
        HEAP32[i8 + 24 >> 2] = i30;
        HEAP32[i8 + 28 >> 2] = i31;
        HEAP32[i8 + 32 >> 2] = i32;
        HEAP32[i8 + 36 >> 2] = i33;
        HEAP32[i8 + 40 >> 2] = i34;
        HEAP32[i8 + 44 >> 2] = i11;
        __Z12InvertMatrixPKfPf(i8, i7) | 0;
        HEAP32[i10 >> 2] = 20540;
        i7 = i10 + 12 | 0;
        HEAP32[i7 >> 2] = 0;
        i8 = i10 + 16 | 0;
        HEAP32[i8 >> 2] = 0;
        i5 = i10 + 20 | 0;
        HEAP32[i5 >> 2] = 0;
        i3 = HEAP32[i41 >> 2] | 0;
        i4 = (HEAP32[i22 >> 2] | 0) - i3 | 0;
        i6 = i4 >> 2;
        do if (i6) {
         if (i6 >>> 0 > 1073741823) {
          i1 = 40;
          break L79;
         }
         i4 = __Znwj(i4) | 0;
         HEAP32[i8 >> 2] = i4;
         HEAP32[i7 >> 2] = i4;
         HEAP32[i5 >> 2] = i4 + (i6 << 2);
         i3 = HEAP32[i41 >> 2] | 0;
         i5 = HEAP32[i22 >> 2] | 0;
         if ((i3 | 0) == (i5 | 0)) break;
         do {
          HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
          i4 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
          HEAP32[i8 >> 2] = i4;
          i3 = i3 + 4 | 0;
         } while ((i3 | 0) != (i5 | 0));
         i3 = HEAP32[i41 >> 2] | 0;
        } while (0);
        i4 = i3;
        if (i3 | 0) {
         i5 = HEAP32[i22 >> 2] | 0;
         if ((i5 | 0) != (i3 | 0)) HEAP32[i22 >> 2] = i5 + (~((i5 + -4 - i4 | 0) >>> 2) << 2);
         __ZdlPv(i3);
        }
        i4 = __Znwj(24) | 0;
        HEAP32[i42 >> 2] = 0;
        HEAP32[i12 >> 2] = 0;
        HEAP32[i13 >> 2] = 0;
        i3 = (HEAP32[i19 >> 2] | 0) - (HEAP32[i39 >> 2] | 0) | 0;
        i5 = i3 >> 2;
        do if (i5 | 0) {
         if (i5 >>> 0 > 1073741823) {
          i1 = 51;
          break L79;
         }
         i6 = __Znwj(i3) | 0;
         HEAP32[i12 >> 2] = i6;
         HEAP32[i42 >> 2] = i6;
         HEAP32[i14 >> 2] = i6 + (i5 << 2);
         i3 = HEAP32[i39 >> 2] | 0;
         i7 = HEAP32[i19 >> 2] | 0;
         if ((i3 | 0) == (i7 | 0)) break;
         i5 = i6;
         do {
          HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
          i5 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
          HEAP32[i12 >> 2] = i5;
          i3 = i3 + 4 | 0;
         } while ((i3 | 0) != (i7 | 0));
        } while (0);
        HEAP32[i4 >> 2] = 20584;
        i9 = __Znaj(48) | 0;
        HEAP32[i4 + 4 >> 2] = i9;
        i8 = __Znaj(48) | 0;
        HEAP32[i4 + 8 >> 2] = i8;
        HEAP32[i9 >> 2] = 1065353216;
        i6 = i9 + 4 | 0;
        HEAP32[i6 >> 2] = 0;
        HEAP32[i6 + 4 >> 2] = 0;
        HEAP32[i6 + 8 >> 2] = 0;
        HEAP32[i6 + 12 >> 2] = 0;
        HEAP32[i9 + 20 >> 2] = 1065353216;
        i6 = i9 + 24 | 0;
        HEAP32[i6 >> 2] = 0;
        HEAP32[i6 + 4 >> 2] = 0;
        HEAP32[i6 + 8 >> 2] = 0;
        HEAP32[i6 + 12 >> 2] = 0;
        HEAP32[i9 + 40 >> 2] = 1065353216;
        HEAP32[i9 + 44 >> 2] = 0;
        __Z12InvertMatrixPKfPf(i9, i8) | 0;
        HEAP32[i4 >> 2] = 20540;
        i8 = i4 + 12 | 0;
        HEAP32[i8 >> 2] = 0;
        i9 = i4 + 16 | 0;
        HEAP32[i9 >> 2] = 0;
        i6 = i4 + 20 | 0;
        HEAP32[i6 >> 2] = 0;
        i3 = HEAP32[i42 >> 2] | 0;
        i5 = (HEAP32[i12 >> 2] | 0) - i3 | 0;
        i7 = i5 >> 2;
        do if (i7) {
         if (i7 >>> 0 > 1073741823) {
          i1 = 57;
          break L79;
         }
         i5 = __Znwj(i5) | 0;
         HEAP32[i9 >> 2] = i5;
         HEAP32[i8 >> 2] = i5;
         HEAP32[i6 >> 2] = i5 + (i7 << 2);
         i3 = HEAP32[i42 >> 2] | 0;
         i6 = HEAP32[i12 >> 2] | 0;
         if ((i3 | 0) == (i6 | 0)) break;
         do {
          HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
          i5 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
          HEAP32[i9 >> 2] = i5;
          i3 = i3 + 4 | 0;
         } while ((i3 | 0) != (i6 | 0));
         i3 = HEAP32[i42 >> 2] | 0;
        } while (0);
        i5 = i3;
        if (i3 | 0) {
         i6 = HEAP32[i12 >> 2] | 0;
         if ((i6 | 0) != (i3 | 0)) HEAP32[i12 >> 2] = i6 + (~((i6 + -4 - i5 | 0) >>> 2) << 2);
         __ZdlPv(i3);
        }
        HEAP32[i38 >> 2] = i4;
        i3 = HEAP32[i39 >> 2] | 0;
        i5 = i3;
        if (i3 | 0) {
         i6 = HEAP32[i19 >> 2] | 0;
         if ((i6 | 0) != (i3 | 0)) HEAP32[i19 >> 2] = i6 + (~((i6 + -4 - i5 | 0) >>> 2) << 2);
         __ZdlPv(i3);
        }
        i3 = i10;
       }
       i35 = HEAP32[i1 + 44 >> 2] | 0;
       i1 = (i35 | 0) == 0 ? 0 : i35 + -40 | 0;
       if ((i1 | 0) == (i16 | 0)) {
        i43 = i3;
        break L77;
       }
      }
      if ((i1 | 0) == 34) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i41); else if ((i1 | 0) == 40) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7); else if ((i1 | 0) == 51) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i42); else if ((i1 | 0) == 57) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
     } else i43 = 0; while (0);
     i44 = i43;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
     STACKTOP = i46;
     return i44 | 0;
    }
    __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i35, i7);
    i44 = __Znwj(40) | 0;
    HEAP32[i44 >> 2] = 20496;
    HEAPF32[i44 + 4 >> 2] = 1.0;
    HEAPF32[i44 + 8 >> 2] = 1.0;
    HEAPF32[i44 + 12 >> 2] = 1.0;
    HEAPF32[i44 + 16 >> 2] = 1.0;
    HEAPF32[i44 + 20 >> 2] = 0.0;
    HEAPF32[i44 + 24 >> 2] = 0.0;
    HEAPF32[i44 + 28 >> 2] = -.5;
    i42 = __Znaj(48) | 0;
    HEAP32[i44 + 32 >> 2] = i42;
    i43 = __Znaj(48) | 0;
    HEAP32[i44 + 36 >> 2] = i43;
    HEAP32[i42 >> 2] = HEAP32[i35 >> 2];
    HEAP32[i42 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
    HEAP32[i42 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
    HEAP32[i42 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
    HEAP32[i42 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
    HEAP32[i42 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
    HEAP32[i42 + 24 >> 2] = HEAP32[i35 + 24 >> 2];
    HEAP32[i42 + 28 >> 2] = HEAP32[i35 + 28 >> 2];
    HEAP32[i42 + 32 >> 2] = HEAP32[i35 + 32 >> 2];
    HEAP32[i42 + 36 >> 2] = HEAP32[i35 + 36 >> 2];
    HEAP32[i42 + 40 >> 2] = HEAP32[i35 + 40 >> 2];
    HEAP32[i42 + 44 >> 2] = HEAP32[i35 + 44 >> 2];
    __Z12InvertMatrixPKfPf(i42, i43) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
    STACKTOP = i46;
    return i44 | 0;
   }
   __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i35, i7);
   i44 = __Znwj(36) | 0;
   HEAP32[i44 >> 2] = 20452;
   HEAPF32[i44 + 4 >> 2] = .5;
   HEAPF32[i44 + 8 >> 2] = .5;
   HEAPF32[i44 + 12 >> 2] = .5;
   HEAPF32[i44 + 16 >> 2] = 0.0;
   HEAPF32[i44 + 20 >> 2] = 0.0;
   HEAPF32[i44 + 24 >> 2] = 0.0;
   i42 = __Znaj(48) | 0;
   HEAP32[i44 + 28 >> 2] = i42;
   i43 = __Znaj(48) | 0;
   HEAP32[i44 + 32 >> 2] = i43;
   HEAP32[i42 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i42 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
   HEAP32[i42 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
   HEAP32[i42 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
   HEAP32[i42 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
   HEAP32[i42 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
   HEAP32[i42 + 24 >> 2] = HEAP32[i35 + 24 >> 2];
   HEAP32[i42 + 28 >> 2] = HEAP32[i35 + 28 >> 2];
   HEAP32[i42 + 32 >> 2] = HEAP32[i35 + 32 >> 2];
   HEAP32[i42 + 36 >> 2] = HEAP32[i35 + 36 >> 2];
   HEAP32[i42 + 40 >> 2] = HEAP32[i35 + 40 >> 2];
   HEAP32[i42 + 44 >> 2] = HEAP32[i35 + 44 >> 2];
   __Z12InvertMatrixPKfPf(i42, i43) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
   STACKTOP = i46;
   return i44 | 0;
  }
  __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i35, i7);
  i44 = __Znwj(40) | 0;
  HEAP32[i44 >> 2] = 20408;
  HEAPF32[i44 + 24 >> 2] = .5;
  HEAPF32[i44 + 28 >> 2] = .5;
  HEAPF32[i44 + 20 >> 2] = 1.0;
  HEAPF32[i44 + 4 >> 2] = 0.0;
  HEAPF32[i44 + 8 >> 2] = 0.0;
  HEAPF32[i44 + 12 >> 2] = -.5;
  i42 = __Znaj(12) | 0;
  HEAP32[i44 + 16 >> 2] = i42;
  HEAPF32[i42 >> 2] = 0.0;
  HEAPF32[i42 + 4 >> 2] = 0.0;
  HEAPF32[i42 + 8 >> 2] = 1.0;
  i42 = __Znaj(48) | 0;
  HEAP32[i44 + 32 >> 2] = i42;
  i43 = __Znaj(48) | 0;
  HEAP32[i44 + 36 >> 2] = i43;
  HEAP32[i42 >> 2] = HEAP32[i35 >> 2];
  HEAP32[i42 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
  HEAP32[i42 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
  HEAP32[i42 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
  HEAP32[i42 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
  HEAP32[i42 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
  HEAP32[i42 + 24 >> 2] = HEAP32[i35 + 24 >> 2];
  HEAP32[i42 + 28 >> 2] = HEAP32[i35 + 28 >> 2];
  HEAP32[i42 + 32 >> 2] = HEAP32[i35 + 32 >> 2];
  HEAP32[i42 + 36 >> 2] = HEAP32[i35 + 36 >> 2];
  HEAP32[i42 + 40 >> 2] = HEAP32[i35 + 40 >> 2];
  HEAP32[i42 + 44 >> 2] = HEAP32[i35 + 44 >> 2];
  __Z12InvertMatrixPKfPf(i42, i43) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
  STACKTOP = i46;
  return i44 | 0;
 }
 __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i35, i7);
 i1 = __Znwj(96) | 0;
 HEAP32[i1 >> 2] = 20364;
 i3 = i1 + 4 | 0;
 i4 = i3;
 i5 = i4 + 68 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i5 | 0));
 HEAPF32[i3 >> 2] = .5;
 HEAPF32[i1 + 16 >> 2] = -.5;
 HEAPF32[i1 + 32 >> 2] = .5;
 HEAPF32[i1 + 44 >> 2] = -.5;
 HEAPF32[i1 + 60 >> 2] = .5;
 HEAPF32[i1 + 72 >> 2] = -.5;
 HEAPF32[i1 + 76 >> 2] = 0.0;
 HEAPF32[i1 + 80 >> 2] = 0.0;
 HEAPF32[i1 + 84 >> 2] = 0.0;
 i43 = __Znaj(48) | 0;
 HEAP32[i1 + 88 >> 2] = i43;
 i44 = __Znaj(48) | 0;
 HEAP32[i1 + 92 >> 2] = i44;
 HEAP32[i43 >> 2] = HEAP32[i35 >> 2];
 HEAP32[i43 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
 HEAP32[i43 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
 HEAP32[i43 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
 HEAP32[i43 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
 HEAP32[i43 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
 HEAP32[i43 + 24 >> 2] = HEAP32[i35 + 24 >> 2];
 HEAP32[i43 + 28 >> 2] = HEAP32[i35 + 28 >> 2];
 HEAP32[i43 + 32 >> 2] = HEAP32[i35 + 32 >> 2];
 HEAP32[i43 + 36 >> 2] = HEAP32[i35 + 36 >> 2];
 HEAP32[i43 + 40 >> 2] = HEAP32[i35 + 40 >> 2];
 HEAP32[i43 + 44 >> 2] = HEAP32[i35 + 44 >> 2];
 __Z12InvertMatrixPKfPf(i43, i44) | 0;
 i44 = i1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
 STACKTOP = i46;
 return i44 | 0;
}

function __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10definitionINS_6spirit7classic7scannerINS4_11__wrap_iterIPcEENSH_16scanner_policiesINSH_28skip_parser_iteration_policyINSH_11alternativeINSO_INSH_12space_parserENSH_13confix_parserINSH_6strlitIPKcEENSH_11kleene_starINSH_14anychar_parserEEENSO_INSH_10eol_parserENSH_10end_parserEEENSH_21unary_parser_categoryENSH_10non_nestedENSH_9is_lexemeEEEEENSQ_ISU_SX_SU_S11_S12_S13_EEEENSH_16iteration_policyEEENSH_12match_policyENSH_13action_policyEEEEEEC2ERKSE_(i15, i14) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0;
 i69 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 i50 = i69 + 1e3 | 0;
 i67 = i69 + 940 | 0;
 i1 = i69 + 988 | 0;
 i63 = i69 + 916 | 0;
 i2 = i69 + 976 | 0;
 i66 = i69 + 904 | 0;
 i3 = i69 + 964 | 0;
 i61 = i69 + 880 | 0;
 i4 = i69 + 952 | 0;
 i65 = i69 + 868 | 0;
 i5 = i69 + 928 | 0;
 i62 = i69 + 844 | 0;
 i6 = i69 + 892 | 0;
 i68 = i69 + 832 | 0;
 i7 = i69 + 856 | 0;
 i64 = i69 + 808 | 0;
 i8 = i69 + 820 | 0;
 i13 = i69 + 472 | 0;
 i11 = i69 + 448 | 0;
 i12 = i69 + 792 | 0;
 i19 = i69 + 400 | 0;
 i18 = i69 + 360 | 0;
 i17 = i69 + 328 | 0;
 i16 = i69 + 304 | 0;
 i24 = i69 + 248 | 0;
 i22 = i69 + 208 | 0;
 i20 = i69 + 184 | 0;
 i21 = i69 + 776 | 0;
 i23 = i69 + 760 | 0;
 i29 = i69 + 136 | 0;
 i28 = i69 + 96 | 0;
 i27 = i69 + 64 | 0;
 i26 = i69 + 40 | 0;
 i30 = i69 + 744 | 0;
 i36 = i69 + 712 | 0;
 i37 = i69 + 692 | 0;
 i38 = i69 + 672 | 0;
 i39 = i69 + 656 | 0;
 i42 = i69 + 648 | 0;
 i48 = i69 + 632 | 0;
 i40 = i69 + 624 | 0;
 i41 = i69 + 616 | 0;
 i43 = i69 + 604 | 0;
 i45 = i69 + 1024 | 0;
 i47 = i69 + 1021 | 0;
 i44 = i69 + 1018 | 0;
 i46 = i69 + 1015 | 0;
 i53 = i69;
 i52 = i69 + 584 | 0;
 i51 = i69 + 568 | 0;
 i56 = i69 + 544 | 0;
 i58 = i69 + 528 | 0;
 i59 = i69 + 520 | 0;
 i60 = i69 + 508 | 0;
 i54 = i69 + 1012 | 0;
 i31 = i15 + 4 | 0;
 i25 = i15 + 8 | 0;
 i32 = i15 + 12 | 0;
 i33 = i15 + 16 | 0;
 i34 = i15 + 20 | 0;
 i49 = i15 + 24 | 0;
 i35 = i15 + 28 | 0;
 i55 = i15 + 32 | 0;
 i57 = i15 + 36 | 0;
 i9 = i15;
 i10 = i9 + 40 | 0;
 do {
  HEAP32[i9 >> 2] = 0;
  i9 = i9 + 4 | 0;
 } while ((i9 | 0) < (i10 | 0));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 34121, 24);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i67, i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 34146, 21);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i63, i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i3, 34168, 19);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i66, i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 34188, 19);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i61, i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 34208, 20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i65, i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, 34229, 12);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i62, i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i7, 34242, 14);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i68, i7);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i8, 34257, 23);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i64, i8);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i67);
 HEAP32[i11 >> 2] = i31;
 HEAP32[i11 + 4 >> 2] = i32;
 i4 = i11 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i63);
 i5 = i12 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 i2 = i11;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 i3 = i13;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i3 + 4 >> 2] = i1;
 i3 = i13 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i4);
 i1 = i13 + 20 | 0;
 HEAP8[i1 >> 0] = HEAP8[i12 >> 0] | 0;
 i2 = i13 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i5);
 i12 = __Znwj(40) | 0;
 HEAP32[i12 >> 2] = 20980;
 i10 = i13;
 i11 = HEAP32[i10 + 4 >> 2] | 0;
 i13 = i12 + 4 | 0;
 HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i13 + 4 >> 2] = i11;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i12 + 12 | 0, i3);
 HEAP8[i12 + 24 >> 0] = HEAP8[i1 >> 0] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i12 + 28 | 0, i2);
 i1 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = i12;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 i11 = i14 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i66);
 i5 = i16;
 HEAP32[i5 >> 2] = 125;
 HEAP32[i5 + 4 >> 2] = i11;
 i5 = i16 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 HEAP32[i17 >> 2] = i25;
 HEAP8[i17 + 4 >> 0] = 44;
 i15 = i17 + 8 | 0;
 i3 = i16;
 i2 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i15;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i4 + 4 >> 2] = i2;
 i4 = i17 + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i5);
 i2 = i18;
 HEAP32[i2 >> 2] = 125;
 HEAP32[i2 + 4 >> 2] = i11;
 i2 = i18 + 8 | 0;
 i3 = i17;
 i17 = HEAP32[i3 + 4 >> 2] | 0;
 i14 = i2;
 HEAP32[i14 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i14 + 4 >> 2] = i17;
 i14 = i18 + 16 | 0;
 i17 = i15;
 i15 = HEAP32[i17 + 4 >> 2] | 0;
 i3 = i14;
 HEAP32[i3 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i3 + 4 >> 2] = i15;
 i3 = i18 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i4);
 i15 = i19;
 HEAP32[i15 >> 2] = 123;
 HEAP32[i15 + 4 >> 2] = i11;
 i15 = i19 + 8 | 0;
 i17 = i18;
 i18 = HEAP32[i17 + 4 >> 2] | 0;
 i16 = i15;
 HEAP32[i16 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i16 + 4 >> 2] = i18;
 i16 = i19 + 16 | 0;
 i18 = HEAP32[i2 + 4 >> 2] | 0;
 i17 = i16;
 HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i17 + 4 >> 2] = i18;
 i17 = i19 + 24 | 0;
 i18 = HEAP32[i14 + 4 >> 2] | 0;
 i2 = i17;
 HEAP32[i2 >> 2] = HEAP32[i14 >> 2];
 HEAP32[i2 + 4 >> 2] = i18;
 i2 = i19 + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 i18 = __Znwj(48) | 0;
 HEAP32[i18 >> 2] = 21144;
 i14 = i19;
 i1 = HEAP32[i14 + 4 >> 2] | 0;
 i19 = i18 + 4 | 0;
 HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
 HEAP32[i19 + 4 >> 2] = i1;
 i19 = HEAP32[i15 + 4 >> 2] | 0;
 i1 = i18 + 12 | 0;
 HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i1 + 4 >> 2] = i19;
 i1 = HEAP32[i16 + 4 >> 2] | 0;
 i19 = i18 + 20 | 0;
 HEAP32[i19 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i19 + 4 >> 2] = i1;
 i19 = HEAP32[i17 + 4 >> 2] | 0;
 i1 = i18 + 28 | 0;
 HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i1 + 4 >> 2] = i19;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i18 + 36 | 0, i2);
 i1 = HEAP32[i31 >> 2] | 0;
 HEAP32[i31 >> 2] = i18;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 i10 = i49;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i65);
 HEAP32[i20 >> 2] = i10;
 HEAP32[i20 + 4 >> 2] = i11;
 i8 = i20 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i8, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i62);
 HEAP8[i21 >> 0] = 58;
 i9 = i21 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i9, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 i5 = i20;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i7 = i22;
 HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i7 + 4 >> 2] = i4;
 i7 = i22 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i7, i8);
 i4 = i22 + 20 | 0;
 HEAP8[i4 >> 0] = HEAP8[i21 >> 0] | 0;
 i5 = i22 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i68);
 HEAP32[i23 >> 2] = i34;
 i6 = i23 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i6, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 i1 = i22;
 i22 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i24;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = i22;
 i3 = i24 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i7);
 i22 = i24 + 20 | 0;
 HEAP8[i22 >> 0] = HEAP8[i4 >> 0] | 0;
 i4 = i24 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i5);
 i1 = i24 + 36 | 0;
 HEAP32[i1 >> 2] = HEAP32[i23 >> 2];
 i2 = i24 + 40 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i6);
 i23 = __Znwj(56) | 0;
 HEAP32[i23 >> 2] = 21168;
 i20 = i24;
 i21 = HEAP32[i20 + 4 >> 2] | 0;
 i24 = i23 + 4 | 0;
 HEAP32[i24 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i24 + 4 >> 2] = i21;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i23 + 12 | 0, i3);
 HEAP8[i23 + 24 >> 0] = HEAP8[i22 >> 0] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i23 + 28 | 0, i4);
 HEAP32[i23 + 40 >> 2] = HEAP32[i1 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i23 + 44 | 0, i2);
 i1 = HEAP32[i25 >> 2] | 0;
 HEAP32[i25 >> 2] = i23;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i61);
 i5 = i26;
 HEAP32[i5 >> 2] = 93;
 HEAP32[i5 + 4 >> 2] = i11;
 i5 = i26 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 HEAP32[i27 >> 2] = i33;
 HEAP8[i27 + 4 >> 0] = 44;
 i25 = i27 + 8 | 0;
 i3 = i26;
 i2 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i25;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i4 + 4 >> 2] = i2;
 i4 = i27 + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i5);
 i2 = i28;
 HEAP32[i2 >> 2] = 93;
 HEAP32[i2 + 4 >> 2] = i11;
 i2 = i28 + 8 | 0;
 i3 = i27;
 i27 = HEAP32[i3 + 4 >> 2] | 0;
 i24 = i2;
 HEAP32[i24 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i24 + 4 >> 2] = i27;
 i24 = i28 + 16 | 0;
 i27 = i25;
 i25 = HEAP32[i27 + 4 >> 2] | 0;
 i3 = i24;
 HEAP32[i3 >> 2] = HEAP32[i27 >> 2];
 HEAP32[i3 + 4 >> 2] = i25;
 i3 = i28 + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i4);
 i25 = i29;
 HEAP32[i25 >> 2] = 91;
 HEAP32[i25 + 4 >> 2] = i11;
 i25 = i29 + 8 | 0;
 i27 = i28;
 i28 = HEAP32[i27 + 4 >> 2] | 0;
 i26 = i25;
 HEAP32[i26 >> 2] = HEAP32[i27 >> 2];
 HEAP32[i26 + 4 >> 2] = i28;
 i26 = i29 + 16 | 0;
 i28 = HEAP32[i2 + 4 >> 2] | 0;
 i27 = i26;
 HEAP32[i27 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i27 + 4 >> 2] = i28;
 i27 = i29 + 24 | 0;
 i28 = HEAP32[i24 + 4 >> 2] | 0;
 i2 = i27;
 HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
 HEAP32[i2 + 4 >> 2] = i28;
 i2 = i29 + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 i28 = __Znwj(48) | 0;
 HEAP32[i28 >> 2] = 21144;
 i24 = i29;
 i1 = HEAP32[i24 + 4 >> 2] | 0;
 i29 = i28 + 4 | 0;
 HEAP32[i29 >> 2] = HEAP32[i24 >> 2];
 HEAP32[i29 + 4 >> 2] = i1;
 i29 = HEAP32[i25 + 4 >> 2] | 0;
 i1 = i28 + 12 | 0;
 HEAP32[i1 >> 2] = HEAP32[i25 >> 2];
 HEAP32[i1 + 4 >> 2] = i29;
 i1 = HEAP32[i26 + 4 >> 2] | 0;
 i29 = i28 + 20 | 0;
 HEAP32[i29 >> 2] = HEAP32[i26 >> 2];
 HEAP32[i29 + 4 >> 2] = i1;
 i29 = HEAP32[i27 + 4 >> 2] | 0;
 i1 = i28 + 28 | 0;
 HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
 HEAP32[i1 + 4 >> 2] = i29;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i28 + 36 | 0, i2);
 i1 = HEAP32[i32 >> 2] | 0;
 HEAP32[i32 >> 2] = i28;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i68);
 HEAP32[i30 >> 2] = i34;
 i2 = i30 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 i29 = __Znwj(20) | 0;
 HEAP32[i29 >> 2] = 21192;
 HEAP32[i29 + 4 >> 2] = HEAP32[i30 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i29 + 8 | 0, i2);
 i1 = HEAP32[i33 >> 2] | 0;
 HEAP32[i33 >> 2] = i29;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 i33 = __Znwj(52) | 0;
 HEAP32[i33 >> 2] = 21216;
 HEAP32[i33 + 4 >> 2] = i10;
 HEAP32[i33 + 8 >> 2] = i11;
 HEAP32[i33 + 12 >> 2] = i35;
 HEAP32[i33 + 16 >> 2] = 49799;
 HEAP32[i33 + 20 >> 2] = 49803;
 HEAP32[i33 + 24 >> 2] = 49804;
 HEAP32[i33 + 28 >> 2] = 49809;
 HEAP32[i33 + 32 >> 2] = 34281;
 HEAP32[i33 + 36 >> 2] = 34285;
 HEAP32[i33 + 40 >> 2] = i11;
 HEAP32[i33 + 44 >> 2] = i31;
 HEAP32[i33 + 48 >> 2] = i32;
 i1 = HEAP32[i34 >> 2] | 0;
 HEAP32[i34 >> 2] = i33;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 HEAP32[i48 >> 2] = 0;
 HEAP32[i48 + 4 >> 2] = 0;
 HEAP32[i48 + 8 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, 101);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, 69);
 __ZN5boost6spirit7classic5chsetIcEC2IcEEPKT_(i42, (HEAP8[i48 >> 0] & 1) == 0 ? i48 + 1 | 0 : HEAP32[i48 + 8 >> 2] | 0);
 HEAP32[i43 >> 2] = 0;
 HEAP32[i43 + 4 >> 2] = 0;
 HEAP32[i43 + 8 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i43, 45);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i43, 43);
 __ZN5boost6spirit7classic5chsetIcEC2IcEEPKT_(i41, (HEAP8[i43 >> 0] & 1) == 0 ? i43 + 1 | 0 : HEAP32[i43 + 8 >> 2] | 0);
 i33 = __Znwj(32) | 0;
 i1 = HEAP32[i41 >> 2] | 0;
 HEAP32[i33 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i33 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i33 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i33 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i33 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i33 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i33 + 24 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i33 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
 HEAP32[i40 >> 2] = i33;
 i1 = i40 + 4 | 0;
 HEAP32[i1 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i40, i33, i1);
 __ZN5boost6spirit7classicrsINS1_5chsetIcEENS1_8optionalIS4_EEEENS1_8sequenceIT_T0_EERKNS1_6parserIS8_EERKNSB_IS9_EE(i39, i42, i40);
 __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i38, i39);
 __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i37, i38);
 i1 = HEAP8[i38 + 16 >> 0] | 0;
 HEAP8[i37 + 16 >> 0] = i1;
 HEAP8[i36 >> 0] = 45;
 i33 = i36 + 1 | 0;
 HEAP8[i33 >> 0] = 48;
 HEAP8[i33 + 1 >> 0] = 49;
 HEAP8[i33 + 2 >> 0] = 57;
 HEAP8[i33 + 3 >> 0] = 0;
 i33 = i36 + 5 | 0;
 HEAP8[i33 >> 0] = 46;
 HEAP8[i33 + 1 >> 0] = 0;
 i33 = i36 + 8 | 0;
 __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i33, i37);
 HEAP8[i36 + 24 >> 0] = i1;
 i34 = __Znwj(32) | 0;
 HEAP32[i34 >> 2] = 21240;
 i32 = i34 + 4 | 0;
 HEAP32[i32 >> 2] = HEAP32[i36 >> 2];
 HEAP16[i32 + 4 >> 1] = HEAP16[i36 + 4 >> 1] | 0;
 HEAP8[i32 + 6 >> 0] = HEAP8[i36 + 6 >> 0] | 0;
 __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i34 + 12 | 0, i33);
 HEAP8[i34 + 28 >> 0] = i1;
 i1 = HEAP32[i35 >> 2] | 0;
 HEAP32[i35 >> 2] = i34;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i36 + 20 >> 2] | 0;
 if ((i1 | 0 ? (i34 = i1 + 4 | 0, i35 = HEAP32[i34 >> 2] | 0, HEAP32[i34 >> 2] = i35 - 1, (i35 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i34 = i1 + 8 | 0, i35 = HEAP32[i34 >> 2] | 0, HEAP32[i34 >> 2] = i35 - 1, (i35 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i36 + 12 >> 2] | 0;
 if ((i1 | 0 ? (i35 = i1 + 4 | 0, i36 = HEAP32[i35 >> 2] | 0, HEAP32[i35 >> 2] = i36 - 1, (i36 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i35 = i1 + 8 | 0, i36 = HEAP32[i35 >> 2] | 0, HEAP32[i35 >> 2] = i36 - 1, (i36 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i37 + 12 >> 2] | 0;
 if ((i1 | 0 ? (i35 = i1 + 4 | 0, i36 = HEAP32[i35 >> 2] | 0, HEAP32[i35 >> 2] = i36 - 1, (i36 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i35 = i1 + 8 | 0, i36 = HEAP32[i35 >> 2] | 0, HEAP32[i35 >> 2] = i36 - 1, (i36 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i37 + 4 >> 2] | 0;
 if ((i1 | 0 ? (i36 = i1 + 4 | 0, i37 = HEAP32[i36 >> 2] | 0, HEAP32[i36 >> 2] = i37 - 1, (i37 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i36 = i1 + 8 | 0, i37 = HEAP32[i36 >> 2] | 0, HEAP32[i36 >> 2] = i37 - 1, (i37 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i38 + 12 >> 2] | 0;
 if ((i1 | 0 ? (i36 = i1 + 4 | 0, i37 = HEAP32[i36 >> 2] | 0, HEAP32[i36 >> 2] = i37 - 1, (i37 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i36 = i1 + 8 | 0, i37 = HEAP32[i36 >> 2] | 0, HEAP32[i36 >> 2] = i37 - 1, (i37 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i38 + 4 >> 2] | 0;
 if ((i1 | 0 ? (i37 = i1 + 4 | 0, i38 = HEAP32[i37 >> 2] | 0, HEAP32[i37 >> 2] = i38 - 1, (i38 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i37 = i1 + 8 | 0, i38 = HEAP32[i37 >> 2] | 0, HEAP32[i37 >> 2] = i38 - 1, (i38 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i39 + 12 >> 2] | 0;
 if ((i1 | 0 ? (i37 = i1 + 4 | 0, i38 = HEAP32[i37 >> 2] | 0, HEAP32[i37 >> 2] = i38 - 1, (i38 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i37 = i1 + 8 | 0, i38 = HEAP32[i37 >> 2] | 0, HEAP32[i37 >> 2] = i38 - 1, (i38 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i39 + 4 >> 2] | 0;
 if ((i1 | 0 ? (i38 = i1 + 4 | 0, i39 = HEAP32[i38 >> 2] | 0, HEAP32[i38 >> 2] = i39 - 1, (i39 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i38 = i1 + 8 | 0, i39 = HEAP32[i38 >> 2] | 0, HEAP32[i38 >> 2] = i39 - 1, (i39 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i40 + 4 >> 2] | 0;
 if ((i1 | 0 ? (i39 = i1 + 4 | 0, i40 = HEAP32[i39 >> 2] | 0, HEAP32[i39 >> 2] = i40 - 1, (i40 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i39 = i1 + 8 | 0, i40 = HEAP32[i39 >> 2] | 0, HEAP32[i39 >> 2] = i40 - 1, (i40 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i41 + 4 >> 2] | 0;
 if ((i1 | 0 ? (i40 = i1 + 4 | 0, i41 = HEAP32[i40 >> 2] | 0, HEAP32[i40 >> 2] = i41 - 1, (i41 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i40 = i1 + 8 | 0, i41 = HEAP32[i40 >> 2] | 0, HEAP32[i40 >> 2] = i41 - 1, (i41 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i43);
 i1 = HEAP32[i42 + 4 >> 2] | 0;
 do if (i1 | 0 ? (i42 = i1 + 4 | 0, i43 = HEAP32[i42 >> 2] | 0, HEAP32[i42 >> 2] = i43 - 1, (i43 | 0) == 1) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i42 = i1 + 8 | 0;
  i43 = HEAP32[i42 >> 2] | 0;
  HEAP32[i42 >> 2] = i43 - 1;
  if ((i43 | 0) != 1) break;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i48);
 HEAP8[i45 >> 0] = HEAP8[i44 >> 0] | 0;
 HEAP8[i45 + 1 >> 0] = HEAP8[i44 + 1 >> 0] | 0;
 HEAP8[i45 + 2 >> 0] = HEAP8[i44 + 2 >> 0] | 0;
 HEAP8[i47 >> 0] = HEAP8[i46 >> 0] | 0;
 HEAP8[i47 + 1 >> 0] = HEAP8[i46 + 1 >> 0] | 0;
 HEAP8[i47 + 2 >> 0] = HEAP8[i46 + 2 >> 0] | 0;
 i48 = __Znwj(16) | 0;
 HEAP32[i48 >> 2] = 21296;
 HEAP8[i48 + 4 >> 0] = 34;
 i1 = i48 + 5 | 0;
 HEAP8[i1 >> 0] = HEAP8[i45 >> 0] | 0;
 HEAP8[i1 + 1 >> 0] = HEAP8[i45 + 1 >> 0] | 0;
 HEAP8[i1 + 2 >> 0] = HEAP8[i45 + 2 >> 0] | 0;
 HEAP32[i48 + 8 >> 2] = i55;
 HEAP8[i48 + 12 >> 0] = 34;
 i1 = i48 + 13 | 0;
 HEAP8[i1 >> 0] = HEAP8[i47 >> 0] | 0;
 HEAP8[i1 + 1 >> 0] = HEAP8[i47 + 1 >> 0] | 0;
 HEAP8[i1 + 2 >> 0] = HEAP8[i47 + 2 >> 0] | 0;
 i1 = HEAP32[i49 >> 2] | 0;
 HEAP32[i49 >> 2] = i48;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i50, i64);
 HEAP32[i51 >> 2] = i57;
 i4 = i51 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i50);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i50);
 HEAP8[i52 >> 0] = 92;
 i2 = i52 + 4 | 0;
 HEAP32[i2 >> 2] = HEAP32[i51 >> 2];
 i3 = i52 + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i4);
 i51 = i53;
 HEAP32[i51 >> 2] = 34286;
 HEAP32[i51 + 4 >> 2] = 34287;
 HEAP32[i53 + 8 >> 2] = 34288;
 HEAP32[i53 + 12 >> 2] = 34289;
 HEAP32[i53 + 16 >> 2] = i11;
 i51 = i53 + 20 | 0;
 HEAP8[i51 >> 0] = HEAP8[i52 >> 0] | 0;
 i1 = i53 + 24 | 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i2 = i53 + 28 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 i52 = __Znwj(44) | 0;
 HEAP32[i52 >> 2] = 21320;
 i50 = i52 + 4 | 0;
 HEAP32[i50 >> 2] = HEAP32[i53 >> 2];
 HEAP32[i50 + 4 >> 2] = HEAP32[i53 + 4 >> 2];
 HEAP32[i50 + 8 >> 2] = HEAP32[i53 + 8 >> 2];
 HEAP32[i50 + 12 >> 2] = HEAP32[i53 + 12 >> 2];
 HEAP32[i50 + 16 >> 2] = HEAP32[i53 + 16 >> 2];
 HEAP8[i52 + 24 >> 0] = HEAP8[i51 >> 0] | 0;
 HEAP32[i52 + 28 >> 2] = HEAP32[i1 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i52 + 32 | 0, i2);
 i1 = HEAP32[i55 >> 2] | 0;
 HEAP32[i55 >> 2] = i52;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 HEAP32[i60 >> 2] = 0;
 HEAP32[i60 + 4 >> 2] = 0;
 HEAP32[i60 + 8 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 34);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 92);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 47);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 98);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 102);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 110);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 114);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i60, 116);
 __ZN5boost6spirit7classic5chsetIcEC2IcEEPKT_(i59, (HEAP8[i60 >> 0] & 1) == 0 ? i60 + 1 | 0 : HEAP32[i60 + 8 >> 2] | 0);
 i53 = __Znwj(32) | 0;
 i55 = HEAP32[i59 >> 2] | 0;
 HEAP32[i53 >> 2] = HEAP32[i55 >> 2];
 HEAP32[i53 + 4 >> 2] = HEAP32[i55 + 4 >> 2];
 HEAP32[i53 + 8 >> 2] = HEAP32[i55 + 8 >> 2];
 HEAP32[i53 + 12 >> 2] = HEAP32[i55 + 12 >> 2];
 HEAP32[i53 + 16 >> 2] = HEAP32[i55 + 16 >> 2];
 HEAP32[i53 + 20 >> 2] = HEAP32[i55 + 20 >> 2];
 HEAP32[i53 + 24 >> 2] = HEAP32[i55 + 24 >> 2];
 HEAP32[i53 + 28 >> 2] = HEAP32[i55 + 28 >> 2];
 HEAP32[i58 >> 2] = i53;
 i55 = i58 + 4 | 0;
 HEAP32[i55 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i58, i53, i55);
 HEAP32[i58 + 8 >> 2] = i11;
 i55 = __Znwj(32) | 0;
 i53 = HEAP32[i58 >> 2] | 0;
 HEAP32[i55 >> 2] = HEAP32[i53 >> 2];
 HEAP32[i55 + 4 >> 2] = HEAP32[i53 + 4 >> 2];
 HEAP32[i55 + 8 >> 2] = HEAP32[i53 + 8 >> 2];
 HEAP32[i55 + 12 >> 2] = HEAP32[i53 + 12 >> 2];
 HEAP32[i55 + 16 >> 2] = HEAP32[i53 + 16 >> 2];
 HEAP32[i55 + 20 >> 2] = HEAP32[i53 + 20 >> 2];
 HEAP32[i55 + 24 >> 2] = HEAP32[i53 + 24 >> 2];
 HEAP32[i55 + 28 >> 2] = HEAP32[i53 + 28 >> 2];
 HEAP32[i56 >> 2] = i55;
 i53 = i56 + 4 | 0;
 HEAP32[i53 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i56, i55, i53);
 HEAP32[i56 + 8 >> 2] = i11;
 i53 = i56 + 12 | 0;
 HEAP8[i53 >> 0] = 117;
 i55 = i56 + 13 | 0;
 HEAP8[i55 >> 0] = HEAP8[i54 >> 0] | 0;
 HEAP8[i55 + 1 >> 0] = HEAP8[i54 + 1 >> 0] | 0;
 HEAP8[i55 + 2 >> 0] = HEAP8[i54 + 2 >> 0] | 0;
 i55 = i56 + 16 | 0;
 HEAP32[i55 >> 2] = 0;
 HEAP32[i55 + 4 >> 2] = i11;
 i55 = __Znwj(28) | 0;
 HEAP32[i55 >> 2] = 21344;
 i52 = i55 + 4 | 0;
 i54 = __Znwj(32) | 0;
 i1 = HEAP32[i56 >> 2] | 0;
 HEAP32[i54 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i54 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i54 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i54 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i54 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i54 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i54 + 24 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i54 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
 HEAP32[i52 >> 2] = i54;
 i1 = i55 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i52, i54, i1);
 HEAP32[i55 + 12 >> 2] = i11;
 i1 = i55 + 16 | 0;
 HEAP32[i1 >> 2] = HEAP32[i53 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i53 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i53 + 8 >> 2];
 i1 = HEAP32[i57 >> 2] | 0;
 HEAP32[i57 >> 2] = i55;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i56 + 4 >> 2] | 0;
 do if (i1 | 0) {
  i56 = i1 + 4 | 0;
  i57 = HEAP32[i56 >> 2] | 0;
  HEAP32[i56 >> 2] = i57 - 1;
  if ((i57 | 0) != 1) break;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i56 = i1 + 8 | 0;
  i57 = HEAP32[i56 >> 2] | 0;
  HEAP32[i56 >> 2] = i57 - 1;
  if ((i57 | 0) != 1) break;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 } while (0);
 i1 = HEAP32[i58 + 4 >> 2] | 0;
 do if (i1 | 0) {
  i57 = i1 + 4 | 0;
  i58 = HEAP32[i57 >> 2] | 0;
  HEAP32[i57 >> 2] = i58 - 1;
  if ((i58 | 0) != 1) break;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i57 = i1 + 8 | 0;
  i58 = HEAP32[i57 >> 2] | 0;
  HEAP32[i57 >> 2] = i58 - 1;
  if ((i58 | 0) != 1) break;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 } while (0);
 i1 = HEAP32[i59 + 4 >> 2] | 0;
 if (!i1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i60);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i64);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i68);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i62);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i65);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i61);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i66);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i63);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i67);
  STACKTOP = i69;
  return;
 }
 i58 = i1 + 4 | 0;
 i59 = HEAP32[i58 >> 2] | 0;
 HEAP32[i58 >> 2] = i59 - 1;
 if ((i59 | 0) != 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i60);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i64);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i68);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i62);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i65);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i61);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i66);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i63);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i67);
  STACKTOP = i69;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i58 = i1 + 8 | 0;
 i59 = HEAP32[i58 >> 2] | 0;
 HEAP32[i58 >> 2] = i59 - 1;
 if ((i59 | 0) != 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i60);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i64);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i68);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i62);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i65);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i61);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i66);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i63);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i67);
  STACKTOP = i69;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i60);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i64);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i68);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i62);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i65);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i61);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i66);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i63);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i67);
 STACKTOP = i69;
 return;
}

function _malloc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 do if (i1 >>> 0 < 245) {
  i14 = i1 >>> 0 < 11 ? 16 : i1 + 11 & -8;
  i1 = i14 >>> 3;
  i9 = HEAP32[12859] | 0;
  i2 = i9 >>> i1;
  if (i2 & 3 | 0) {
   i2 = (i2 & 1 ^ 1) + i1 | 0;
   i3 = 51476 + (i2 << 1 << 2) | 0;
   i4 = i3 + 8 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   i6 = i5 + 8 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   do if ((i3 | 0) != (i7 | 0)) {
    if (i7 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i1 = i7 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i5 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i4 >> 2] = i7;
     break;
    } else _abort();
   } else HEAP32[12859] = i9 & ~(1 << i2); while (0);
   i37 = i2 << 3;
   HEAP32[i5 + 4 >> 2] = i37 | 3;
   i37 = i5 + i37 + 4 | 0;
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
   i37 = i6;
   return i37 | 0;
  }
  i7 = HEAP32[12861] | 0;
  if (i14 >>> 0 > i7 >>> 0) {
   if (i2 | 0) {
    i3 = 2 << i1;
    i3 = i2 << i1 & (i3 | 0 - i3);
    i3 = (i3 & 0 - i3) + -1 | 0;
    i8 = i3 >>> 12 & 16;
    i3 = i3 >>> i8;
    i5 = i3 >>> 5 & 8;
    i3 = i3 >>> i5;
    i6 = i3 >>> 2 & 4;
    i3 = i3 >>> i6;
    i4 = i3 >>> 1 & 2;
    i3 = i3 >>> i4;
    i2 = i3 >>> 1 & 1;
    i2 = (i5 | i8 | i6 | i4 | i2) + (i3 >>> i2) | 0;
    i3 = 51476 + (i2 << 1 << 2) | 0;
    i4 = i3 + 8 | 0;
    i6 = HEAP32[i4 >> 2] | 0;
    i8 = i6 + 8 | 0;
    i5 = HEAP32[i8 >> 2] | 0;
    do if ((i3 | 0) != (i5 | 0)) {
     if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i6 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i4 >> 2] = i5;
      i10 = HEAP32[12861] | 0;
      break;
     } else _abort();
    } else {
     HEAP32[12859] = i9 & ~(1 << i2);
     i10 = i7;
    } while (0);
    i7 = (i2 << 3) - i14 | 0;
    HEAP32[i6 + 4 >> 2] = i14 | 3;
    i4 = i6 + i14 | 0;
    HEAP32[i4 + 4 >> 2] = i7 | 1;
    HEAP32[i4 + i7 >> 2] = i7;
    if (i10 | 0) {
     i5 = HEAP32[12864] | 0;
     i2 = i10 >>> 3;
     i3 = 51476 + (i2 << 1 << 2) | 0;
     i1 = HEAP32[12859] | 0;
     i2 = 1 << i2;
     if (i1 & i2) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
       i11 = i1;
       i12 = i2;
      }
     } else {
      HEAP32[12859] = i1 | i2;
      i11 = i3 + 8 | 0;
      i12 = i3;
     }
     HEAP32[i11 >> 2] = i5;
     HEAP32[i12 + 12 >> 2] = i5;
     HEAP32[i5 + 8 >> 2] = i12;
     HEAP32[i5 + 12 >> 2] = i3;
    }
    HEAP32[12861] = i7;
    HEAP32[12864] = i4;
    i37 = i8;
    return i37 | 0;
   }
   i1 = HEAP32[12860] | 0;
   if (i1) {
    i3 = (i1 & 0 - i1) + -1 | 0;
    i36 = i3 >>> 12 & 16;
    i3 = i3 >>> i36;
    i35 = i3 >>> 5 & 8;
    i3 = i3 >>> i35;
    i37 = i3 >>> 2 & 4;
    i3 = i3 >>> i37;
    i2 = i3 >>> 1 & 2;
    i3 = i3 >>> i2;
    i4 = i3 >>> 1 & 1;
    i4 = HEAP32[51740 + ((i35 | i36 | i37 | i2 | i4) + (i3 >>> i4) << 2) >> 2] | 0;
    i3 = (HEAP32[i4 + 4 >> 2] & -8) - i14 | 0;
    i2 = i4;
    while (1) {
     i1 = HEAP32[i2 + 16 >> 2] | 0;
     if (!i1) {
      i1 = HEAP32[i2 + 20 >> 2] | 0;
      if (!i1) {
       i9 = i4;
       break;
      }
     }
     i2 = (HEAP32[i1 + 4 >> 2] & -8) - i14 | 0;
     i37 = i2 >>> 0 < i3 >>> 0;
     i3 = i37 ? i2 : i3;
     i2 = i1;
     i4 = i37 ? i1 : i4;
    }
    i6 = HEAP32[12863] | 0;
    if (i9 >>> 0 < i6 >>> 0) _abort();
    i8 = i9 + i14 | 0;
    if (i9 >>> 0 >= i8 >>> 0) _abort();
    i7 = HEAP32[i9 + 24 >> 2] | 0;
    i4 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i4 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i13 = 0;
       break;
      }
     }
     while (1) {
      i4 = i1 + 20 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if (i5 | 0) {
       i1 = i5;
       i2 = i4;
       continue;
      }
      i4 = i1 + 16 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if (!i5) break; else {
       i1 = i5;
       i2 = i4;
      }
     }
     if (i2 >>> 0 < i6 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i13 = i1;
      break;
     }
    } else {
     i5 = HEAP32[i9 + 8 >> 2] | 0;
     if (i5 >>> 0 < i6 >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i4 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i4;
      HEAP32[i2 >> 2] = i5;
      i13 = i4;
      break;
     } else _abort();
    } while (0);
    do if (i7 | 0) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 51740 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i13;
      if (!i13) {
       HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
       break;
      }
     } else {
      if (i7 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
      i1 = i7 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i7 + 20 >> 2] = i13;
      if (!i13) break;
     }
     i2 = HEAP32[12863] | 0;
     if (i13 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i13 + 24 >> 2] = i7;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i13 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1 | 0) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
      HEAP32[i13 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     }
    } while (0);
    if (i3 >>> 0 < 16) {
     i37 = i3 + i14 | 0;
     HEAP32[i9 + 4 >> 2] = i37 | 3;
     i37 = i9 + i37 + 4 | 0;
     HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
    } else {
     HEAP32[i9 + 4 >> 2] = i14 | 3;
     HEAP32[i8 + 4 >> 2] = i3 | 1;
     HEAP32[i8 + i3 >> 2] = i3;
     i1 = HEAP32[12861] | 0;
     if (i1 | 0) {
      i5 = HEAP32[12864] | 0;
      i2 = i1 >>> 3;
      i4 = 51476 + (i2 << 1 << 2) | 0;
      i1 = HEAP32[12859] | 0;
      i2 = 1 << i2;
      if (i1 & i2) {
       i1 = i4 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
        i15 = i1;
        i16 = i2;
       }
      } else {
       HEAP32[12859] = i1 | i2;
       i15 = i4 + 8 | 0;
       i16 = i4;
      }
      HEAP32[i15 >> 2] = i5;
      HEAP32[i16 + 12 >> 2] = i5;
      HEAP32[i5 + 8 >> 2] = i16;
      HEAP32[i5 + 12 >> 2] = i4;
     }
     HEAP32[12861] = i3;
     HEAP32[12864] = i8;
    }
    i37 = i9 + 8 | 0;
    return i37 | 0;
   }
  }
 } else if (i1 >>> 0 <= 4294967231) {
  i1 = i1 + 11 | 0;
  i14 = i1 & -8;
  i9 = HEAP32[12860] | 0;
  if (i9) {
   i3 = 0 - i14 | 0;
   i1 = i1 >>> 8;
   if (i1) if (i14 >>> 0 > 16777215) i8 = 31; else {
    i16 = (i1 + 1048320 | 0) >>> 16 & 8;
    i30 = i1 << i16;
    i15 = (i30 + 520192 | 0) >>> 16 & 4;
    i30 = i30 << i15;
    i8 = (i30 + 245760 | 0) >>> 16 & 2;
    i8 = 14 - (i15 | i16 | i8) + (i30 << i8 >>> 15) | 0;
    i8 = i14 >>> (i8 + 7 | 0) & 1 | i8 << 1;
   } else i8 = 0;
   i2 = HEAP32[51740 + (i8 << 2) >> 2] | 0;
   L123 : do if (!i2) {
    i1 = 0;
    i2 = 0;
    i30 = 86;
   } else {
    i5 = i3;
    i1 = 0;
    i6 = i14 << ((i8 | 0) == 31 ? 0 : 25 - (i8 >>> 1) | 0);
    i7 = i2;
    i2 = 0;
    while (1) {
     i4 = HEAP32[i7 + 4 >> 2] & -8;
     i3 = i4 - i14 | 0;
     if (i3 >>> 0 < i5 >>> 0) if ((i4 | 0) == (i14 | 0)) {
      i1 = i7;
      i2 = i7;
      i30 = 90;
      break L123;
     } else i2 = i7; else i3 = i5;
     i4 = HEAP32[i7 + 20 >> 2] | 0;
     i7 = HEAP32[i7 + 16 + (i6 >>> 31 << 2) >> 2] | 0;
     i1 = (i4 | 0) == 0 | (i4 | 0) == (i7 | 0) ? i1 : i4;
     i4 = (i7 | 0) == 0;
     if (i4) {
      i30 = 86;
      break;
     } else {
      i5 = i3;
      i6 = i6 << (i4 & 1 ^ 1);
     }
    }
   } while (0);
   if ((i30 | 0) == 86) {
    if ((i1 | 0) == 0 & (i2 | 0) == 0) {
     i1 = 2 << i8;
     i1 = i9 & (i1 | 0 - i1);
     if (!i1) break;
     i16 = (i1 & 0 - i1) + -1 | 0;
     i12 = i16 >>> 12 & 16;
     i16 = i16 >>> i12;
     i11 = i16 >>> 5 & 8;
     i16 = i16 >>> i11;
     i13 = i16 >>> 2 & 4;
     i16 = i16 >>> i13;
     i15 = i16 >>> 1 & 2;
     i16 = i16 >>> i15;
     i1 = i16 >>> 1 & 1;
     i1 = HEAP32[51740 + ((i11 | i12 | i13 | i15 | i1) + (i16 >>> i1) << 2) >> 2] | 0;
    }
    if (!i1) {
     i8 = i3;
     i9 = i2;
    } else i30 = 90;
   }
   if ((i30 | 0) == 90) while (1) {
    i30 = 0;
    i16 = (HEAP32[i1 + 4 >> 2] & -8) - i14 | 0;
    i4 = i16 >>> 0 < i3 >>> 0;
    i3 = i4 ? i16 : i3;
    i2 = i4 ? i1 : i2;
    i4 = HEAP32[i1 + 16 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i30 = 90;
     continue;
    }
    i1 = HEAP32[i1 + 20 >> 2] | 0;
    if (!i1) {
     i8 = i3;
     i9 = i2;
     break;
    } else i30 = 90;
   }
   if ((i9 | 0) != 0 ? i8 >>> 0 < ((HEAP32[12861] | 0) - i14 | 0) >>> 0 : 0) {
    i5 = HEAP32[12863] | 0;
    if (i9 >>> 0 < i5 >>> 0) _abort();
    i7 = i9 + i14 | 0;
    if (i9 >>> 0 >= i7 >>> 0) _abort();
    i6 = HEAP32[i9 + 24 >> 2] | 0;
    i3 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i18 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (i4 | 0) {
       i1 = i4;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break; else {
       i1 = i4;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i5 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i18 = i1;
      break;
     }
    } else {
     i4 = HEAP32[i9 + 8 >> 2] | 0;
     if (i4 >>> 0 < i5 >>> 0) _abort();
     i1 = i4 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i4;
      i18 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i6 | 0) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 51740 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i18;
      if (!i18) {
       HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
       break;
      }
     } else {
      if (i6 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
      i1 = i6 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i18; else HEAP32[i6 + 20 >> 2] = i18;
      if (!i18) break;
     }
     i2 = HEAP32[12863] | 0;
     if (i18 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i18 + 24 >> 2] = i6;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i18 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i18;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1 | 0) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
      HEAP32[i18 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i18;
      break;
     }
    } while (0);
    do if (i8 >>> 0 >= 16) {
     HEAP32[i9 + 4 >> 2] = i14 | 3;
     HEAP32[i7 + 4 >> 2] = i8 | 1;
     HEAP32[i7 + i8 >> 2] = i8;
     i1 = i8 >>> 3;
     if (i8 >>> 0 < 256) {
      i3 = 51476 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[12859] | 0;
      i1 = 1 << i1;
      if (i2 & i1) {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
        i20 = i1;
        i21 = i2;
       }
      } else {
       HEAP32[12859] = i2 | i1;
       i20 = i3 + 8 | 0;
       i21 = i3;
      }
      HEAP32[i20 >> 2] = i7;
      HEAP32[i21 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i21;
      HEAP32[i7 + 12 >> 2] = i3;
      break;
     }
     i1 = i8 >>> 8;
     if (i1) if (i8 >>> 0 > 16777215) i3 = 31; else {
      i36 = (i1 + 1048320 | 0) >>> 16 & 8;
      i37 = i1 << i36;
      i35 = (i37 + 520192 | 0) >>> 16 & 4;
      i37 = i37 << i35;
      i3 = (i37 + 245760 | 0) >>> 16 & 2;
      i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
      i3 = i8 >>> (i3 + 7 | 0) & 1 | i3 << 1;
     } else i3 = 0;
     i4 = 51740 + (i3 << 2) | 0;
     HEAP32[i7 + 28 >> 2] = i3;
     i1 = i7 + 16 | 0;
     HEAP32[i1 + 4 >> 2] = 0;
     HEAP32[i1 >> 2] = 0;
     i1 = HEAP32[12860] | 0;
     i2 = 1 << i3;
     if (!(i1 & i2)) {
      HEAP32[12860] = i1 | i2;
      HEAP32[i4 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i4;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     }
     i5 = i8 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     while (1) {
      if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i8 | 0)) {
       i3 = i1;
       i30 = 148;
       break;
      }
      i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (!i3) {
       i30 = 145;
       break;
      } else {
       i5 = i5 << 1;
       i1 = i3;
      }
     }
     if ((i30 | 0) == 145) if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i1;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     } else if ((i30 | 0) == 148) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i37 = HEAP32[12863] | 0;
      if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i7;
       HEAP32[i1 >> 2] = i7;
       HEAP32[i7 + 8 >> 2] = i2;
       HEAP32[i7 + 12 >> 2] = i3;
       HEAP32[i7 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i37 = i8 + i14 | 0;
     HEAP32[i9 + 4 >> 2] = i37 | 3;
     i37 = i9 + i37 + 4 | 0;
     HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
    } while (0);
    i37 = i9 + 8 | 0;
    return i37 | 0;
   }
  }
 } else i14 = -1; while (0);
 i3 = HEAP32[12861] | 0;
 if (i3 >>> 0 >= i14 >>> 0) {
  i1 = i3 - i14 | 0;
  i2 = HEAP32[12864] | 0;
  if (i1 >>> 0 > 15) {
   i37 = i2 + i14 | 0;
   HEAP32[12864] = i37;
   HEAP32[12861] = i1;
   HEAP32[i37 + 4 >> 2] = i1 | 1;
   HEAP32[i37 + i1 >> 2] = i1;
   HEAP32[i2 + 4 >> 2] = i14 | 3;
  } else {
   HEAP32[12861] = 0;
   HEAP32[12864] = 0;
   HEAP32[i2 + 4 >> 2] = i3 | 3;
   i37 = i2 + i3 + 4 | 0;
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
  }
  i37 = i2 + 8 | 0;
  return i37 | 0;
 }
 i1 = HEAP32[12862] | 0;
 if (i1 >>> 0 > i14 >>> 0) {
  i35 = i1 - i14 | 0;
  HEAP32[12862] = i35;
  i37 = HEAP32[12865] | 0;
  i36 = i37 + i14 | 0;
  HEAP32[12865] = i36;
  HEAP32[i36 + 4 >> 2] = i35 | 1;
  HEAP32[i37 + 4 >> 2] = i14 | 3;
  i37 = i37 + 8 | 0;
  return i37 | 0;
 }
 do if (!(HEAP32[12977] | 0)) {
  i1 = _sysconf(30) | 0;
  if (!(i1 + -1 & i1)) {
   HEAP32[12979] = i1;
   HEAP32[12978] = i1;
   HEAP32[12980] = -1;
   HEAP32[12981] = -1;
   HEAP32[12982] = 0;
   HEAP32[12970] = 0;
   HEAP32[12977] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 i7 = i14 + 48 | 0;
 i6 = HEAP32[12979] | 0;
 i8 = i14 + 47 | 0;
 i5 = i6 + i8 | 0;
 i6 = 0 - i6 | 0;
 i9 = i5 & i6;
 if (i9 >>> 0 <= i14 >>> 0) {
  i37 = 0;
  return i37 | 0;
 }
 i1 = HEAP32[12969] | 0;
 if (i1 | 0 ? (i20 = HEAP32[12967] | 0, i21 = i20 + i9 | 0, i21 >>> 0 <= i20 >>> 0 | i21 >>> 0 > i1 >>> 0) : 0) {
  i37 = 0;
  return i37 | 0;
 }
 L257 : do if (!(HEAP32[12970] & 4)) {
  i1 = HEAP32[12865] | 0;
  L259 : do if (i1) {
   i3 = 51884;
   while (1) {
    i2 = HEAP32[i3 >> 2] | 0;
    if (i2 >>> 0 <= i1 >>> 0 ? (i17 = i3 + 4 | 0, (i2 + (HEAP32[i17 >> 2] | 0) | 0) >>> 0 > i1 >>> 0) : 0) {
     i4 = i3;
     i3 = i17;
     break;
    }
    i3 = HEAP32[i3 + 8 >> 2] | 0;
    if (!i3) {
     i30 = 173;
     break L259;
    }
   }
   i1 = i5 - (HEAP32[12862] | 0) & i6;
   if (i1 >>> 0 < 2147483647) {
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == ((HEAP32[i4 >> 2] | 0) + (HEAP32[i3 >> 2] | 0) | 0)) {
     if ((i2 | 0) != (-1 | 0)) {
      i7 = i2;
      i5 = i1;
      i30 = 193;
      break L257;
     }
    } else i30 = 183;
   }
  } else i30 = 173; while (0);
  do if ((i30 | 0) == 173 ? (i19 = _sbrk(0) | 0, (i19 | 0) != (-1 | 0)) : 0) {
   i1 = i19;
   i2 = HEAP32[12978] | 0;
   i3 = i2 + -1 | 0;
   if (!(i3 & i1)) i1 = i9; else i1 = i9 - i1 + (i3 + i1 & 0 - i2) | 0;
   i2 = HEAP32[12967] | 0;
   i3 = i2 + i1 | 0;
   if (i1 >>> 0 > i14 >>> 0 & i1 >>> 0 < 2147483647) {
    i21 = HEAP32[12969] | 0;
    if (i21 | 0 ? i3 >>> 0 <= i2 >>> 0 | i3 >>> 0 > i21 >>> 0 : 0) break;
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == (i19 | 0)) {
     i7 = i19;
     i5 = i1;
     i30 = 193;
     break L257;
    } else i30 = 183;
   }
  } while (0);
  L279 : do if ((i30 | 0) == 183) {
   i3 = 0 - i1 | 0;
   do if (i7 >>> 0 > i1 >>> 0 & (i1 >>> 0 < 2147483647 & (i2 | 0) != (-1 | 0)) ? (i22 = HEAP32[12979] | 0, i22 = i8 - i1 + i22 & 0 - i22, i22 >>> 0 < 2147483647) : 0) if ((_sbrk(i22 | 0) | 0) == (-1 | 0)) {
    _sbrk(i3 | 0) | 0;
    break L279;
   } else {
    i1 = i22 + i1 | 0;
    break;
   } while (0);
   if ((i2 | 0) != (-1 | 0)) {
    i7 = i2;
    i5 = i1;
    i30 = 193;
    break L257;
   }
  } while (0);
  HEAP32[12970] = HEAP32[12970] | 4;
  i30 = 190;
 } else i30 = 190; while (0);
 if ((((i30 | 0) == 190 ? i9 >>> 0 < 2147483647 : 0) ? (i23 = _sbrk(i9 | 0) | 0, i24 = _sbrk(0) | 0, i23 >>> 0 < i24 >>> 0 & ((i23 | 0) != (-1 | 0) & (i24 | 0) != (-1 | 0))) : 0) ? (i25 = i24 - i23 | 0, i25 >>> 0 > (i14 + 40 | 0) >>> 0) : 0) {
  i7 = i23;
  i5 = i25;
  i30 = 193;
 }
 if ((i30 | 0) == 193) {
  i1 = (HEAP32[12967] | 0) + i5 | 0;
  HEAP32[12967] = i1;
  if (i1 >>> 0 > (HEAP32[12968] | 0) >>> 0) HEAP32[12968] = i1;
  i8 = HEAP32[12865] | 0;
  do if (i8) {
   i4 = 51884;
   do {
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = i4 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i7 | 0) == (i1 + i3 | 0)) {
     i26 = i1;
     i27 = i2;
     i28 = i3;
     i29 = i4;
     i30 = 203;
     break;
    }
    i4 = HEAP32[i4 + 8 >> 2] | 0;
   } while ((i4 | 0) != 0);
   if (((i30 | 0) == 203 ? (HEAP32[i29 + 12 >> 2] & 8 | 0) == 0 : 0) ? i8 >>> 0 < i7 >>> 0 & i8 >>> 0 >= i26 >>> 0 : 0) {
    HEAP32[i27 >> 2] = i28 + i5;
    i37 = i8 + 8 | 0;
    i37 = (i37 & 7 | 0) == 0 ? 0 : 0 - i37 & 7;
    i36 = i8 + i37 | 0;
    i37 = i5 - i37 + (HEAP32[12862] | 0) | 0;
    HEAP32[12865] = i36;
    HEAP32[12862] = i37;
    HEAP32[i36 + 4 >> 2] = i37 | 1;
    HEAP32[i36 + i37 + 4 >> 2] = 40;
    HEAP32[12866] = HEAP32[12981];
    break;
   }
   i1 = HEAP32[12863] | 0;
   if (i7 >>> 0 < i1 >>> 0) {
    HEAP32[12863] = i7;
    i9 = i7;
   } else i9 = i1;
   i3 = i7 + i5 | 0;
   i1 = 51884;
   while (1) {
    if ((HEAP32[i1 >> 2] | 0) == (i3 | 0)) {
     i2 = i1;
     i30 = 211;
     break;
    }
    i1 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i1) {
     i2 = 51884;
     break;
    }
   }
   if ((i30 | 0) == 211) if (!(HEAP32[i1 + 12 >> 2] & 8)) {
    HEAP32[i2 >> 2] = i7;
    i11 = i1 + 4 | 0;
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i5;
    i11 = i7 + 8 | 0;
    i11 = i7 + ((i11 & 7 | 0) == 0 ? 0 : 0 - i11 & 7) | 0;
    i1 = i3 + 8 | 0;
    i1 = i3 + ((i1 & 7 | 0) == 0 ? 0 : 0 - i1 & 7) | 0;
    i10 = i11 + i14 | 0;
    i6 = i1 - i11 - i14 | 0;
    HEAP32[i11 + 4 >> 2] = i14 | 3;
    do if ((i1 | 0) != (i8 | 0)) {
     if ((i1 | 0) == (HEAP32[12864] | 0)) {
      i37 = (HEAP32[12861] | 0) + i6 | 0;
      HEAP32[12861] = i37;
      HEAP32[12864] = i10;
      HEAP32[i10 + 4 >> 2] = i37 | 1;
      HEAP32[i10 + i37 >> 2] = i37;
      break;
     }
     i2 = HEAP32[i1 + 4 >> 2] | 0;
     if ((i2 & 3 | 0) == 1) {
      i8 = i2 & -8;
      i5 = i2 >>> 3;
      L331 : do if (i2 >>> 0 >= 256) {
       i7 = HEAP32[i1 + 24 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       do if ((i4 | 0) == (i1 | 0)) {
        i3 = i1 + 16 | 0;
        i4 = i3 + 4 | 0;
        i2 = HEAP32[i4 >> 2] | 0;
        if (!i2) {
         i2 = HEAP32[i3 >> 2] | 0;
         if (!i2) {
          i35 = 0;
          break;
         }
        } else i3 = i4;
        while (1) {
         i4 = i2 + 20 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (i5 | 0) {
          i2 = i5;
          i3 = i4;
          continue;
         }
         i4 = i2 + 16 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (!i5) break; else {
          i2 = i5;
          i3 = i4;
         }
        }
        if (i3 >>> 0 < i9 >>> 0) _abort(); else {
         HEAP32[i3 >> 2] = 0;
         i35 = i2;
         break;
        }
       } else {
        i5 = HEAP32[i1 + 8 >> 2] | 0;
        if (i5 >>> 0 < i9 >>> 0) _abort();
        i2 = i5 + 12 | 0;
        if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) _abort();
        i3 = i4 + 8 | 0;
        if ((HEAP32[i3 >> 2] | 0) == (i1 | 0)) {
         HEAP32[i2 >> 2] = i4;
         HEAP32[i3 >> 2] = i5;
         i35 = i4;
         break;
        } else _abort();
       } while (0);
       if (!i7) break;
       i2 = HEAP32[i1 + 28 >> 2] | 0;
       i3 = 51740 + (i2 << 2) | 0;
       do if ((i1 | 0) != (HEAP32[i3 >> 2] | 0)) {
        if (i7 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
        i2 = i7 + 16 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) HEAP32[i2 >> 2] = i35; else HEAP32[i7 + 20 >> 2] = i35;
        if (!i35) break L331;
       } else {
        HEAP32[i3 >> 2] = i35;
        if (i35 | 0) break;
        HEAP32[12860] = HEAP32[12860] & ~(1 << i2);
        break L331;
       } while (0);
       i4 = HEAP32[12863] | 0;
       if (i35 >>> 0 < i4 >>> 0) _abort();
       HEAP32[i35 + 24 >> 2] = i7;
       i2 = i1 + 16 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       do if (i3 | 0) if (i3 >>> 0 < i4 >>> 0) _abort(); else {
        HEAP32[i35 + 16 >> 2] = i3;
        HEAP32[i3 + 24 >> 2] = i35;
        break;
       } while (0);
       i2 = HEAP32[i2 + 4 >> 2] | 0;
       if (!i2) break;
       if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
        HEAP32[i35 + 20 >> 2] = i2;
        HEAP32[i2 + 24 >> 2] = i35;
        break;
       }
      } else {
       i3 = HEAP32[i1 + 8 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       i2 = 51476 + (i5 << 1 << 2) | 0;
       do if ((i3 | 0) != (i2 | 0)) {
        if (i3 >>> 0 < i9 >>> 0) _abort();
        if ((HEAP32[i3 + 12 >> 2] | 0) == (i1 | 0)) break;
        _abort();
       } while (0);
       if ((i4 | 0) == (i3 | 0)) {
        HEAP32[12859] = HEAP32[12859] & ~(1 << i5);
        break;
       }
       do if ((i4 | 0) == (i2 | 0)) i32 = i4 + 8 | 0; else {
        if (i4 >>> 0 < i9 >>> 0) _abort();
        i2 = i4 + 8 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) {
         i32 = i2;
         break;
        }
        _abort();
       } while (0);
       HEAP32[i3 + 12 >> 2] = i4;
       HEAP32[i32 >> 2] = i3;
      } while (0);
      i1 = i1 + i8 | 0;
      i6 = i8 + i6 | 0;
     }
     i1 = i1 + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
     HEAP32[i10 + 4 >> 2] = i6 | 1;
     HEAP32[i10 + i6 >> 2] = i6;
     i1 = i6 >>> 3;
     if (i6 >>> 0 < 256) {
      i3 = 51476 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[12859] | 0;
      i1 = 1 << i1;
      do if (!(i2 & i1)) {
       HEAP32[12859] = i2 | i1;
       i36 = i3 + 8 | 0;
       i37 = i3;
      } else {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 >= (HEAP32[12863] | 0) >>> 0) {
        i36 = i1;
        i37 = i2;
        break;
       }
       _abort();
      } while (0);
      HEAP32[i36 >> 2] = i10;
      HEAP32[i37 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i37;
      HEAP32[i10 + 12 >> 2] = i3;
      break;
     }
     i1 = i6 >>> 8;
     do if (!i1) i3 = 0; else {
      if (i6 >>> 0 > 16777215) {
       i3 = 31;
       break;
      }
      i36 = (i1 + 1048320 | 0) >>> 16 & 8;
      i37 = i1 << i36;
      i35 = (i37 + 520192 | 0) >>> 16 & 4;
      i37 = i37 << i35;
      i3 = (i37 + 245760 | 0) >>> 16 & 2;
      i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
      i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
     } while (0);
     i4 = 51740 + (i3 << 2) | 0;
     HEAP32[i10 + 28 >> 2] = i3;
     i1 = i10 + 16 | 0;
     HEAP32[i1 + 4 >> 2] = 0;
     HEAP32[i1 >> 2] = 0;
     i1 = HEAP32[12860] | 0;
     i2 = 1 << i3;
     if (!(i1 & i2)) {
      HEAP32[12860] = i1 | i2;
      HEAP32[i4 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i4;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break;
     }
     i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     while (1) {
      if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
       i3 = i1;
       i30 = 281;
       break;
      }
      i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (!i3) {
       i30 = 278;
       break;
      } else {
       i5 = i5 << 1;
       i1 = i3;
      }
     }
     if ((i30 | 0) == 278) if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break;
     } else if ((i30 | 0) == 281) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i37 = HEAP32[12863] | 0;
      if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i10;
       HEAP32[i1 >> 2] = i10;
       HEAP32[i10 + 8 >> 2] = i2;
       HEAP32[i10 + 12 >> 2] = i3;
       HEAP32[i10 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i37 = (HEAP32[12862] | 0) + i6 | 0;
     HEAP32[12862] = i37;
     HEAP32[12865] = i10;
     HEAP32[i10 + 4 >> 2] = i37 | 1;
    } while (0);
    i37 = i11 + 8 | 0;
    return i37 | 0;
   } else i2 = 51884;
   while (1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (i1 >>> 0 <= i8 >>> 0 ? (i31 = i1 + (HEAP32[i2 + 4 >> 2] | 0) | 0, i31 >>> 0 > i8 >>> 0) : 0) {
     i2 = i31;
     break;
    }
    i2 = HEAP32[i2 + 8 >> 2] | 0;
   }
   i6 = i2 + -47 | 0;
   i3 = i6 + 8 | 0;
   i3 = i6 + ((i3 & 7 | 0) == 0 ? 0 : 0 - i3 & 7) | 0;
   i6 = i8 + 16 | 0;
   i3 = i3 >>> 0 < i6 >>> 0 ? i8 : i3;
   i1 = i3 + 8 | 0;
   i4 = i7 + 8 | 0;
   i4 = (i4 & 7 | 0) == 0 ? 0 : 0 - i4 & 7;
   i37 = i7 + i4 | 0;
   i4 = i5 + -40 - i4 | 0;
   HEAP32[12865] = i37;
   HEAP32[12862] = i4;
   HEAP32[i37 + 4 >> 2] = i4 | 1;
   HEAP32[i37 + i4 + 4 >> 2] = 40;
   HEAP32[12866] = HEAP32[12981];
   i4 = i3 + 4 | 0;
   HEAP32[i4 >> 2] = 27;
   HEAP32[i1 >> 2] = HEAP32[12971];
   HEAP32[i1 + 4 >> 2] = HEAP32[12972];
   HEAP32[i1 + 8 >> 2] = HEAP32[12973];
   HEAP32[i1 + 12 >> 2] = HEAP32[12974];
   HEAP32[12971] = i7;
   HEAP32[12972] = i5;
   HEAP32[12974] = 0;
   HEAP32[12973] = i1;
   i1 = i3 + 24 | 0;
   do {
    i1 = i1 + 4 | 0;
    HEAP32[i1 >> 2] = 7;
   } while ((i1 + 4 | 0) >>> 0 < i2 >>> 0);
   if ((i3 | 0) != (i8 | 0)) {
    i7 = i3 - i8 | 0;
    HEAP32[i4 >> 2] = HEAP32[i4 >> 2] & -2;
    HEAP32[i8 + 4 >> 2] = i7 | 1;
    HEAP32[i3 >> 2] = i7;
    i1 = i7 >>> 3;
    if (i7 >>> 0 < 256) {
     i3 = 51476 + (i1 << 1 << 2) | 0;
     i2 = HEAP32[12859] | 0;
     i1 = 1 << i1;
     if (i2 & i1) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
       i33 = i1;
       i34 = i2;
      }
     } else {
      HEAP32[12859] = i2 | i1;
      i33 = i3 + 8 | 0;
      i34 = i3;
     }
     HEAP32[i33 >> 2] = i8;
     HEAP32[i34 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i34;
     HEAP32[i8 + 12 >> 2] = i3;
     break;
    }
    i1 = i7 >>> 8;
    if (i1) if (i7 >>> 0 > 16777215) i3 = 31; else {
     i36 = (i1 + 1048320 | 0) >>> 16 & 8;
     i37 = i1 << i36;
     i35 = (i37 + 520192 | 0) >>> 16 & 4;
     i37 = i37 << i35;
     i3 = (i37 + 245760 | 0) >>> 16 & 2;
     i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
     i3 = i7 >>> (i3 + 7 | 0) & 1 | i3 << 1;
    } else i3 = 0;
    i5 = 51740 + (i3 << 2) | 0;
    HEAP32[i8 + 28 >> 2] = i3;
    HEAP32[i8 + 20 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = HEAP32[12860] | 0;
    i2 = 1 << i3;
    if (!(i1 & i2)) {
     HEAP32[12860] = i1 | i2;
     HEAP32[i5 >> 2] = i8;
     HEAP32[i8 + 24 >> 2] = i5;
     HEAP32[i8 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i8;
     break;
    }
    i4 = i7 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
    i1 = HEAP32[i5 >> 2] | 0;
    while (1) {
     if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i7 | 0)) {
      i3 = i1;
      i30 = 307;
      break;
     }
     i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (!i3) {
      i30 = 304;
      break;
     } else {
      i4 = i4 << 1;
      i1 = i3;
     }
    }
    if ((i30 | 0) == 304) if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = i8;
     HEAP32[i8 + 24 >> 2] = i1;
     HEAP32[i8 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i8;
     break;
    } else if ((i30 | 0) == 307) {
     i1 = i3 + 8 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i37 = HEAP32[12863] | 0;
     if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i1 >> 2] = i8;
      HEAP32[i8 + 8 >> 2] = i2;
      HEAP32[i8 + 12 >> 2] = i3;
      HEAP32[i8 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } else {
   i37 = HEAP32[12863] | 0;
   if ((i37 | 0) == 0 | i7 >>> 0 < i37 >>> 0) HEAP32[12863] = i7;
   HEAP32[12971] = i7;
   HEAP32[12972] = i5;
   HEAP32[12974] = 0;
   HEAP32[12868] = HEAP32[12977];
   HEAP32[12867] = -1;
   i1 = 0;
   do {
    i37 = 51476 + (i1 << 1 << 2) | 0;
    HEAP32[i37 + 12 >> 2] = i37;
    HEAP32[i37 + 8 >> 2] = i37;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 32);
   i37 = i7 + 8 | 0;
   i37 = (i37 & 7 | 0) == 0 ? 0 : 0 - i37 & 7;
   i36 = i7 + i37 | 0;
   i37 = i5 + -40 - i37 | 0;
   HEAP32[12865] = i36;
   HEAP32[12862] = i37;
   HEAP32[i36 + 4 >> 2] = i37 | 1;
   HEAP32[i36 + i37 + 4 >> 2] = 40;
   HEAP32[12866] = HEAP32[12981];
  } while (0);
  i1 = HEAP32[12862] | 0;
  if (i1 >>> 0 > i14 >>> 0) {
   i35 = i1 - i14 | 0;
   HEAP32[12862] = i35;
   i37 = HEAP32[12865] | 0;
   i36 = i37 + i14 | 0;
   HEAP32[12865] = i36;
   HEAP32[i36 + 4 >> 2] = i35 | 1;
   HEAP32[i37 + 4 >> 2] = i14 | 3;
   i37 = i37 + 8 | 0;
   return i37 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 i37 = 0;
 return i37 | 0;
}

function _printf_core(i50, i3, i51, i52, i53) {
 i50 = i50 | 0;
 i3 = i3 | 0;
 i51 = i51 | 0;
 i52 = i52 | 0;
 i53 = i53 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i54 = 0;
 i54 = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 i45 = i54 + 24 | 0;
 i47 = i54 + 16 | 0;
 i46 = i54 + 588 | 0;
 i42 = i54 + 576 | 0;
 i44 = i54;
 i37 = i54 + 536 | 0;
 i49 = i54 + 8 | 0;
 i48 = i54 + 528 | 0;
 i27 = (i50 | 0) != 0;
 i28 = i37 + 40 | 0;
 i36 = i28;
 i37 = i37 + 39 | 0;
 i38 = i49 + 4 | 0;
 i39 = i46;
 i40 = 0 - i39 | 0;
 i41 = i42 + 12 | 0;
 i42 = i42 + 11 | 0;
 i43 = i41;
 i29 = i43 - i39 | 0;
 i30 = -2 - i39 | 0;
 i31 = i43 + 2 | 0;
 i32 = i45 + 288 | 0;
 i33 = i46 + 9 | 0;
 i34 = i33;
 i35 = i46 + 8 | 0;
 i1 = 0;
 i4 = 0;
 i2 = 0;
 i14 = i3;
 L1 : while (1) {
  do if ((i1 | 0) > -1) if ((i4 | 0) > (2147483647 - i1 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   i1 = -1;
   break;
  } else {
   i1 = i4 + i1 | 0;
   break;
  } while (0);
  i3 = HEAP8[i14 >> 0] | 0;
  if (!(i3 << 24 >> 24)) {
   i26 = 244;
   break;
  } else i4 = i14;
  L9 : while (1) {
   switch (i3 << 24 >> 24) {
   case 37:
    {
     i3 = i4;
     i26 = 9;
     break L9;
    }
   case 0:
    {
     i3 = i4;
     break L9;
    }
   default:
    {}
   }
   i25 = i4 + 1 | 0;
   i3 = HEAP8[i25 >> 0] | 0;
   i4 = i25;
  }
  L12 : do if ((i26 | 0) == 9) while (1) {
   i26 = 0;
   if ((HEAP8[i3 + 1 >> 0] | 0) != 37) break L12;
   i4 = i4 + 1 | 0;
   i3 = i3 + 2 | 0;
   if ((HEAP8[i3 >> 0] | 0) == 37) i26 = 9; else break;
  } while (0);
  i12 = i4 - i14 | 0;
  if (i27 ? (HEAP32[i50 >> 2] & 32 | 0) == 0 : 0) ___fwritex(i14, i12, i50) | 0;
  if ((i4 | 0) != (i14 | 0)) {
   i4 = i12;
   i14 = i3;
   continue;
  }
  i7 = i3 + 1 | 0;
  i4 = HEAP8[i7 >> 0] | 0;
  i5 = (i4 << 24 >> 24) + -48 | 0;
  if (i5 >>> 0 < 10) {
   i25 = (HEAP8[i3 + 2 >> 0] | 0) == 36;
   i7 = i25 ? i3 + 3 | 0 : i7;
   i4 = HEAP8[i7 >> 0] | 0;
   i10 = i25 ? i5 : -1;
   i2 = i25 ? 1 : i2;
  } else i10 = -1;
  i3 = i4 << 24 >> 24;
  L25 : do if ((i3 & -32 | 0) == 32) {
   i5 = 0;
   while (1) {
    if (!(1 << i3 + -32 & 75913)) {
     i8 = i5;
     break L25;
    }
    i5 = 1 << (i4 << 24 >> 24) + -32 | i5;
    i7 = i7 + 1 | 0;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i4 << 24 >> 24;
    if ((i3 & -32 | 0) != 32) {
     i8 = i5;
     break;
    }
   }
  } else i8 = 0; while (0);
  do if (i4 << 24 >> 24 == 42) {
   i4 = i7 + 1 | 0;
   i3 = (HEAP8[i4 >> 0] | 0) + -48 | 0;
   if (i3 >>> 0 < 10 ? (HEAP8[i7 + 2 >> 0] | 0) == 36 : 0) {
    HEAP32[i53 + (i3 << 2) >> 2] = 10;
    i2 = 1;
    i7 = i7 + 3 | 0;
    i3 = HEAP32[i52 + ((HEAP8[i4 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else {
    if (i2 | 0) {
     i1 = -1;
     break L1;
    }
    if (!i27) {
     i11 = i8;
     i2 = 0;
     i7 = i4;
     i25 = 0;
     break;
    }
    i2 = (HEAP32[i51 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i3 = HEAP32[i2 >> 2] | 0;
    HEAP32[i51 >> 2] = i2 + 4;
    i2 = 0;
    i7 = i4;
   }
   if ((i3 | 0) < 0) {
    i11 = i8 | 8192;
    i25 = 0 - i3 | 0;
   } else {
    i11 = i8;
    i25 = i3;
   }
  } else {
   i5 = (i4 << 24 >> 24) + -48 | 0;
   if (i5 >>> 0 < 10) {
    i3 = i7;
    i4 = 0;
    do {
     i4 = (i4 * 10 | 0) + i5 | 0;
     i3 = i3 + 1 | 0;
     i5 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
    } while (i5 >>> 0 < 10);
    if ((i4 | 0) < 0) {
     i1 = -1;
     break L1;
    } else {
     i11 = i8;
     i7 = i3;
     i25 = i4;
    }
   } else {
    i11 = i8;
    i25 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[i7 >> 0] | 0) == 46) {
   i3 = i7 + 1 | 0;
   i4 = HEAP8[i3 >> 0] | 0;
   if (i4 << 24 >> 24 != 42) {
    i5 = (i4 << 24 >> 24) + -48 | 0;
    if (i5 >>> 0 < 10) i4 = 0; else {
     i8 = 0;
     break;
    }
    while (1) {
     i4 = (i4 * 10 | 0) + i5 | 0;
     i3 = i3 + 1 | 0;
     i5 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
     if (i5 >>> 0 >= 10) {
      i8 = i4;
      break L46;
     }
    }
   }
   i3 = i7 + 2 | 0;
   i4 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i7 + 3 >> 0] | 0) == 36 : 0) {
    HEAP32[i53 + (i4 << 2) >> 2] = 10;
    i8 = HEAP32[i52 + ((HEAP8[i3 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i3 = i7 + 4 | 0;
    break;
   }
   if (i2 | 0) {
    i1 = -1;
    break L1;
   }
   if (i27) {
    i24 = (HEAP32[i51 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i8 = HEAP32[i24 >> 2] | 0;
    HEAP32[i51 >> 2] = i24 + 4;
   } else i8 = 0;
  } else {
   i8 = -1;
   i3 = i7;
  } while (0);
  i9 = 0;
  while (1) {
   i4 = (HEAP8[i3 >> 0] | 0) + -65 | 0;
   if (i4 >>> 0 > 57) {
    i1 = -1;
    break L1;
   }
   i5 = i3 + 1 | 0;
   i4 = HEAP8[44149 + (i9 * 58 | 0) + i4 >> 0] | 0;
   i7 = i4 & 255;
   if ((i7 + -1 | 0) >>> 0 < 8) {
    i3 = i5;
    i9 = i7;
   } else {
    i24 = i5;
    break;
   }
  }
  if (!(i4 << 24 >> 24)) {
   i1 = -1;
   break;
  }
  i5 = (i10 | 0) > -1;
  do if (i4 << 24 >> 24 == 19) if (i5) {
   i1 = -1;
   break L1;
  } else i26 = 52; else {
   if (i5) {
    HEAP32[i53 + (i10 << 2) >> 2] = i7;
    i22 = i52 + (i10 << 3) | 0;
    i23 = HEAP32[i22 + 4 >> 2] | 0;
    i26 = i44;
    HEAP32[i26 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i26 + 4 >> 2] = i23;
    i26 = 52;
    break;
   }
   if (!i27) {
    i1 = 0;
    break L1;
   }
   _pop_arg(i44, i7, i51);
  } while (0);
  if ((i26 | 0) == 52 ? (i26 = 0, !i27) : 0) {
   i4 = i12;
   i14 = i24;
   continue;
  }
  i10 = HEAP8[i3 >> 0] | 0;
  i10 = (i9 | 0) != 0 & (i10 & 15 | 0) == 3 ? i10 & -33 : i10;
  i5 = i11 & -65537;
  i23 = (i11 & 8192 | 0) == 0 ? i11 : i5;
  L75 : do switch (i10 | 0) {
  case 110:
   switch (i9 | 0) {
   case 0:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 1:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 2:
    {
     i4 = HEAP32[i44 >> 2] | 0;
     HEAP32[i4 >> 2] = i1;
     HEAP32[i4 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 3:
    {
     HEAP16[HEAP32[i44 >> 2] >> 1] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 4:
    {
     HEAP8[HEAP32[i44 >> 2] >> 0] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 6:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 7:
    {
     i4 = HEAP32[i44 >> 2] | 0;
     HEAP32[i4 >> 2] = i1;
     HEAP32[i4 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   default:
    {
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   }
  case 112:
   {
    i9 = i23 | 8;
    i8 = i8 >>> 0 > 8 ? i8 : 8;
    i10 = 120;
    i26 = 64;
    break;
   }
  case 88:
  case 120:
   {
    i9 = i23;
    i26 = 64;
    break;
   }
  case 111:
   {
    i5 = i44;
    i4 = HEAP32[i5 >> 2] | 0;
    i5 = HEAP32[i5 + 4 >> 2] | 0;
    if ((i4 | 0) == 0 & (i5 | 0) == 0) i3 = i28; else {
     i3 = i28;
     do {
      i3 = i3 + -1 | 0;
      HEAP8[i3 >> 0] = i4 & 7 | 48;
      i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 3) | 0;
      i5 = tempRet0;
     } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    }
    if (!(i23 & 8)) {
     i4 = i23;
     i9 = 0;
     i7 = 44629;
     i26 = 77;
    } else {
     i9 = i36 - i3 | 0;
     i4 = i23;
     i8 = (i8 | 0) > (i9 | 0) ? i8 : i9 + 1 | 0;
     i9 = 0;
     i7 = 44629;
     i26 = 77;
    }
    break;
   }
  case 105:
  case 100:
   {
    i4 = i44;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    if ((i4 | 0) < 0) {
     i3 = _i64Subtract(0, 0, i3 | 0, i4 | 0) | 0;
     i4 = tempRet0;
     i5 = i44;
     HEAP32[i5 >> 2] = i3;
     HEAP32[i5 + 4 >> 2] = i4;
     i5 = 1;
     i7 = 44629;
     i26 = 76;
     break L75;
    }
    if (!(i23 & 2048)) {
     i7 = i23 & 1;
     i5 = i7;
     i7 = (i7 | 0) == 0 ? 44629 : 44631;
     i26 = 76;
    } else {
     i5 = 1;
     i7 = 44630;
     i26 = 76;
    }
    break;
   }
  case 117:
   {
    i4 = i44;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    i5 = 0;
    i7 = 44629;
    i26 = 76;
    break;
   }
  case 99:
   {
    HEAP8[i37 >> 0] = HEAP32[i44 >> 2];
    i3 = i37;
    i10 = 1;
    i12 = 0;
    i11 = 44629;
    i4 = i28;
    break;
   }
  case 109:
   {
    i4 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    i26 = 82;
    break;
   }
  case 115:
   {
    i4 = HEAP32[i44 >> 2] | 0;
    i4 = i4 | 0 ? i4 : 46531;
    i26 = 82;
    break;
   }
  case 67:
   {
    HEAP32[i49 >> 2] = HEAP32[i44 >> 2];
    HEAP32[i38 >> 2] = 0;
    HEAP32[i44 >> 2] = i49;
    i3 = i49;
    i8 = -1;
    i26 = 86;
    break;
   }
  case 83:
   {
    i3 = HEAP32[i44 >> 2] | 0;
    if (!i8) {
     _pad(i50, 32, i25, 0, i23);
     i3 = 0;
     i26 = 97;
    } else i26 = 86;
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    d6 = +HEAPF64[i44 >> 3];
    HEAP32[i47 >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = d6;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) >= 0) if (!(i23 & 2048)) {
     i22 = i23 & 1;
     i21 = i22;
     i22 = (i22 | 0) == 0 ? 46539 : 46544;
    } else {
     i21 = 1;
     i22 = 46541;
    } else {
     d6 = -d6;
     i21 = 1;
     i22 = 46538;
    }
    HEAPF64[tempDoublePtr >> 3] = d6;
    i20 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if (i20 >>> 0 < 2146435072 | (i20 | 0) == 2146435072 & 0 < 0) {
     d13 = +_frexpl(d6, i47) * 2.0;
     i4 = d13 != 0.0;
     if (i4) HEAP32[i47 >> 2] = (HEAP32[i47 >> 2] | 0) + -1;
     i18 = i10 | 32;
     if ((i18 | 0) == 97) {
      i11 = i10 & 32;
      i14 = (i11 | 0) == 0 ? i22 : i22 + 9 | 0;
      i12 = i21 | 2;
      i3 = 12 - i8 | 0;
      do if (!(i8 >>> 0 > 11 | (i3 | 0) == 0)) {
       d6 = 8.0;
       do {
        i3 = i3 + -1 | 0;
        d6 = d6 * 16.0;
       } while ((i3 | 0) != 0);
       if ((HEAP8[i14 >> 0] | 0) == 45) {
        d6 = -(d6 + (-d13 - d6));
        break;
       } else {
        d6 = d13 + d6 - d6;
        break;
       }
      } else d6 = d13; while (0);
      i4 = HEAP32[i47 >> 2] | 0;
      i3 = (i4 | 0) < 0 ? 0 - i4 | 0 : i4;
      i3 = _fmt_u(i3, ((i3 | 0) < 0) << 31 >> 31, i41) | 0;
      if ((i3 | 0) == (i41 | 0)) {
       HEAP8[i42 >> 0] = 48;
       i3 = i42;
      }
      HEAP8[i3 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i9 = i3 + -2 | 0;
      HEAP8[i9 >> 0] = i10 + 15;
      i7 = (i8 | 0) < 1;
      i5 = (i23 & 8 | 0) == 0;
      i4 = i46;
      while (1) {
       i22 = ~~d6;
       i3 = i4 + 1 | 0;
       HEAP8[i4 >> 0] = HEAPU8[44613 + i22 >> 0] | i11;
       d6 = (d6 - +(i22 | 0)) * 16.0;
       do if ((i3 - i39 | 0) == 1) {
        if (i5 & (i7 & d6 == 0.0)) break;
        HEAP8[i3 >> 0] = 46;
        i3 = i4 + 2 | 0;
       } while (0);
       if (!(d6 != 0.0)) break; else i4 = i3;
      }
      i5 = i9;
      i8 = (i8 | 0) != 0 & (i30 + i3 | 0) < (i8 | 0) ? i31 + i8 - i5 | 0 : i29 - i5 + i3 | 0;
      i7 = i8 + i12 | 0;
      _pad(i50, 32, i25, i7, i23);
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i14, i12, i50) | 0;
      _pad(i50, 48, i25, i7, i23 ^ 65536);
      i4 = i3 - i39 | 0;
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i46, i4, i50) | 0;
      i3 = i43 - i5 | 0;
      _pad(i50, 48, i8 - (i4 + i3) | 0, 0, 0);
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i9, i3, i50) | 0;
      _pad(i50, 32, i25, i7, i23 ^ 8192);
      i3 = (i7 | 0) < (i25 | 0) ? i25 : i7;
      break;
     }
     i3 = (i8 | 0) < 0 ? 6 : i8;
     if (i4) {
      i4 = (HEAP32[i47 >> 2] | 0) + -28 | 0;
      HEAP32[i47 >> 2] = i4;
      d6 = d13 * 268435456.0;
     } else {
      d6 = d13;
      i4 = HEAP32[i47 >> 2] | 0;
     }
     i20 = (i4 | 0) < 0 ? i45 : i32;
     i19 = i20;
     i4 = i20;
     do {
      i17 = ~~d6 >>> 0;
      HEAP32[i4 >> 2] = i17;
      i4 = i4 + 4 | 0;
      d6 = (d6 - +(i17 >>> 0)) * 1.0e9;
     } while (d6 != 0.0);
     i5 = i4;
     i4 = HEAP32[i47 >> 2] | 0;
     if ((i4 | 0) > 0) {
      i8 = i20;
      while (1) {
       i9 = (i4 | 0) > 29 ? 29 : i4;
       i7 = i5 + -4 | 0;
       do if (i7 >>> 0 < i8 >>> 0) i7 = i8; else {
        i4 = 0;
        do {
         i17 = _bitshift64Shl(HEAP32[i7 >> 2] | 0, 0, i9 | 0) | 0;
         i17 = _i64Add(i17 | 0, tempRet0 | 0, i4 | 0, 0) | 0;
         i4 = tempRet0;
         i16 = ___uremdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         HEAP32[i7 >> 2] = i16;
         i4 = ___udivdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         i7 = i7 + -4 | 0;
        } while (i7 >>> 0 >= i8 >>> 0);
        if (!i4) {
         i7 = i8;
         break;
        }
        i7 = i8 + -4 | 0;
        HEAP32[i7 >> 2] = i4;
       } while (0);
       while (1) {
        if (i5 >>> 0 <= i7 >>> 0) break;
        i4 = i5 + -4 | 0;
        if (!(HEAP32[i4 >> 2] | 0)) i5 = i4; else break;
       }
       i4 = (HEAP32[i47 >> 2] | 0) - i9 | 0;
       HEAP32[i47 >> 2] = i4;
       if ((i4 | 0) > 0) i8 = i7; else break;
      }
     } else i7 = i20;
     if ((i4 | 0) < 0) {
      i14 = ((i3 + 25 | 0) / 9 | 0) + 1 | 0;
      i15 = (i18 | 0) == 102;
      i11 = i7;
      while (1) {
       i12 = 0 - i4 | 0;
       i12 = (i12 | 0) > 9 ? 9 : i12;
       do if (i11 >>> 0 < i5 >>> 0) {
        i4 = (1 << i12) + -1 | 0;
        i8 = 1e9 >>> i12;
        i7 = 0;
        i9 = i11;
        do {
         i17 = HEAP32[i9 >> 2] | 0;
         HEAP32[i9 >> 2] = (i17 >>> i12) + i7;
         i7 = Math_imul(i17 & i4, i8) | 0;
         i9 = i9 + 4 | 0;
        } while (i9 >>> 0 < i5 >>> 0);
        i4 = (HEAP32[i11 >> 2] | 0) == 0 ? i11 + 4 | 0 : i11;
        if (!i7) {
         i7 = i4;
         break;
        }
        HEAP32[i5 >> 2] = i7;
        i7 = i4;
        i5 = i5 + 4 | 0;
       } else i7 = (HEAP32[i11 >> 2] | 0) == 0 ? i11 + 4 | 0 : i11; while (0);
       i4 = i15 ? i20 : i7;
       i5 = (i5 - i4 >> 2 | 0) > (i14 | 0) ? i4 + (i14 << 2) | 0 : i5;
       i4 = (HEAP32[i47 >> 2] | 0) + i12 | 0;
       HEAP32[i47 >> 2] = i4;
       if ((i4 | 0) >= 0) {
        i15 = i7;
        break;
       } else i11 = i7;
      }
     } else i15 = i7;
     do if (i15 >>> 0 < i5 >>> 0) {
      i4 = (i19 - i15 >> 2) * 9 | 0;
      i8 = HEAP32[i15 >> 2] | 0;
      if (i8 >>> 0 < 10) break; else i7 = 10;
      do {
       i7 = i7 * 10 | 0;
       i4 = i4 + 1 | 0;
      } while (i8 >>> 0 >= i7 >>> 0);
     } else i4 = 0; while (0);
     i16 = (i18 | 0) == 103;
     i17 = (i3 | 0) != 0;
     i7 = i3 - ((i18 | 0) != 102 ? i4 : 0) + ((i17 & i16) << 31 >> 31) | 0;
     if ((i7 | 0) < (((i5 - i19 >> 2) * 9 | 0) + -9 | 0)) {
      i9 = i7 + 9216 | 0;
      i7 = i20 + 4 + (((i9 | 0) / 9 | 0) + -1024 << 2) | 0;
      i9 = ((i9 | 0) % 9 | 0) + 1 | 0;
      if ((i9 | 0) < 9) {
       i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i9 = i9 + 1 | 0;
       } while ((i9 | 0) != 9);
      } else i8 = 10;
      i12 = HEAP32[i7 >> 2] | 0;
      i14 = (i12 >>> 0) % (i8 >>> 0) | 0;
      i9 = (i7 + 4 | 0) == (i5 | 0);
      do if (i9 & (i14 | 0) == 0) i8 = i15; else {
       d13 = (((i12 >>> 0) / (i8 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       i11 = (i8 | 0) / 2 | 0;
       if (i14 >>> 0 < i11 >>> 0) d6 = .5; else d6 = i9 & (i14 | 0) == (i11 | 0) ? 1.0 : 1.5;
       do if (i21) {
        if ((HEAP8[i22 >> 0] | 0) != 45) break;
        d13 = -d13;
        d6 = -d6;
       } while (0);
       i9 = i12 - i14 | 0;
       HEAP32[i7 >> 2] = i9;
       if (!(d13 + d6 != d13)) {
        i8 = i15;
        break;
       }
       i18 = i9 + i8 | 0;
       HEAP32[i7 >> 2] = i18;
       if (i18 >>> 0 > 999999999) {
        i4 = i15;
        while (1) {
         i8 = i7 + -4 | 0;
         HEAP32[i7 >> 2] = 0;
         if (i8 >>> 0 < i4 >>> 0) {
          i4 = i4 + -4 | 0;
          HEAP32[i4 >> 2] = 0;
         }
         i18 = (HEAP32[i8 >> 2] | 0) + 1 | 0;
         HEAP32[i8 >> 2] = i18;
         if (i18 >>> 0 > 999999999) i7 = i8; else {
          i11 = i4;
          i7 = i8;
          break;
         }
        }
       } else i11 = i15;
       i4 = (i19 - i11 >> 2) * 9 | 0;
       i9 = HEAP32[i11 >> 2] | 0;
       if (i9 >>> 0 < 10) {
        i8 = i11;
        break;
       } else i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i4 = i4 + 1 | 0;
       } while (i9 >>> 0 >= i8 >>> 0);
       i8 = i11;
      } while (0);
      i18 = i7 + 4 | 0;
      i15 = i8;
      i5 = i5 >>> 0 > i18 >>> 0 ? i18 : i5;
     }
     i12 = 0 - i4 | 0;
     while (1) {
      if (i5 >>> 0 <= i15 >>> 0) {
       i14 = 0;
       i18 = i5;
       break;
      }
      i7 = i5 + -4 | 0;
      if (!(HEAP32[i7 >> 2] | 0)) i5 = i7; else {
       i14 = 1;
       i18 = i5;
       break;
      }
     }
     do if (i16) {
      i3 = (i17 & 1 ^ 1) + i3 | 0;
      if ((i3 | 0) > (i4 | 0) & (i4 | 0) > -5) {
       i10 = i10 + -1 | 0;
       i3 = i3 + -1 - i4 | 0;
      } else {
       i10 = i10 + -2 | 0;
       i3 = i3 + -1 | 0;
      }
      i5 = i23 & 8;
      if (i5 | 0) break;
      do if (i14) {
       i5 = HEAP32[i18 + -4 >> 2] | 0;
       if (!i5) {
        i7 = 9;
        break;
       }
       if (!((i5 >>> 0) % 10 | 0)) {
        i8 = 10;
        i7 = 0;
       } else {
        i7 = 0;
        break;
       }
       do {
        i8 = i8 * 10 | 0;
        i7 = i7 + 1 | 0;
       } while (!((i5 >>> 0) % (i8 >>> 0) | 0 | 0));
      } else i7 = 9; while (0);
      i5 = ((i18 - i19 >> 2) * 9 | 0) + -9 | 0;
      if ((i10 | 32 | 0) == 102) {
       i5 = i5 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      } else {
       i5 = i5 + i4 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      }
     } else i5 = i23 & 8; while (0);
     i11 = i3 | i5;
     i8 = (i11 | 0) != 0 & 1;
     i9 = (i10 | 32 | 0) == 102;
     if (i9) {
      i4 = (i4 | 0) > 0 ? i4 : 0;
      i10 = 0;
     } else {
      i7 = (i4 | 0) < 0 ? i12 : i4;
      i7 = _fmt_u(i7, ((i7 | 0) < 0) << 31 >> 31, i41) | 0;
      if ((i43 - i7 | 0) < 2) do {
       i7 = i7 + -1 | 0;
       HEAP8[i7 >> 0] = 48;
      } while ((i43 - i7 | 0) < 2);
      HEAP8[i7 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i19 = i7 + -2 | 0;
      HEAP8[i19 >> 0] = i10;
      i4 = i43 - i19 | 0;
      i10 = i19;
     }
     i12 = i21 + 1 + i3 + i8 + i4 | 0;
     _pad(i50, 32, i25, i12, i23);
     if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i22, i21, i50) | 0;
     _pad(i50, 48, i25, i12, i23 ^ 65536);
     do if (i9) {
      i7 = i15 >>> 0 > i20 >>> 0 ? i20 : i15;
      i4 = i7;
      do {
       i5 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i33) | 0;
       do if ((i4 | 0) == (i7 | 0)) {
        if ((i5 | 0) != (i33 | 0)) break;
        HEAP8[i35 >> 0] = 48;
        i5 = i35;
       } else {
        if (i5 >>> 0 <= i46 >>> 0) break;
        _memset(i46 | 0, 48, i5 - i39 | 0) | 0;
        do i5 = i5 + -1 | 0; while (i5 >>> 0 > i46 >>> 0);
       } while (0);
       if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i5, i34 - i5 | 0, i50) | 0;
       i4 = i4 + 4 | 0;
      } while (i4 >>> 0 <= i20 >>> 0);
      do if (i11 | 0) {
       if (HEAP32[i50 >> 2] & 32 | 0) break;
       ___fwritex(46569, 1, i50) | 0;
      } while (0);
      if ((i3 | 0) > 0 & i4 >>> 0 < i18 >>> 0) {
       i5 = i4;
       while (1) {
        i4 = _fmt_u(HEAP32[i5 >> 2] | 0, 0, i33) | 0;
        if (i4 >>> 0 > i46 >>> 0) {
         _memset(i46 | 0, 48, i4 - i39 | 0) | 0;
         do i4 = i4 + -1 | 0; while (i4 >>> 0 > i46 >>> 0);
        }
        if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > 9 ? 9 : i3, i50) | 0;
        i5 = i5 + 4 | 0;
        i4 = i3 + -9 | 0;
        if (!((i3 | 0) > 9 & i5 >>> 0 < i18 >>> 0)) {
         i3 = i4;
         break;
        } else i3 = i4;
       }
      }
      _pad(i50, 48, i3 + 9 | 0, 9, 0);
     } else {
      i9 = i14 ? i18 : i15 + 4 | 0;
      if ((i3 | 0) > -1) {
       i8 = (i5 | 0) == 0;
       i7 = i15;
       do {
        i4 = _fmt_u(HEAP32[i7 >> 2] | 0, 0, i33) | 0;
        if ((i4 | 0) == (i33 | 0)) {
         HEAP8[i35 >> 0] = 48;
         i4 = i35;
        }
        do if ((i7 | 0) == (i15 | 0)) {
         i5 = i4 + 1 | 0;
         if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, 1, i50) | 0;
         if (i8 & (i3 | 0) < 1) {
          i4 = i5;
          break;
         }
         if (HEAP32[i50 >> 2] & 32 | 0) {
          i4 = i5;
          break;
         }
         ___fwritex(46569, 1, i50) | 0;
         i4 = i5;
        } else {
         if (i4 >>> 0 <= i46 >>> 0) break;
         _memset(i46 | 0, 48, i4 + i40 | 0) | 0;
         do i4 = i4 + -1 | 0; while (i4 >>> 0 > i46 >>> 0);
        } while (0);
        i5 = i34 - i4 | 0;
        if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > (i5 | 0) ? i5 : i3, i50) | 0;
        i3 = i3 - i5 | 0;
        i7 = i7 + 4 | 0;
       } while (i7 >>> 0 < i9 >>> 0 & (i3 | 0) > -1);
      }
      _pad(i50, 48, i3 + 18 | 0, 18, 0);
      if (HEAP32[i50 >> 2] & 32 | 0) break;
      ___fwritex(i10, i43 - i10 | 0, i50) | 0;
     } while (0);
     _pad(i50, 32, i25, i12, i23 ^ 8192);
     i3 = (i12 | 0) < (i25 | 0) ? i25 : i12;
    } else {
     i9 = (i10 & 32 | 0) != 0;
     i8 = d6 != d6 | 0.0 != 0.0;
     i4 = i8 ? 0 : i21;
     i7 = i4 + 3 | 0;
     _pad(i50, 32, i25, i7, i5);
     i3 = HEAP32[i50 >> 2] | 0;
     if (!(i3 & 32)) {
      ___fwritex(i22, i4, i50) | 0;
      i3 = HEAP32[i50 >> 2] | 0;
     }
     if (!(i3 & 32)) ___fwritex(i8 ? (i9 ? 46846 : 46565) : i9 ? 46557 : 46561, 3, i50) | 0;
     _pad(i50, 32, i25, i7, i23 ^ 8192);
     i3 = (i7 | 0) < (i25 | 0) ? i25 : i7;
    } while (0);
    i4 = i3;
    i14 = i24;
    continue L1;
   }
  default:
   {
    i3 = i14;
    i5 = i23;
    i10 = i8;
    i12 = 0;
    i11 = 44629;
    i4 = i28;
   }
  } while (0);
  L311 : do if ((i26 | 0) == 64) {
   i5 = i44;
   i4 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[i5 + 4 >> 2] | 0;
   i7 = i10 & 32;
   if (!((i4 | 0) == 0 & (i5 | 0) == 0)) {
    i3 = i28;
    do {
     i3 = i3 + -1 | 0;
     HEAP8[i3 >> 0] = HEAPU8[44613 + (i4 & 15) >> 0] | i7;
     i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 4) | 0;
     i5 = tempRet0;
    } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    i26 = i44;
    if ((i9 & 8 | 0) == 0 | (HEAP32[i26 >> 2] | 0) == 0 & (HEAP32[i26 + 4 >> 2] | 0) == 0) {
     i4 = i9;
     i9 = 0;
     i7 = 44629;
     i26 = 77;
    } else {
     i4 = i9;
     i9 = 2;
     i7 = 44629 + (i10 >> 4) | 0;
     i26 = 77;
    }
   } else {
    i3 = i28;
    i4 = i9;
    i9 = 0;
    i7 = 44629;
    i26 = 77;
   }
  } else if ((i26 | 0) == 76) {
   i3 = _fmt_u(i3, i4, i28) | 0;
   i4 = i23;
   i9 = i5;
   i26 = 77;
  } else if ((i26 | 0) == 82) {
   i26 = 0;
   i23 = _memchr(i4, 0, i8) | 0;
   i22 = (i23 | 0) == 0;
   i3 = i4;
   i10 = i22 ? i8 : i23 - i4 | 0;
   i12 = 0;
   i11 = 44629;
   i4 = i22 ? i4 + i8 | 0 : i23;
  } else if ((i26 | 0) == 86) {
   i26 = 0;
   i5 = 0;
   i4 = 0;
   i9 = i3;
   while (1) {
    i7 = HEAP32[i9 >> 2] | 0;
    if (!i7) break;
    i4 = _wctomb(i48, i7) | 0;
    if ((i4 | 0) < 0 | i4 >>> 0 > (i8 - i5 | 0) >>> 0) break;
    i5 = i4 + i5 | 0;
    if (i8 >>> 0 > i5 >>> 0) i9 = i9 + 4 | 0; else break;
   }
   if ((i4 | 0) < 0) {
    i1 = -1;
    break L1;
   }
   _pad(i50, 32, i25, i5, i23);
   if (!i5) {
    i3 = 0;
    i26 = 97;
   } else {
    i7 = 0;
    while (1) {
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) {
      i3 = i5;
      i26 = 97;
      break L311;
     }
     i4 = _wctomb(i48, i4) | 0;
     i7 = i4 + i7 | 0;
     if ((i7 | 0) > (i5 | 0)) {
      i3 = i5;
      i26 = 97;
      break L311;
     }
     if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i48, i4, i50) | 0;
     if (i7 >>> 0 >= i5 >>> 0) {
      i3 = i5;
      i26 = 97;
      break;
     } else i3 = i3 + 4 | 0;
    }
   }
  } while (0);
  if ((i26 | 0) == 97) {
   i26 = 0;
   _pad(i50, 32, i25, i3, i23 ^ 8192);
   i4 = (i25 | 0) > (i3 | 0) ? i25 : i3;
   i14 = i24;
   continue;
  }
  if ((i26 | 0) == 77) {
   i26 = 0;
   i5 = (i8 | 0) > -1 ? i4 & -65537 : i4;
   i4 = i44;
   i4 = (HEAP32[i4 >> 2] | 0) != 0 | (HEAP32[i4 + 4 >> 2] | 0) != 0;
   if ((i8 | 0) != 0 | i4) {
    i10 = (i4 & 1 ^ 1) + (i36 - i3) | 0;
    i10 = (i8 | 0) > (i10 | 0) ? i8 : i10;
    i12 = i9;
    i11 = i7;
    i4 = i28;
   } else {
    i3 = i28;
    i10 = 0;
    i12 = i9;
    i11 = i7;
    i4 = i28;
   }
  }
  i9 = i4 - i3 | 0;
  i7 = (i10 | 0) < (i9 | 0) ? i9 : i10;
  i8 = i12 + i7 | 0;
  i4 = (i25 | 0) < (i8 | 0) ? i8 : i25;
  _pad(i50, 32, i4, i8, i5);
  if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i11, i12, i50) | 0;
  _pad(i50, 48, i4, i8, i5 ^ 65536);
  _pad(i50, 48, i7, i9, 0);
  if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i3, i9, i50) | 0;
  _pad(i50, 32, i4, i8, i5 ^ 8192);
  i14 = i24;
 }
 L345 : do if ((i26 | 0) == 244) if (!i50) if (i2) {
  i1 = 1;
  while (1) {
   i2 = HEAP32[i53 + (i1 << 2) >> 2] | 0;
   if (!i2) break;
   _pop_arg(i52 + (i1 << 3) | 0, i2, i51);
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break L345;
   }
  }
  if ((i1 | 0) < 10) while (1) {
   if (HEAP32[i53 + (i1 << 2) >> 2] | 0) {
    i1 = -1;
    break L345;
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break;
   }
  } else i1 = 1;
 } else i1 = 0; while (0);
 STACKTOP = i54;
 return i1 | 0;
}

function ___floatscan(i24, i2, i21) {
 i24 = i24 | 0;
 i2 = i2 | 0;
 i21 = i21 | 0;
 var d1 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i27 = i31;
 switch (i2 | 0) {
 case 0:
  {
   i30 = 24;
   i29 = -149;
   i19 = 4;
   break;
  }
 case 1:
  {
   i30 = 53;
   i29 = -1074;
   i19 = 4;
   break;
  }
 case 2:
  {
   i30 = 53;
   i29 = -1074;
   i19 = 4;
   break;
  }
 default:
  d1 = 0.0;
 }
 L4 : do if ((i19 | 0) == 4) {
  i23 = i24 + 4 | 0;
  i22 = i24 + 100 | 0;
  do {
   i2 = HEAP32[i23 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
    HEAP32[i23 >> 2] = i2 + 1;
    i2 = HEAPU8[i2 >> 0] | 0;
   } else i2 = ___shgetc(i24) | 0;
  } while ((_isspace(i2) | 0) != 0);
  L13 : do switch (i2 | 0) {
  case 43:
  case 45:
   {
    i3 = 1 - (((i2 | 0) == 45 & 1) << 1) | 0;
    i2 = HEAP32[i23 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
     HEAP32[i23 >> 2] = i2 + 1;
     i2 = HEAPU8[i2 >> 0] | 0;
     i28 = i3;
     break L13;
    } else {
     i2 = ___shgetc(i24) | 0;
     i28 = i3;
     break L13;
    }
   }
  default:
   i28 = 1;
  } while (0);
  i3 = i2;
  i2 = 0;
  do {
   if ((i3 | 32 | 0) != (HEAP8[46837 + i2 >> 0] | 0)) break;
   do if (i2 >>> 0 < 7) {
    i3 = HEAP32[i23 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
     HEAP32[i23 >> 2] = i3 + 1;
     i3 = HEAPU8[i3 >> 0] | 0;
     break;
    } else {
     i3 = ___shgetc(i24) | 0;
     break;
    }
   } while (0);
   i2 = i2 + 1 | 0;
  } while (i2 >>> 0 < 8);
  L29 : do switch (i2 | 0) {
  case 8:
   break;
  case 3:
   {
    i19 = 23;
    break;
   }
  default:
   {
    i5 = (i21 | 0) != 0;
    if (i5 & i2 >>> 0 > 3) if ((i2 | 0) == 8) break L29; else {
     i19 = 23;
     break L29;
    }
    L34 : do if (!i2) {
     i2 = 0;
     do {
      if ((i3 | 32 | 0) != (HEAP8[46846 + i2 >> 0] | 0)) break L34;
      do if (i2 >>> 0 < 2) {
       i3 = HEAP32[i23 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
        break;
       } else {
        i3 = ___shgetc(i24) | 0;
        break;
       }
      } while (0);
      i2 = i2 + 1 | 0;
     } while (i2 >>> 0 < 3);
    } while (0);
    switch (i2 | 0) {
    case 3:
     {
      i2 = HEAP32[i23 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
       HEAP32[i23 >> 2] = i2 + 1;
       i2 = HEAPU8[i2 >> 0] | 0;
      } else i2 = ___shgetc(i24) | 0;
      if ((i2 | 0) == 40) i2 = 1; else {
       if (!(HEAP32[i22 >> 2] | 0)) {
        d1 = nan;
        break L4;
       }
       HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       d1 = nan;
       break L4;
      }
      while (1) {
       i3 = HEAP32[i23 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
       } else i3 = ___shgetc(i24) | 0;
       if (!((i3 + -48 | 0) >>> 0 < 10 | (i3 + -65 | 0) >>> 0 < 26) ? !((i3 | 0) == 95 | (i3 + -97 | 0) >>> 0 < 26) : 0) break;
       i2 = i2 + 1 | 0;
      }
      if ((i3 | 0) == 41) {
       d1 = nan;
       break L4;
      }
      i3 = (HEAP32[i22 >> 2] | 0) == 0;
      if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
      if (!i5) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim(i24, 0);
       d1 = 0.0;
       break L4;
      }
      if (!i2) {
       d1 = nan;
       break L4;
      }
      while (1) {
       i2 = i2 + -1 | 0;
       if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       if (!i2) {
        d1 = nan;
        break L4;
       }
      }
     }
    case 0:
     {
      do if ((i3 | 0) == 48) {
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i24) | 0;
       if ((i2 | 32 | 0) != 120) {
        if (!(HEAP32[i22 >> 2] | 0)) {
         i2 = 48;
         break;
        }
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        i2 = 48;
        break;
       }
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
        i5 = 0;
       } else {
        i2 = ___shgetc(i24) | 0;
        i5 = 0;
       }
       L94 : while (1) {
        switch (i2 | 0) {
        case 46:
         {
          i19 = 74;
          break L94;
         }
        case 48:
         break;
        default:
         {
          i17 = 0;
          i6 = 0;
          i16 = 0;
          i3 = 0;
          i8 = i5;
          i9 = 0;
          i15 = 0;
          d7 = 1.0;
          i5 = 0;
          d1 = 0.0;
          break L94;
         }
        }
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
         i5 = 1;
         continue;
        } else {
         i2 = ___shgetc(i24) | 0;
         i5 = 1;
         continue;
        }
       }
       if ((i19 | 0) == 74) {
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
        } else i2 = ___shgetc(i24) | 0;
        if ((i2 | 0) == 48) {
         i5 = 0;
         i3 = 0;
         do {
          i2 = HEAP32[i23 >> 2] | 0;
          if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
           HEAP32[i23 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i24) | 0;
          i5 = _i64Add(i5 | 0, i3 | 0, -1, -1) | 0;
          i3 = tempRet0;
         } while ((i2 | 0) == 48);
         i17 = 0;
         i6 = 0;
         i16 = i5;
         i8 = 1;
         i9 = 1;
         i15 = 0;
         d7 = 1.0;
         i5 = 0;
         d1 = 0.0;
        } else {
         i17 = 0;
         i6 = 0;
         i16 = 0;
         i3 = 0;
         i8 = i5;
         i9 = 1;
         i15 = 0;
         d7 = 1.0;
         i5 = 0;
         d1 = 0.0;
        }
       }
       while (1) {
        i13 = i2 + -48 | 0;
        i10 = i2 | 32;
        if (i13 >>> 0 >= 10) {
         i14 = (i2 | 0) == 46;
         if (!(i14 | (i10 + -97 | 0) >>> 0 < 6)) {
          i10 = i16;
          i13 = i17;
          break;
         }
         if (i14) if (!i9) {
          i14 = i6;
          i3 = i17;
          i13 = i17;
          i9 = 1;
          i10 = i15;
          d4 = d7;
         } else {
          i10 = i16;
          i13 = i17;
          i2 = 46;
          break;
         } else i19 = 86;
        } else i19 = 86;
        if ((i19 | 0) == 86) {
         i19 = 0;
         i2 = (i2 | 0) > 57 ? i10 + -87 | 0 : i13;
         do if (!((i17 | 0) < 0 | (i17 | 0) == 0 & i6 >>> 0 < 8)) {
          if ((i17 | 0) < 0 | (i17 | 0) == 0 & i6 >>> 0 < 14) {
           d12 = d7 * .0625;
           i10 = i15;
           d4 = d12;
           d1 = d1 + d12 * +(i2 | 0);
           break;
          }
          if ((i15 | 0) != 0 | (i2 | 0) == 0) {
           i10 = i15;
           d4 = d7;
          } else {
           i10 = 1;
           d4 = d7;
           d1 = d1 + d7 * .5;
          }
         } else {
          i10 = i15;
          d4 = d7;
          i5 = i2 + (i5 << 4) | 0;
         } while (0);
         i6 = _i64Add(i6 | 0, i17 | 0, 1, 0) | 0;
         i14 = i16;
         i13 = tempRet0;
         i8 = 1;
        }
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i17 = i13;
         i16 = i14;
         i2 = HEAPU8[i2 >> 0] | 0;
         i15 = i10;
         d7 = d4;
         continue;
        } else {
         i17 = i13;
         i16 = i14;
         i2 = ___shgetc(i24) | 0;
         i15 = i10;
         d7 = d4;
         continue;
        }
       }
       if (!i8) {
        i2 = (HEAP32[i22 >> 2] | 0) == 0;
        if (!i2) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        if (i21) {
         if (!i2 ? (i18 = HEAP32[i23 >> 2] | 0, HEAP32[i23 >> 2] = i18 + -1, i9 | 0) : 0) HEAP32[i23 >> 2] = i18 + -2;
        } else ___shlim(i24, 0);
        d1 = +(i28 | 0) * 0.0;
        break L4;
       }
       i8 = (i9 | 0) == 0;
       i9 = i8 ? i6 : i10;
       i8 = i8 ? i13 : i3;
       if ((i13 | 0) < 0 | (i13 | 0) == 0 & i6 >>> 0 < 8) {
        i3 = i13;
        do {
         i5 = i5 << 4;
         i6 = _i64Add(i6 | 0, i3 | 0, 1, 0) | 0;
         i3 = tempRet0;
        } while ((i3 | 0) < 0 | (i3 | 0) == 0 & i6 >>> 0 < 8);
       }
       if ((i2 | 32 | 0) == 112) {
        i3 = _scanexp(i24, i21) | 0;
        i2 = tempRet0;
        if ((i3 | 0) == 0 & (i2 | 0) == -2147483648) {
         if (!i21) {
          ___shlim(i24, 0);
          d1 = 0.0;
          break L4;
         }
         if (!(HEAP32[i22 >> 2] | 0)) {
          i3 = 0;
          i2 = 0;
         } else {
          HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
          i3 = 0;
          i2 = 0;
         }
        }
       } else if (!(HEAP32[i22 >> 2] | 0)) {
        i3 = 0;
        i2 = 0;
       } else {
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        i3 = 0;
        i2 = 0;
       }
       i27 = _bitshift64Shl(i9 | 0, i8 | 0, 2) | 0;
       i27 = _i64Add(i27 | 0, tempRet0 | 0, -32, -1) | 0;
       i2 = _i64Add(i27 | 0, tempRet0 | 0, i3 | 0, i2 | 0) | 0;
       i3 = tempRet0;
       if (!i5) {
        d1 = +(i28 | 0) * 0.0;
        break L4;
       }
       if ((i3 | 0) > 0 | (i3 | 0) == 0 & i2 >>> 0 > (0 - i29 | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i28 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break L4;
       }
       i27 = i29 + -106 | 0;
       i26 = ((i27 | 0) < 0) << 31 >> 31;
       if ((i3 | 0) < (i26 | 0) | (i3 | 0) == (i26 | 0) & i2 >>> 0 < i27 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i28 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if ((i5 | 0) > -1) {
        do {
         i26 = !(d1 >= .5);
         i27 = i26 & 1 | i5 << 1;
         i5 = i27 ^ 1;
         d1 = d1 + (i26 ? d1 : d1 + -1.0);
         i2 = _i64Add(i2 | 0, i3 | 0, -1, -1) | 0;
         i3 = tempRet0;
        } while ((i27 | 0) > -1);
        i6 = i2;
        d7 = d1;
       } else {
        i6 = i2;
        d7 = d1;
       }
       i2 = _i64Subtract(32, 0, i29 | 0, ((i29 | 0) < 0) << 31 >> 31 | 0) | 0;
       i2 = _i64Add(i6 | 0, i3 | 0, i2 | 0, tempRet0 | 0) | 0;
       i29 = tempRet0;
       if (0 > (i29 | 0) | 0 == (i29 | 0) & i30 >>> 0 > i2 >>> 0) if ((i2 | 0) < 0) {
        i2 = 0;
        i19 = 127;
       } else i19 = 125; else {
        i2 = i30;
        i19 = 125;
       }
       if ((i19 | 0) == 125) if ((i2 | 0) < 53) i19 = 127; else {
        i3 = i2;
        d4 = +(i28 | 0);
        d1 = 0.0;
       }
       if ((i19 | 0) == 127) {
        d1 = +(i28 | 0);
        i3 = i2;
        d4 = d1;
        d1 = +_copysignl(+_scalbn(1.0, 84 - i2 | 0), d1);
       }
       i30 = (i5 & 1 | 0) == 0 & (d7 != 0.0 & (i3 | 0) < 32);
       d1 = d4 * (i30 ? 0.0 : d7) + (d1 + d4 * +(((i30 & 1) + i5 | 0) >>> 0)) - d1;
       if (!(d1 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
       d1 = +_scalbnl(d1, i6);
       break L4;
      } else i2 = i3; while (0);
      i25 = i29 + i30 | 0;
      i26 = 0 - i25 | 0;
      i5 = 0;
      L184 : while (1) {
       switch (i2 | 0) {
       case 46:
        {
         i19 = 138;
         break L184;
        }
       case 48:
        break;
       default:
        {
         i3 = 0;
         i10 = 0;
         i9 = 0;
         break L184;
        }
       }
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
        i5 = 1;
        continue;
       } else {
        i2 = ___shgetc(i24) | 0;
        i5 = 1;
        continue;
       }
      }
      if ((i19 | 0) == 138) {
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i24) | 0;
       if ((i2 | 0) == 48) {
        i3 = 0;
        i2 = 0;
        while (1) {
         i3 = _i64Add(i3 | 0, i2 | 0, -1, -1) | 0;
         i5 = tempRet0;
         i2 = HEAP32[i23 >> 2] | 0;
         if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
          HEAP32[i23 >> 2] = i2 + 1;
          i2 = HEAPU8[i2 >> 0] | 0;
         } else i2 = ___shgetc(i24) | 0;
         if ((i2 | 0) == 48) i2 = i5; else {
          i10 = i5;
          i5 = 1;
          i9 = 1;
          break;
         }
        }
       } else {
        i3 = 0;
        i10 = 0;
        i9 = 1;
       }
      }
      HEAP32[i27 >> 2] = 0;
      i8 = i2 + -48 | 0;
      i6 = (i2 | 0) == 46;
      L203 : do if (i6 | i8 >>> 0 < 10) {
       i20 = i27 + 496 | 0;
       i17 = 0;
       i14 = 0;
       i15 = i6;
       i19 = i10;
       i13 = i5;
       i18 = i9;
       i5 = 0;
       i6 = 0;
       i9 = 0;
       L205 : while (1) {
        do if (i15) if (!i18) {
         i3 = i17;
         i10 = i14;
         i18 = 1;
        } else {
         i10 = i19;
         i2 = i17;
         i8 = i14;
         break L205;
        } else {
         i15 = _i64Add(i17 | 0, i14 | 0, 1, 0) | 0;
         i14 = tempRet0;
         i16 = (i2 | 0) != 48;
         if ((i6 | 0) >= 125) {
          if (!i16) {
           i10 = i19;
           i17 = i15;
           break;
          }
          HEAP32[i20 >> 2] = HEAP32[i20 >> 2] | 1;
          i10 = i19;
          i17 = i15;
          break;
         }
         i10 = i27 + (i6 << 2) | 0;
         if (i5) i8 = i2 + -48 + ((HEAP32[i10 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[i10 >> 2] = i8;
         i5 = i5 + 1 | 0;
         i8 = (i5 | 0) == 9;
         i10 = i19;
         i17 = i15;
         i13 = 1;
         i5 = i8 ? 0 : i5;
         i6 = (i8 & 1) + i6 | 0;
         i9 = i16 ? i15 : i9;
        } while (0);
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
        } else i2 = ___shgetc(i24) | 0;
        i8 = i2 + -48 | 0;
        i15 = (i2 | 0) == 46;
        if (!(i15 | i8 >>> 0 < 10)) {
         i8 = i18;
         i19 = 161;
         break L203;
        } else i19 = i10;
       }
       i13 = (i13 | 0) != 0;
       i19 = 169;
      } else {
       i17 = 0;
       i14 = 0;
       i13 = i5;
       i8 = i9;
       i5 = 0;
       i6 = 0;
       i9 = 0;
       i19 = 161;
      } while (0);
      do if ((i19 | 0) == 161) {
       i20 = (i8 | 0) == 0;
       i3 = i20 ? i17 : i3;
       i10 = i20 ? i14 : i10;
       i13 = (i13 | 0) != 0;
       if (!((i2 | 32 | 0) == 101 & i13)) if ((i2 | 0) > -1) {
        i2 = i17;
        i8 = i14;
        i19 = 169;
        break;
       } else {
        i2 = i17;
        i8 = i14;
        i19 = 171;
        break;
       }
       i8 = _scanexp(i24, i21) | 0;
       i2 = tempRet0;
       if ((i8 | 0) == 0 & (i2 | 0) == -2147483648) {
        if (!i21) {
         ___shlim(i24, 0);
         d1 = 0.0;
         break;
        }
        if (!(HEAP32[i22 >> 2] | 0)) {
         i8 = 0;
         i2 = 0;
        } else {
         HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
         i8 = 0;
         i2 = 0;
        }
       }
       i3 = _i64Add(i8 | 0, i2 | 0, i3 | 0, i10 | 0) | 0;
       i13 = i17;
       i10 = tempRet0;
       i8 = i14;
       i19 = 173;
      } while (0);
      if ((i19 | 0) == 169) if (HEAP32[i22 >> 2] | 0) {
       HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       if (i13) {
        i13 = i2;
        i19 = 173;
       } else i19 = 172;
      } else i19 = 171;
      if ((i19 | 0) == 171) if (i13) {
       i13 = i2;
       i19 = 173;
      } else i19 = 172;
      do if ((i19 | 0) == 172) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim(i24, 0);
       d1 = 0.0;
      } else if ((i19 | 0) == 173) {
       i2 = HEAP32[i27 >> 2] | 0;
       if (!i2) {
        d1 = +(i28 | 0) * 0.0;
        break;
       }
       if (((i8 | 0) < 0 | (i8 | 0) == 0 & i13 >>> 0 < 10) & ((i3 | 0) == (i13 | 0) & (i10 | 0) == (i8 | 0)) ? i30 >>> 0 > 30 | (i2 >>> i30 | 0) == 0 : 0) {
        d1 = +(i28 | 0) * +(i2 >>> 0);
        break;
       }
       i24 = (i29 | 0) / -2 | 0;
       i23 = ((i24 | 0) < 0) << 31 >> 31;
       if ((i10 | 0) > (i23 | 0) | (i10 | 0) == (i23 | 0) & i3 >>> 0 > i24 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i28 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break;
       }
       i24 = i29 + -106 | 0;
       i23 = ((i24 | 0) < 0) << 31 >> 31;
       if ((i10 | 0) < (i23 | 0) | (i10 | 0) == (i23 | 0) & i3 >>> 0 < i24 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i28 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (i5) {
        if ((i5 | 0) < 9) {
         i8 = i27 + (i6 << 2) | 0;
         i2 = HEAP32[i8 >> 2] | 0;
         do {
          i2 = i2 * 10 | 0;
          i5 = i5 + 1 | 0;
         } while ((i5 | 0) != 9);
         HEAP32[i8 >> 2] = i2;
        }
        i6 = i6 + 1 | 0;
       }
       if ((i9 | 0) < 9 ? (i9 | 0) <= (i3 | 0) & (i3 | 0) < 18 : 0) {
        if ((i3 | 0) == 9) {
         d1 = +(i28 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0);
         break;
        }
        if ((i3 | 0) < 9) {
         d1 = +(i28 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0) / +(HEAP32[22300 + (8 - i3 << 2) >> 2] | 0);
         break;
        }
        i24 = i30 + 27 + (Math_imul(i3, -3) | 0) | 0;
        i2 = HEAP32[i27 >> 2] | 0;
        if ((i24 | 0) > 30 | (i2 >>> i24 | 0) == 0) {
         d1 = +(i28 | 0) * +(i2 >>> 0) * +(HEAP32[22300 + (i3 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       i2 = (i3 | 0) % 9 | 0;
       if (!i2) {
        i5 = 0;
        i2 = 0;
       } else {
        i13 = (i3 | 0) > -1 ? i2 : i2 + 9 | 0;
        i8 = HEAP32[22300 + (8 - i13 << 2) >> 2] | 0;
        if (i6) {
         i9 = 1e9 / (i8 | 0) | 0;
         i5 = 0;
         i2 = 0;
         i10 = 0;
         do {
          i22 = i27 + (i10 << 2) | 0;
          i23 = HEAP32[i22 >> 2] | 0;
          i24 = ((i23 >>> 0) / (i8 >>> 0) | 0) + i2 | 0;
          HEAP32[i22 >> 2] = i24;
          i2 = Math_imul((i23 >>> 0) % (i8 >>> 0) | 0, i9) | 0;
          i24 = (i10 | 0) == (i5 | 0) & (i24 | 0) == 0;
          i10 = i10 + 1 | 0;
          i3 = i24 ? i3 + -9 | 0 : i3;
          i5 = i24 ? i10 & 127 : i5;
         } while ((i10 | 0) != (i6 | 0));
         if (i2) {
          HEAP32[i27 + (i6 << 2) >> 2] = i2;
          i6 = i6 + 1 | 0;
         }
        } else {
         i5 = 0;
         i6 = 0;
        }
        i2 = 0;
        i3 = 9 - i13 + i3 | 0;
       }
       L284 : while (1) {
        i14 = (i3 | 0) < 18;
        i15 = (i3 | 0) == 18;
        i16 = i27 + (i5 << 2) | 0;
        do {
         if (!i14) {
          if (!i15) {
           i17 = i6;
           break L284;
          }
          if ((HEAP32[i16 >> 2] | 0) >>> 0 >= 9007199) {
           i3 = 18;
           i17 = i6;
           break L284;
          }
         }
         i8 = 0;
         i9 = i6 + 127 | 0;
         while (1) {
          i13 = i9 & 127;
          i10 = i27 + (i13 << 2) | 0;
          i9 = _bitshift64Shl(HEAP32[i10 >> 2] | 0, 0, 29) | 0;
          i9 = _i64Add(i9 | 0, tempRet0 | 0, i8 | 0, 0) | 0;
          i8 = tempRet0;
          if (i8 >>> 0 > 0 | (i8 | 0) == 0 & i9 >>> 0 > 1e9) {
           i24 = ___udivdi3(i9 | 0, i8 | 0, 1e9, 0) | 0;
           i9 = ___uremdi3(i9 | 0, i8 | 0, 1e9, 0) | 0;
           i8 = i24;
          } else i8 = 0;
          HEAP32[i10 >> 2] = i9;
          i24 = (i13 | 0) == (i5 | 0);
          i6 = (i13 | 0) != (i6 + 127 & 127 | 0) | i24 ? i6 : (i9 | 0) == 0 ? i13 : i6;
          if (i24) break; else i9 = i13 + -1 | 0;
         }
         i2 = i2 + -29 | 0;
        } while ((i8 | 0) == 0);
        i5 = i5 + 127 & 127;
        if ((i5 | 0) == (i6 | 0)) {
         i24 = i6 + 127 & 127;
         i6 = i27 + ((i6 + 126 & 127) << 2) | 0;
         HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | HEAP32[i27 + (i24 << 2) >> 2];
         i6 = i24;
        }
        HEAP32[i27 + (i5 << 2) >> 2] = i8;
        i3 = i3 + 9 | 0;
       }
       L302 : while (1) {
        i6 = i17 + 1 & 127;
        i16 = i27 + ((i17 + 127 & 127) << 2) | 0;
        while (1) {
         i14 = (i3 | 0) == 18;
         i15 = (i3 | 0) > 27 ? 9 : 1;
         i13 = i14 ^ 1;
         while (1) {
          i9 = i5 & 127;
          i10 = (i9 | 0) == (i17 | 0);
          do if (!i10) {
           i8 = HEAP32[i27 + (i9 << 2) >> 2] | 0;
           if (i8 >>> 0 < 9007199) {
            i19 = 219;
            break;
           }
           if (i8 >>> 0 > 9007199) break;
           i8 = i5 + 1 & 127;
           if ((i8 | 0) == (i17 | 0)) {
            i19 = 219;
            break;
           }
           i8 = HEAP32[i27 + (i8 << 2) >> 2] | 0;
           if (i8 >>> 0 < 254740991) {
            i19 = 219;
            break;
           }
           if (!(i8 >>> 0 > 254740991 | i13)) {
            i3 = i9;
            i6 = i17;
            break L302;
           }
          } else i19 = 219; while (0);
          if ((i19 | 0) == 219 ? (i19 = 0, i14) : 0) {
           i19 = 220;
           break L302;
          }
          i2 = i2 + i15 | 0;
          if ((i5 | 0) == (i17 | 0)) i5 = i17; else break;
         }
         i13 = (1 << i15) + -1 | 0;
         i14 = 1e9 >>> i15;
         i9 = i5;
         i8 = 0;
         i10 = i5;
         while (1) {
          i23 = i27 + (i10 << 2) | 0;
          i24 = HEAP32[i23 >> 2] | 0;
          i5 = (i24 >>> i15) + i8 | 0;
          HEAP32[i23 >> 2] = i5;
          i8 = Math_imul(i24 & i13, i14) | 0;
          i5 = (i10 | 0) == (i9 | 0) & (i5 | 0) == 0;
          i10 = i10 + 1 & 127;
          i3 = i5 ? i3 + -9 | 0 : i3;
          i5 = i5 ? i10 : i9;
          if ((i10 | 0) == (i17 | 0)) break; else i9 = i5;
         }
         if (!i8) continue;
         if ((i6 | 0) != (i5 | 0)) break;
         HEAP32[i16 >> 2] = HEAP32[i16 >> 2] | 1;
        }
        HEAP32[i27 + (i17 << 2) >> 2] = i8;
        i17 = i6;
       }
       if ((i19 | 0) == 220) if (i10) {
        HEAP32[i27 + (i6 + -1 << 2) >> 2] = 0;
        i3 = i17;
       } else {
        i3 = i9;
        i6 = i17;
       }
       d1 = +((HEAP32[i27 + (i3 << 2) >> 2] | 0) >>> 0);
       i3 = i5 + 1 & 127;
       if ((i3 | 0) == (i6 | 0)) {
        i6 = i5 + 2 & 127;
        HEAP32[i27 + (i6 + -1 << 2) >> 2] = 0;
       }
       d12 = +(i28 | 0);
       d4 = d12 * (d1 * 1.0e9 + +((HEAP32[i27 + (i3 << 2) >> 2] | 0) >>> 0));
       i14 = i2 + 53 | 0;
       i10 = i14 - i29 | 0;
       i13 = (i10 | 0) < (i30 | 0);
       i3 = i13 & 1;
       i9 = i13 ? ((i10 | 0) < 0 ? 0 : i10) : i30;
       if ((i9 | 0) < 53) {
        d32 = +_copysignl(+_scalbn(1.0, 105 - i9 | 0), d4);
        d7 = +_fmodl(d4, +_scalbn(1.0, 53 - i9 | 0));
        d11 = d32;
        d1 = d7;
        d7 = d32 + (d4 - d7);
       } else {
        d11 = 0.0;
        d1 = 0.0;
        d7 = d4;
       }
       i8 = i5 + 2 & 127;
       do if ((i8 | 0) == (i6 | 0)) d4 = d1; else {
        i8 = HEAP32[i27 + (i8 << 2) >> 2] | 0;
        do if (i8 >>> 0 >= 5e8) {
         if (i8 >>> 0 > 5e8) {
          d1 = d12 * .75 + d1;
          break;
         }
         if ((i5 + 3 & 127 | 0) == (i6 | 0)) {
          d1 = d12 * .5 + d1;
          break;
         } else {
          d1 = d12 * .75 + d1;
          break;
         }
        } else {
         if ((i8 | 0) == 0 ? (i5 + 3 & 127 | 0) == (i6 | 0) : 0) break;
         d1 = d12 * .25 + d1;
        } while (0);
        if ((53 - i9 | 0) <= 1) {
         d4 = d1;
         break;
        }
        if (+_fmodl(d1, 1.0) != 0.0) {
         d4 = d1;
         break;
        }
        d4 = d1 + 1.0;
       } while (0);
       d1 = d7 + d4 - d11;
       do if ((i14 & 2147483647 | 0) > (-2 - i25 | 0)) {
        if (+Math_abs(+d1) >= 9007199254740992.0) {
         i3 = i13 & (i9 | 0) == (i10 | 0) ? 0 : i3;
         i2 = i2 + 1 | 0;
         d1 = d1 * .5;
        }
        if ((i2 + 50 | 0) <= (i26 | 0) ? !(d4 != 0.0 & (i3 | 0) != 0) : 0) break;
        HEAP32[(___errno_location() | 0) >> 2] = 34;
       } while (0);
       d1 = +_scalbnl(d1, i2);
      } while (0);
      break L4;
     }
    default:
     {
      if (HEAP32[i22 >> 2] | 0) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim(i24, 0);
      d1 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((i19 | 0) == 23) {
   i3 = (HEAP32[i22 >> 2] | 0) == 0;
   if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
   if ((i21 | 0) != 0 & i2 >>> 0 > 3) do {
    if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
    i2 = i2 + -1 | 0;
   } while (i2 >>> 0 > 3);
  }
  d1 = +(i28 | 0) * inf;
 } while (0);
 STACKTOP = i31;
 return +d1;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i36, i37, i2, i3, i4, i38, i30, i25, i33, i34, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i38 = i38 | 0;
 i30 = i30 | 0;
 i25 = i25 | 0;
 i33 = i33 | 0;
 i34 = i34 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i31 = 0, i32 = 0, i35 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0;
 i47 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i24 = i47 + 96 | 0;
 i8 = i47 + 104 | 0;
 i46 = i47 + 88 | 0;
 i29 = i47 + 80 | 0;
 i28 = i47 + 76 | 0;
 i31 = i47 + 504 | 0;
 i26 = i47 + 72 | 0;
 i32 = i47 + 68 | 0;
 i41 = i47 + 56 | 0;
 i45 = i47 + 44 | 0;
 i43 = i47 + 32 | 0;
 i42 = i47 + 20 | 0;
 i44 = i47 + 8 | 0;
 i27 = i47 + 4 | 0;
 i39 = i47;
 HEAP32[i24 >> 2] = i1;
 HEAP32[i46 >> 2] = i8;
 i40 = i46 + 4 | 0;
 HEAP32[i40 >> 2] = 222;
 HEAP32[i29 >> 2] = i8;
 HEAP32[i28 >> 2] = i8 + 400;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i41 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i2, i3, i31, i26, i32, i41, i45, i43, i42, i27);
 HEAP32[i34 >> 2] = HEAP32[i33 >> 2];
 i20 = i43 + 4 | 0;
 i21 = i42 + 4 | 0;
 i22 = i42 + 8 | 0;
 i23 = i43 + 8 | 0;
 i13 = (i4 & 512 | 0) != 0;
 i14 = i45 + 8 | 0;
 i15 = i45 + 4 | 0;
 i16 = i44 + 4 | 0;
 i17 = i44 + 8 | 0;
 i18 = i31 + 3 | 0;
 i19 = i41 + 4 | 0;
 i12 = 0;
 i7 = 0;
 L21 : while (1) {
  if (i12 >>> 0 >= 4) {
   i35 = 232;
   break;
  }
  i1 = HEAP32[i36 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i36 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i36 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i37 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i3) {
    i11 = i2;
    break;
   } else {
    i35 = 232;
    break L21;
   } else {
    HEAP32[i37 >> 2] = 0;
    i35 = 31;
    break;
   }
  } else i35 = 31; while (0);
  if ((i35 | 0) == 31) {
   i35 = 0;
   if (i3) {
    i35 = 232;
    break;
   } else i11 = 0;
  }
  L46 : do switch (HEAP8[i31 + i12 >> 0] | 0) {
  case 1:
   {
    if ((i12 | 0) != 3) {
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, i1) | 0)) {
      i35 = 44;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      i1 = HEAP32[i3 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i44, i1);
     i1 = i11;
     i4 = i11;
     i35 = 46;
    }
    break;
   }
  case 0:
   {
    if ((i12 | 0) != 3) {
     i1 = i11;
     i4 = i11;
     i35 = 46;
    }
    break;
   }
  case 3:
   {
    i5 = HEAP8[i43 >> 0] | 0;
    i1 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i20 >> 2] | 0;
    i3 = HEAP8[i42 >> 0] | 0;
    i3 = (i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i21 >> 2] | 0;
    if ((i1 | 0) != (0 - i3 | 0)) {
     i4 = (i1 | 0) == 0;
     i6 = HEAP32[i36 >> 2] | 0;
     i9 = HEAP32[i6 + 12 >> 2] | 0;
     i1 = HEAP32[i6 + 16 >> 2] | 0;
     i2 = (i9 | 0) == (i1 | 0);
     if (i4 | (i3 | 0) == 0) {
      if (i2) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAP32[i9 >> 2] | 0;
      if (i4) {
       if ((i1 | 0) != (HEAP32[((HEAP8[i42 >> 0] & 1) == 0 ? i21 : HEAP32[i22 >> 2] | 0) >> 2] | 0)) break L46;
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
       HEAP8[i30 >> 0] = 1;
       i11 = HEAP8[i42 >> 0] | 0;
       i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) >>> 0 > 1 ? i42 : i7;
       break L46;
      }
      if ((i1 | 0) != (HEAP32[((HEAP8[i43 >> 0] & 1) == 0 ? i20 : HEAP32[i23 >> 2] | 0) >> 2] | 0)) {
       HEAP8[i30 >> 0] = 1;
       break L46;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
      i11 = HEAP8[i43 >> 0] | 0;
      i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i20 >> 2] | 0) >>> 0 > 1 ? i43 : i7;
      break L46;
     }
     if (i2) {
      i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
      i1 = HEAP32[i36 >> 2] | 0;
      i5 = HEAP8[i43 >> 0] | 0;
      i6 = i1;
      i3 = HEAP32[i1 + 12 >> 2] | 0;
      i1 = HEAP32[i1 + 16 >> 2] | 0;
     } else {
      i4 = HEAP32[i9 >> 2] | 0;
      i3 = i9;
     }
     i2 = i6 + 12 | 0;
     i1 = (i3 | 0) == (i1 | 0);
     if ((i4 | 0) == (HEAP32[((i5 & 1) == 0 ? i20 : HEAP32[i23 >> 2] | 0) >> 2] | 0)) {
      if (i1) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else HEAP32[i2 >> 2] = i3 + 4;
      i11 = HEAP8[i43 >> 0] | 0;
      i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i20 >> 2] | 0) >>> 0 > 1 ? i43 : i7;
      break L46;
     }
     if (i1) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAP32[i3 >> 2] | 0;
     if ((i1 | 0) != (HEAP32[((HEAP8[i42 >> 0] & 1) == 0 ? i21 : HEAP32[i22 >> 2] | 0) >> 2] | 0)) {
      i35 = 102;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
     HEAP8[i30 >> 0] = 1;
     i11 = HEAP8[i42 >> 0] | 0;
     i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) >>> 0 > 1 ? i42 : i7;
    }
    break;
   }
  case 2:
   {
    if (!(i12 >>> 0 < 2 | (i7 | 0) != 0) ? !(i13 | (i12 | 0) == 2 & (HEAP8[i18 >> 0] | 0) != 0) : 0) {
     i7 = 0;
     break L46;
    }
    i2 = HEAP8[i45 >> 0] | 0;
    i3 = HEAP32[i14 >> 2] | 0;
    i1 = (i2 & 1) == 0 ? i15 : i3;
    L107 : do if ((i12 | 0) != 0 ? (HEAPU8[i31 + (i12 + -1) >> 0] | 0) < 2 : 0) {
     i4 = i3;
     while (1) {
      i10 = (i2 & 1) == 0;
      i3 = i1;
      if ((i3 | 0) == ((i10 ? i15 : i4) + ((i10 ? (i2 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0)) break;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, HEAP32[i3 >> 2] | 0) | 0)) {
       i35 = 109;
       break;
      }
      i2 = HEAP8[i45 >> 0] | 0;
      i4 = HEAP32[i14 >> 2] | 0;
      i1 = i3 + 4 | 0;
     }
     if ((i35 | 0) == 109) {
      i35 = 0;
      i2 = HEAP8[i45 >> 0] | 0;
      i4 = HEAP32[i14 >> 2] | 0;
     }
     i6 = (i2 & 1) == 0 ? i15 : i4;
     i3 = i6;
     i10 = i1 - i3 >> 2;
     i9 = HEAP8[i44 >> 0] | 0;
     i5 = (i9 & 1) == 0;
     i9 = i5 ? (i9 & 255) >>> 1 : HEAP32[i16 >> 2] | 0;
     if (i10 >>> 0 > i9 >>> 0) {
      i9 = i11;
      i5 = i11;
     } else {
      i9 = (i5 ? i16 : HEAP32[i17 >> 2] | 0) + (i9 << 2) | 0;
      i5 = i9 + (0 - i10 << 2) | 0;
      while (1) {
       if ((i5 | 0) == (i9 | 0)) {
        i9 = i11;
        i5 = i11;
        i3 = i1;
        break L107;
       }
       if ((HEAP32[i5 >> 2] | 0) != (HEAP32[i6 >> 2] | 0)) {
        i9 = i11;
        i5 = i11;
        break L107;
       }
       i6 = i6 + 4 | 0;
       i5 = i5 + 4 | 0;
      }
     }
    } else {
     i9 = i11;
     i4 = i3;
     i5 = i11;
     i3 = i1;
    } while (0);
    L121 : while (1) {
     i1 = (i2 & 1) == 0;
     i1 = (i1 ? i15 : i4) + ((i1 ? (i2 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0;
     i6 = i3;
     if ((i6 | 0) == (i1 | 0)) break;
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i5) {
      i1 = HEAP32[i5 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
      if ((i1 | 0) != -1) if (i2 ^ (i9 | 0) == 0) {
       i1 = i9;
       i5 = i9;
       break;
      } else {
       i1 = i6;
       break L121;
      } else {
       HEAP32[i37 >> 2] = 0;
       i1 = 0;
       i35 = 130;
       break;
      }
     } else {
      i1 = i9;
      i35 = 130;
     } while (0);
     if ((i35 | 0) == 130) {
      i35 = 0;
      if (i2) {
       i1 = i6;
       break;
      } else i5 = 0;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
     if ((i2 | 0) != (HEAP32[i6 >> 2] | 0)) {
      i1 = i6;
      break;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else HEAP32[i3 >> 2] = i4 + 4;
     i9 = i1;
     i2 = HEAP8[i45 >> 0] | 0;
     i4 = HEAP32[i14 >> 2] | 0;
     i3 = i6 + 4 | 0;
    }
    if (i13 ? (i11 = HEAP8[i45 >> 0] | 0, i10 = (i11 & 1) == 0, (i1 | 0) != ((i10 ? i15 : HEAP32[i14 >> 2] | 0) + ((i10 ? (i11 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0)) : 0) {
     i35 = 142;
     break L21;
    }
    break;
   }
  case 4:
   {
    i9 = HEAP32[i32 >> 2] | 0;
    i5 = i11;
    i4 = i11;
    i1 = 0;
    L158 : while (1) {
     i2 = HEAP32[i36 >> 2] | 0;
     do if (i2) {
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
      if ((i2 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i3 = 1;
       break;
      } else {
       i3 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i3 = 1; while (0);
     do if (i4) {
      i2 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
      if ((i2 | 0) != -1) if (i3 ^ (i5 | 0) == 0) {
       i2 = i5;
       i6 = i5;
       break;
      } else break L158; else {
       HEAP32[i37 >> 2] = 0;
       i2 = 0;
       i35 = 156;
       break;
      }
     } else {
      i2 = i5;
      i35 = 156;
     } while (0);
     if ((i35 | 0) == 156) {
      i35 = 0;
      if (i3) {
       i5 = i2;
       break;
      } else i6 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 2048, i4) | 0) {
      i3 = HEAP32[i34 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i24 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i33, i34, i24);
       i3 = HEAP32[i34 >> 2] | 0;
      }
      HEAP32[i34 >> 2] = i3 + 4;
      HEAP32[i3 >> 2] = i4;
      i1 = i1 + 1 | 0;
     } else {
      i11 = HEAP8[i41 >> 0] | 0;
      if (!((i4 | 0) == (i9 | 0) & (i1 | 0 ? (((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 >> 2] | 0) | 0) != 0 : 0))) {
       i5 = i2;
       break;
      }
      if ((i8 | 0) == (HEAP32[i28 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i29, i28);
       i8 = HEAP32[i29 >> 2] | 0;
      }
      i11 = i8 + 4 | 0;
      HEAP32[i29 >> 2] = i11;
      HEAP32[i8 >> 2] = i1;
      i8 = i11;
      i1 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
      i5 = i2;
      i4 = i6;
      continue;
     } else {
      HEAP32[i4 >> 2] = i5 + 4;
      i5 = i2;
      i4 = i6;
      continue;
     }
    }
    if (i1 | 0 ? (HEAP32[i46 >> 2] | 0) != (i8 | 0) : 0) {
     if ((i8 | 0) == (HEAP32[i28 >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i29, i28);
      i8 = HEAP32[i29 >> 2] | 0;
     }
     i11 = i8 + 4 | 0;
     HEAP32[i29 >> 2] = i11;
     HEAP32[i8 >> 2] = i1;
     i8 = i11;
    }
    i4 = HEAP32[i27 >> 2] | 0;
    L207 : do if ((i4 | 0) > 0) {
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i5) {
      i1 = HEAP32[i5 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
      if ((i1 | 0) != -1) if (i2) break; else {
       i35 = 196;
       break L21;
      } else {
       HEAP32[i37 >> 2] = 0;
       i35 = 190;
       break;
      }
     } else i35 = 190; while (0);
     if ((i35 | 0) == 190) {
      i35 = 0;
      if (i2) {
       i35 = 196;
       break L21;
      } else i5 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) != (HEAP32[i26 >> 2] | 0)) {
      i35 = 196;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
      i1 = i5;
     } else {
      HEAP32[i2 >> 2] = i3 + 4;
      i1 = i5;
     }
     while (1) {
      if ((i4 | 0) <= 0) break L207;
      i2 = HEAP32[i36 >> 2] | 0;
      do if (i2) {
       i3 = HEAP32[i2 + 12 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
       if ((i2 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i3 = 1;
        break;
       } else {
        i3 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i3 = 1; while (0);
      do if (i5) {
       i2 = HEAP32[i5 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i2 = HEAP32[i2 >> 2] | 0;
       if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
        i6 = i1;
        i5 = i1;
        break;
       } else {
        i35 = 220;
        break L21;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i35 = 214;
        break;
       }
      } else i35 = 214; while (0);
      if ((i35 | 0) == 214) {
       i35 = 0;
       if (i3) {
        i35 = 220;
        break L21;
       } else {
        i6 = i1;
        i5 = 0;
       }
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 2048, i1) | 0)) {
       i35 = 220;
       break L21;
      }
      if ((HEAP32[i34 >> 2] | 0) == (HEAP32[i24 >> 2] | 0)) __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i33, i34, i24);
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      i2 = HEAP32[i34 >> 2] | 0;
      HEAP32[i34 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i1;
      i4 = i4 + -1 | 0;
      HEAP32[i27 >> 2] = i4;
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
       i1 = i6;
       continue;
      } else {
       HEAP32[i2 >> 2] = i3 + 4;
       i1 = i6;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[i34 >> 2] | 0) == (HEAP32[i33 >> 2] | 0)) {
     i35 = 230;
     break L21;
    }
    break;
   }
  default:
   {}
  } while (0);
  L280 : do if ((i35 | 0) == 46) while (1) {
   i35 = 0;
   i2 = HEAP32[i36 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i36 >> 2] = 0;
     i3 = 1;
     break;
    } else {
     i3 = (HEAP32[i36 >> 2] | 0) == 0;
     break;
    }
   } else i3 = 1; while (0);
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
     i5 = i1;
     i4 = i1;
     break;
    } else break L280; else {
     HEAP32[i37 >> 2] = 0;
     i1 = 0;
     i35 = 59;
     break;
    }
   } else i35 = 59; while (0);
   if ((i35 | 0) == 59) {
    i35 = 0;
    if (i3) break L280; else {
     i5 = i1;
     i4 = 0;
    }
   }
   i1 = HEAP32[i36 >> 2] | 0;
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, i1) | 0)) break L280;
   i1 = HEAP32[i36 >> 2] | 0;
   i2 = i1 + 12 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
    HEAP32[i2 >> 2] = i3 + 4;
    i1 = HEAP32[i3 >> 2] | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i44, i1);
   i1 = i5;
   i35 = 46;
  } while (0);
  i12 = i12 + 1 | 0;
 }
 L315 : do if ((i35 | 0) == 44) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 102) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 142) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 196) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 220) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 230) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 232) {
  L317 : do if (i7 | 0) {
   i5 = i7 + 4 | 0;
   i6 = i7 + 8 | 0;
   i4 = 1;
   L319 : while (1) {
    i1 = HEAP8[i7 >> 0] | 0;
    if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i5 >> 2] | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L317;
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i36 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    i1 = HEAP32[i37 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) != -1) if (i3) break; else break L319; else {
      HEAP32[i37 >> 2] = 0;
      i35 = 251;
      break;
     }
    } else i35 = 251; while (0);
    if ((i35 | 0) == 251 ? (i35 = 0, i3) : 0) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
    if (!(HEAP8[i7 >> 0] & 1)) i2 = i5; else i2 = HEAP32[i6 >> 2] | 0;
    if ((i1 | 0) != (HEAP32[i2 + (i4 << 2) >> 2] | 0)) break;
    i1 = i4 + 1 | 0;
    i2 = HEAP32[i36 >> 2] | 0;
    i3 = i2 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i4 = i1;
     continue;
    } else {
     HEAP32[i3 >> 2] = i4 + 4;
     i4 = i1;
     continue;
    }
   }
   HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
   i2 = 0;
   break L315;
  } while (0);
  i1 = HEAP32[i46 >> 2] | 0;
  if ((i1 | 0) != (i8 | 0)) {
   HEAP32[i39 >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i41, i1, i8, i39);
   if (!(HEAP32[i39 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i44);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i42);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i43);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i45);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i41);
 i1 = HEAP32[i46 >> 2] | 0;
 HEAP32[i46 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i40 >> 2] & 255](i1);
 STACKTOP = i47;
 return i2 | 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i40, i41, i3, i4, i5, i42, i34, i2, i37, i38, i1) {
 i40 = i40 | 0;
 i41 = i41 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i42 = i42 | 0;
 i34 = i34 | 0;
 i2 = i2 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i35 = 0, i36 = 0, i39 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0;
 i51 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i29 = i51 + 88 | 0;
 i9 = i51 + 96 | 0;
 i50 = i51 + 80 | 0;
 i33 = i51 + 72 | 0;
 i32 = i51 + 68 | 0;
 i35 = i51 + 500 | 0;
 i30 = i51 + 497 | 0;
 i36 = i51 + 496 | 0;
 i45 = i51 + 56 | 0;
 i49 = i51 + 44 | 0;
 i47 = i51 + 32 | 0;
 i46 = i51 + 20 | 0;
 i48 = i51 + 8 | 0;
 i31 = i51 + 4 | 0;
 i43 = i51;
 HEAP32[i29 >> 2] = i1;
 HEAP32[i50 >> 2] = i9;
 i44 = i50 + 4 | 0;
 HEAP32[i44 >> 2] = 222;
 HEAP32[i33 >> 2] = i9;
 HEAP32[i32 >> 2] = i9 + 400;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i49 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i47 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i46 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i48 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i3, i4, i35, i30, i36, i45, i49, i47, i46, i31);
 HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
 i22 = i2 + 8 | 0;
 i23 = i47 + 4 | 0;
 i24 = i46 + 4 | 0;
 i25 = i46 + 8 | 0;
 i26 = i46 + 1 | 0;
 i27 = i47 + 8 | 0;
 i28 = i47 + 1 | 0;
 i13 = (i5 & 512 | 0) != 0;
 i14 = i49 + 8 | 0;
 i15 = i49 + 1 | 0;
 i16 = i49 + 4 | 0;
 i17 = i48 + 4 | 0;
 i18 = i48 + 8 | 0;
 i19 = i48 + 1 | 0;
 i20 = i35 + 3 | 0;
 i21 = i45 + 4 | 0;
 i12 = 0;
 i8 = 0;
 L21 : while (1) {
  if (i12 >>> 0 >= 4) {
   i39 = 218;
   break;
  }
  i1 = HEAP32[i40 >> 2] | 0;
  do if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
    HEAP32[i40 >> 2] = 0;
    i1 = 0;
    break;
   } else {
    i1 = HEAP32[i40 >> 2] | 0;
    break;
   }
  } else i1 = 0; while (0);
  i1 = (i1 | 0) == 0;
  i2 = HEAP32[i41 >> 2] | 0;
  do if (i2) {
   if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) break; else {
    i39 = 218;
    break L21;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) if (i1) break; else {
    i39 = 218;
    break L21;
   } else {
    HEAP32[i41 >> 2] = 0;
    i39 = 28;
    break;
   }
  } else i39 = 28; while (0);
  if ((i39 | 0) == 28) {
   i39 = 0;
   if (i1) {
    i39 = 218;
    break;
   } else i2 = 0;
  }
  L42 : do switch (HEAP8[i35 + i12 >> 0] | 0) {
  case 1:
   {
    if ((i12 | 0) != 3) {
     i1 = HEAP32[i40 >> 2] | 0;
     i3 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 <= -1) {
      i39 = 42;
      break L21;
     }
     if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
      i39 = 42;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i3 = i1 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i3 >> 2] = i4 + 1;
      i1 = HEAPU8[i4 >> 0] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, i1 & 255);
     i1 = i2;
     i3 = i2;
     i39 = 44;
    }
    break;
   }
  case 0:
   {
    if ((i12 | 0) != 3) {
     i1 = i2;
     i3 = i2;
     i39 = 44;
    }
    break;
   }
  case 3:
   {
    i4 = HEAP8[i47 >> 0] | 0;
    i1 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i23 >> 2] | 0;
    i3 = HEAP8[i46 >> 0] | 0;
    i3 = (i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i24 >> 2] | 0;
    if ((i1 | 0) != (0 - i3 | 0)) {
     i5 = (i1 | 0) == 0;
     i6 = HEAP32[i40 >> 2] | 0;
     i7 = HEAP32[i6 + 12 >> 2] | 0;
     i1 = HEAP32[i6 + 16 >> 2] | 0;
     i2 = (i7 | 0) == (i1 | 0);
     if (i5 | (i3 | 0) == 0) {
      if (i2) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAPU8[i7 >> 0] | 0;
      i1 = i1 & 255;
      if (i5) {
       if (i1 << 24 >> 24 != (HEAP8[((HEAP8[i46 >> 0] & 1) == 0 ? i26 : HEAP32[i25 >> 2] | 0) >> 0] | 0)) break L42;
       i1 = HEAP32[i40 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
       HEAP8[i34 >> 0] = 1;
       i11 = HEAP8[i46 >> 0] | 0;
       i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i24 >> 2] | 0) >>> 0 > 1 ? i46 : i8;
       break L42;
      }
      if (i1 << 24 >> 24 != (HEAP8[((HEAP8[i47 >> 0] & 1) == 0 ? i28 : HEAP32[i27 >> 2] | 0) >> 0] | 0)) {
       HEAP8[i34 >> 0] = 1;
       break L42;
      }
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
      i11 = HEAP8[i47 >> 0] | 0;
      i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i23 >> 2] | 0) >>> 0 > 1 ? i47 : i8;
      break L42;
     }
     if (i2) {
      i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
      i1 = HEAP32[i40 >> 2] | 0;
      i4 = HEAP8[i47 >> 0] | 0;
      i6 = i1;
      i3 = HEAP32[i1 + 12 >> 2] | 0;
      i1 = HEAP32[i1 + 16 >> 2] | 0;
     } else {
      i5 = HEAPU8[i7 >> 0] | 0;
      i3 = i7;
     }
     i2 = i6 + 12 | 0;
     i1 = (i3 | 0) == (i1 | 0);
     if ((i5 & 255) << 24 >> 24 == (HEAP8[((i4 & 1) == 0 ? i28 : HEAP32[i27 >> 2] | 0) >> 0] | 0)) {
      if (i1) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else HEAP32[i2 >> 2] = i3 + 1;
      i11 = HEAP8[i47 >> 0] | 0;
      i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i23 >> 2] | 0) >>> 0 > 1 ? i47 : i8;
      break L42;
     }
     if (i1) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 != (HEAP8[((HEAP8[i46 >> 0] & 1) == 0 ? i26 : HEAP32[i25 >> 2] | 0) >> 0] | 0)) {
      i39 = 98;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
     HEAP8[i34 >> 0] = 1;
     i11 = HEAP8[i46 >> 0] | 0;
     i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i24 >> 2] | 0) >>> 0 > 1 ? i46 : i8;
    }
    break;
   }
  case 2:
   {
    if (!(i12 >>> 0 < 2 | (i8 | 0) != 0) ? !(i13 | (i12 | 0) == 2 & (HEAP8[i20 >> 0] | 0) != 0) : 0) {
     i8 = 0;
     break L42;
    }
    i7 = HEAP8[i49 >> 0] | 0;
    i1 = (i7 & 1) == 0;
    i10 = HEAP32[i14 >> 2] | 0;
    i3 = i1 ? i15 : i10;
    i11 = i3;
    L104 : do if ((i12 | 0) != 0 ? (HEAPU8[i35 + (i12 + -1) >> 0] | 0) < 2 : 0) {
     i1 = i3 + (i1 ? (i7 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0;
     i6 = i11;
     while (1) {
      i4 = i6;
      if ((i4 | 0) == (i1 | 0)) break;
      i5 = HEAP8[i4 >> 0] | 0;
      if (i5 << 24 >> 24 <= -1) break;
      if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i5 << 24 >> 24 << 1) >> 1] & 8192)) break;
      i6 = i4 + 1 | 0;
     }
     i5 = i6 - i11 | 0;
     i4 = HEAP8[i48 >> 0] | 0;
     i1 = (i4 & 1) == 0;
     i4 = i1 ? (i4 & 255) >>> 1 : HEAP32[i17 >> 2] | 0;
     if (i5 >>> 0 <= i4 >>> 0) {
      i4 = (i1 ? i19 : HEAP32[i18 >> 2] | 0) + i4 | 0;
      i1 = i4 + (0 - i5) | 0;
      while (1) {
       if ((i1 | 0) == (i4 | 0)) {
        i4 = i2;
        i3 = i7;
        i1 = i10;
        i5 = i2;
        i2 = i6;
        break L104;
       }
       if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
        i4 = i2;
        i3 = i7;
        i1 = i10;
        i5 = i2;
        i2 = i11;
        break L104;
       }
       i3 = i3 + 1 | 0;
       i1 = i1 + 1 | 0;
      }
     } else {
      i4 = i2;
      i3 = i7;
      i1 = i10;
      i5 = i2;
      i2 = i11;
     }
    } else {
     i4 = i2;
     i3 = i7;
     i1 = i10;
     i5 = i2;
     i2 = i11;
    } while (0);
    L118 : while (1) {
     i6 = (i3 & 1) == 0;
     i1 = (i6 ? i15 : i1) + (i6 ? (i3 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0;
     i6 = i2;
     if ((i6 | 0) == (i1 | 0)) break;
     i1 = HEAP32[i40 >> 2] | 0;
     do if (i1) {
      if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i1 = 0; while (0);
     i2 = (i1 | 0) == 0;
     do if (i5) {
      if ((HEAP32[i5 + 12 >> 2] | 0) != (HEAP32[i5 + 16 >> 2] | 0)) if (i2) {
       i1 = i4;
       break;
      } else {
       i1 = i6;
       break L118;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) != -1) if (i2 ^ (i4 | 0) == 0) {
       i1 = i4;
       i5 = i4;
       break;
      } else {
       i1 = i6;
       break L118;
      } else {
       HEAP32[i41 >> 2] = 0;
       i1 = 0;
       i39 = 124;
       break;
      }
     } else {
      i1 = i4;
      i39 = 124;
     } while (0);
     if ((i39 | 0) == 124) {
      i39 = 0;
      if (i2) {
       i1 = i6;
       break;
      } else i5 = 0;
     }
     i2 = HEAP32[i40 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
     if ((i2 & 255) << 24 >> 24 != (HEAP8[i6 >> 0] | 0)) {
      i1 = i6;
      break;
     }
     i2 = HEAP32[i40 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else HEAP32[i3 >> 2] = i4 + 1;
     i4 = i1;
     i3 = HEAP8[i49 >> 0] | 0;
     i1 = HEAP32[i14 >> 2] | 0;
     i2 = i6 + 1 | 0;
    }
    if (i13 ? (i11 = HEAP8[i49 >> 0] | 0, i10 = (i11 & 1) == 0, (i1 | 0) != ((i10 ? i15 : HEAP32[i14 >> 2] | 0) + (i10 ? (i11 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0)) : 0) {
     i39 = 136;
     break L21;
    }
    break;
   }
  case 4:
   {
    i7 = HEAP8[i36 >> 0] | 0;
    i5 = i2;
    i4 = i2;
    i1 = 0;
    L151 : while (1) {
     i2 = HEAP32[i40 >> 2] | 0;
     do if (i2) {
      if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i2 = 0;
       break;
      } else {
       i2 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i2 = 0; while (0);
     i3 = (i2 | 0) == 0;
     do if (i4) {
      if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) {
       i2 = i5;
       i6 = i4;
       break;
      } else {
       i2 = i5;
       break L151;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i3 ^ (i5 | 0) == 0) {
       i2 = i5;
       i6 = i5;
       break;
      } else {
       i2 = i5;
       break L151;
      } else {
       HEAP32[i41 >> 2] = 0;
       i2 = 0;
       i39 = 147;
       break;
      }
     } else {
      i2 = i5;
      i39 = 147;
     } while (0);
     if ((i39 | 0) == 147) {
      i39 = 0;
      if (i3) break; else i6 = 0;
     }
     i3 = HEAP32[i40 >> 2] | 0;
     i4 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAPU8[i4 >> 0] | 0;
     i4 = i3 & 255;
     if (i4 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[i22 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
      i3 = HEAP32[i38 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i29 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i37, i38, i29);
       i3 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i3 + 1;
      HEAP8[i3 >> 0] = i4;
      i1 = i1 + 1 | 0;
     } else {
      i11 = HEAP8[i45 >> 0] | 0;
      if (!(i4 << 24 >> 24 == i7 << 24 >> 24 & (i1 | 0 ? (((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) | 0) != 0 : 0))) break;
      if ((i9 | 0) == (HEAP32[i32 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i50, i33, i32);
       i9 = HEAP32[i33 >> 2] | 0;
      }
      i11 = i9 + 4 | 0;
      HEAP32[i33 >> 2] = i11;
      HEAP32[i9 >> 2] = i1;
      i9 = i11;
      i1 = 0;
     }
     i3 = HEAP32[i40 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
      i5 = i2;
      i4 = i6;
      continue;
     } else {
      HEAP32[i4 >> 2] = i5 + 1;
      i5 = i2;
      i4 = i6;
      continue;
     }
    }
    if (i1 | 0 ? (HEAP32[i50 >> 2] | 0) != (i9 | 0) : 0) {
     if ((i9 | 0) == (HEAP32[i32 >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i50, i33, i32);
      i9 = HEAP32[i33 >> 2] | 0;
     }
     i11 = i9 + 4 | 0;
     HEAP32[i33 >> 2] = i11;
     HEAP32[i9 >> 2] = i1;
     i9 = i11;
    }
    i4 = HEAP32[i31 >> 2] | 0;
    L198 : do if ((i4 | 0) > 0) {
     i1 = HEAP32[i40 >> 2] | 0;
     do if (i1) {
      if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i1 = 0; while (0);
     i1 = (i1 | 0) == 0;
     do if (i2) {
      if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
       HEAP32[i41 >> 2] = 0;
       i39 = 179;
       break;
      }
      if (i1) i5 = i2; else {
       i39 = 184;
       break L21;
      }
     } else i39 = 179; while (0);
     if ((i39 | 0) == 179) {
      i39 = 0;
      if (i1) {
       i39 = 184;
       break L21;
      } else i5 = 0;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 != (HEAP8[i30 >> 0] | 0)) {
      i39 = 184;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
      i1 = i5;
      i3 = i5;
     } else {
      HEAP32[i2 >> 2] = i3 + 1;
      i1 = i5;
      i3 = i5;
     }
     while (1) {
      if ((i4 | 0) <= 0) break L198;
      i2 = HEAP32[i40 >> 2] | 0;
      do if (i2) {
       if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
        HEAP32[i40 >> 2] = 0;
        i2 = 0;
        break;
       } else {
        i2 = HEAP32[i40 >> 2] | 0;
        break;
       }
      } else i2 = 0; while (0);
      i2 = (i2 | 0) == 0;
      do if (i3) {
       if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i2) {
        i6 = i1;
        i5 = i3;
        break;
       } else {
        i39 = 206;
        break L21;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i2 ^ (i1 | 0) == 0) {
        i6 = i1;
        i5 = i1;
        break;
       } else {
        i39 = 206;
        break L21;
       } else {
        HEAP32[i41 >> 2] = 0;
        i1 = 0;
        i39 = 199;
        break;
       }
      } else i39 = 199; while (0);
      if ((i39 | 0) == 199) {
       i39 = 0;
       if (i2) {
        i39 = 206;
        break L21;
       } else {
        i6 = i1;
        i5 = 0;
       }
      }
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
      if ((i1 & 255) << 24 >> 24 <= -1) {
       i39 = 206;
       break L21;
      }
      if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048)) {
       i39 = 206;
       break L21;
      }
      if ((HEAP32[i38 >> 2] | 0) == (HEAP32[i29 >> 2] | 0)) __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i37, i38, i29);
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
      i2 = HEAP32[i38 >> 2] | 0;
      HEAP32[i38 >> 2] = i2 + 1;
      HEAP8[i2 >> 0] = i1;
      i4 = i4 + -1 | 0;
      HEAP32[i31 >> 2] = i4;
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
       i1 = i6;
       i3 = i5;
       continue;
      } else {
       HEAP32[i2 >> 2] = i3 + 1;
       i1 = i6;
       i3 = i5;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[i38 >> 2] | 0) == (HEAP32[i37 >> 2] | 0)) {
     i39 = 216;
     break L21;
    }
    break;
   }
  default:
   {}
  } while (0);
  L262 : do if ((i39 | 0) == 44) while (1) {
   i39 = 0;
   i2 = HEAP32[i40 >> 2] | 0;
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
     HEAP32[i40 >> 2] = 0;
     i2 = 0;
     break;
    } else {
     i2 = HEAP32[i40 >> 2] | 0;
     break;
    }
   } else i2 = 0; while (0);
   i2 = (i2 | 0) == 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i2) {
     i5 = i1;
     i4 = i3;
     break;
    } else break L262;
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i2 ^ (i1 | 0) == 0) {
     i5 = i1;
     i4 = i1;
     break;
    } else break L262; else {
     HEAP32[i41 >> 2] = 0;
     i1 = 0;
     i39 = 54;
     break;
    }
   } else i39 = 54; while (0);
   if ((i39 | 0) == 54) {
    i39 = 0;
    if (i2) break L262; else {
     i5 = i1;
     i4 = 0;
    }
   }
   i1 = HEAP32[i40 >> 2] | 0;
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
   if ((i1 & 255) << 24 >> 24 <= -1) break L262;
   if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break L262;
   i1 = HEAP32[i40 >> 2] | 0;
   i2 = i1 + 12 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
    HEAP32[i2 >> 2] = i3 + 1;
    i1 = HEAPU8[i3 >> 0] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, i1 & 255);
   i1 = i5;
   i3 = i4;
   i39 = 44;
  } while (0);
  i12 = i12 + 1 | 0;
 }
 L294 : do if ((i39 | 0) == 42) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 98) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 136) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 184) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 206) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 216) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 218) {
  L296 : do if (i8 | 0) {
   i5 = i8 + 1 | 0;
   i6 = i8 + 8 | 0;
   i7 = i8 + 4 | 0;
   i3 = 1;
   L298 : while (1) {
    i1 = HEAP8[i8 >> 0] | 0;
    if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i7 >> 2] | 0;
    if (i3 >>> 0 >= i1 >>> 0) break L296;
    i1 = HEAP32[i40 >> 2] | 0;
    do if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
      HEAP32[i40 >> 2] = 0;
      i1 = 0;
      break;
     } else {
      i1 = HEAP32[i40 >> 2] | 0;
      break;
     }
    } else i1 = 0; while (0);
    i1 = (i1 | 0) == 0;
    i2 = HEAP32[i41 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
      HEAP32[i41 >> 2] = 0;
      i39 = 234;
      break;
     }
     if (!i1) break L298;
    } else i39 = 234; while (0);
    if ((i39 | 0) == 234 ? (i39 = 0, i1) : 0) break;
    i1 = HEAP32[i40 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
    if (!(HEAP8[i8 >> 0] & 1)) i2 = i5; else i2 = HEAP32[i6 >> 2] | 0;
    if ((i1 & 255) << 24 >> 24 != (HEAP8[i2 + i3 >> 0] | 0)) break;
    i1 = i3 + 1 | 0;
    i2 = HEAP32[i40 >> 2] | 0;
    i3 = i2 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i3 = i1;
     continue;
    } else {
     HEAP32[i3 >> 2] = i4 + 1;
     i3 = i1;
     continue;
    }
   }
   HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
   i2 = 0;
   break L294;
  } while (0);
  i1 = HEAP32[i50 >> 2] | 0;
  if ((i1 | 0) != (i9 | 0)) {
   HEAP32[i43 >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i45, i1, i9, i43);
   if (!(HEAP32[i43 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i48);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i46);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i47);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i49);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
 i1 = HEAP32[i50 >> 2] | 0;
 HEAP32[i50 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i44 >> 2] & 255](i1);
 STACKTOP = i51;
 return i2 | 0;
}

function __ZNSt3__16__sortIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEvT0_SV_T_(i1, i3, i13) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i13 = i13 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i2 = i1;
 L1 : while (1) {
  i12 = i3;
  i1 = i3 + -8 | 0;
  L3 : while (1) {
   i11 = i2;
   i4 = i12 - i11 | 0;
   i5 = i4 >> 3;
   switch (i5 | 0) {
   case 2:
    {
     i3 = i1;
     i14 = 4;
     break L1;
    }
   case 3:
    {
     i7 = i1;
     i6 = i1;
     i14 = 6;
     break L1;
    }
   case 4:
    {
     i14 = 14;
     break L1;
    }
   case 5:
    {
     i3 = i1;
     i14 = 15;
     break L1;
    }
   case 1:
   case 0:
    {
     i14 = 85;
     break L1;
    }
   default:
    {}
   }
   if ((i4 | 0) < 248) {
    i14 = 21;
    break L1;
   }
   i10 = i2 + (((i5 | 0) / 2 | 0) << 3) | 0;
   do if ((i4 | 0) > 7992) {
    i5 = (i5 | 0) / 4 | 0;
    i6 = i2 + (i5 << 3) | 0;
    i5 = i10 + (i5 << 3) | 0;
    i4 = __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i2, i6, i10, i5, i13) | 0;
    if ((HEAP32[i1 >> 2] | 0) >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
     i6 = i10;
     break;
    }
    i9 = i5;
    i8 = HEAP32[i9 >> 2] | 0;
    i9 = HEAP32[i9 + 4 >> 2] | 0;
    i16 = i1;
    i15 = HEAP32[i16 + 4 >> 2] | 0;
    i7 = i5;
    HEAP32[i7 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i7 + 4 >> 2] = i15;
    i7 = i1;
    HEAP32[i7 >> 2] = i8;
    HEAP32[i7 + 4 >> 2] = i9;
    i7 = i4 + 1 | 0;
    if ((HEAP32[i5 >> 2] | 0) >>> 0 < (HEAP32[i10 >> 2] | 0) >>> 0) {
     i16 = i10;
     i15 = HEAP32[i16 >> 2] | 0;
     i16 = HEAP32[i16 + 4 >> 2] | 0;
     i7 = i5;
     i8 = HEAP32[i7 + 4 >> 2] | 0;
     i9 = i10;
     HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i9 + 4 >> 2] = i8;
     HEAP32[i5 >> 2] = i15;
     HEAP32[i5 + 4 >> 2] = i16;
     i5 = i4 + 2 | 0;
     if ((HEAP32[i10 >> 2] | 0) >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
      i15 = i6;
      i9 = HEAP32[i15 >> 2] | 0;
      i15 = HEAP32[i15 + 4 >> 2] | 0;
      i7 = i10;
      i8 = HEAP32[i7 + 4 >> 2] | 0;
      i16 = i6;
      HEAP32[i16 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i16 + 4 >> 2] = i8;
      i16 = i10;
      HEAP32[i16 >> 2] = i9;
      HEAP32[i16 + 4 >> 2] = i15;
      if ((HEAP32[i6 >> 2] | 0) >>> 0 < (HEAP32[i2 >> 2] | 0) >>> 0) {
       i16 = i2;
       i15 = HEAP32[i16 >> 2] | 0;
       i16 = HEAP32[i16 + 4 >> 2] | 0;
       i7 = i6;
       i8 = HEAP32[i7 + 4 >> 2] | 0;
       i9 = i2;
       HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
       HEAP32[i9 + 4 >> 2] = i8;
       HEAP32[i6 >> 2] = i15;
       HEAP32[i6 + 4 >> 2] = i16;
       i6 = i10;
       i4 = i4 + 4 | 0;
      } else {
       i6 = i10;
       i4 = i4 + 3 | 0;
      }
     } else {
      i6 = i10;
      i4 = i5;
     }
    } else {
     i6 = i10;
     i4 = i7;
    }
   } else {
    i16 = HEAP32[i10 >> 2] | 0;
    i4 = (HEAP32[i1 >> 2] | 0) >>> 0 < i16 >>> 0;
    if (i16 >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) {
     if (!i4) {
      i6 = i10;
      i4 = 0;
      break;
     }
     i15 = i10;
     i9 = HEAP32[i15 >> 2] | 0;
     i15 = HEAP32[i15 + 4 >> 2] | 0;
     i7 = i1;
     i8 = HEAP32[i7 + 4 >> 2] | 0;
     i16 = i10;
     HEAP32[i16 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i16 + 4 >> 2] = i8;
     i16 = i1;
     HEAP32[i16 >> 2] = i9;
     HEAP32[i16 + 4 >> 2] = i15;
     if ((HEAP32[i10 >> 2] | 0) >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) {
      i6 = i10;
      i4 = 1;
      break;
     }
     i4 = i2;
     i16 = HEAP32[i4 >> 2] | 0;
     i4 = HEAP32[i4 + 4 >> 2] | 0;
     i9 = i10;
     i15 = HEAP32[i9 + 4 >> 2] | 0;
     i6 = i2;
     HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
     HEAP32[i6 + 4 >> 2] = i15;
     i6 = i10;
     HEAP32[i6 >> 2] = i16;
     HEAP32[i6 + 4 >> 2] = i4;
     i6 = i10;
     i4 = 2;
     break;
    }
    i6 = i2;
    i5 = HEAP32[i6 >> 2] | 0;
    i6 = HEAP32[i6 + 4 >> 2] | 0;
    if (i4) {
     i15 = i1;
     i16 = HEAP32[i15 + 4 >> 2] | 0;
     i4 = i2;
     HEAP32[i4 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i4 + 4 >> 2] = i16;
     i4 = i1;
     HEAP32[i4 >> 2] = i5;
     HEAP32[i4 + 4 >> 2] = i6;
     i6 = i10;
     i4 = 1;
     break;
    }
    i9 = i10;
    i15 = HEAP32[i9 + 4 >> 2] | 0;
    i16 = i2;
    HEAP32[i16 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i16 + 4 >> 2] = i15;
    i16 = i10;
    HEAP32[i16 >> 2] = i5;
    HEAP32[i16 + 4 >> 2] = i6;
    if ((HEAP32[i1 >> 2] | 0) >>> 0 < i5 >>> 0) {
     i15 = i1;
     i16 = HEAP32[i15 + 4 >> 2] | 0;
     i4 = i10;
     HEAP32[i4 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i4 + 4 >> 2] = i16;
     i4 = i1;
     HEAP32[i4 >> 2] = i5;
     HEAP32[i4 + 4 >> 2] = i6;
     i6 = i10;
     i4 = 2;
    } else {
     i6 = i10;
     i4 = 1;
    }
   } while (0);
   i7 = HEAP32[i2 >> 2] | 0;
   i6 = HEAP32[i6 >> 2] | 0;
   do if (i7 >>> 0 < i6 >>> 0) i5 = i1; else {
    i5 = i1;
    while (1) {
     i5 = i5 + -8 | 0;
     if ((i2 | 0) == (i5 | 0)) break;
     if ((HEAP32[i5 >> 2] | 0) >>> 0 < i6 >>> 0) {
      i14 = 67;
      break;
     }
    }
    if ((i14 | 0) == 67) {
     i14 = 0;
     i15 = i2;
     i9 = HEAP32[i15 >> 2] | 0;
     i15 = HEAP32[i15 + 4 >> 2] | 0;
     i7 = i5;
     i8 = HEAP32[i7 + 4 >> 2] | 0;
     i16 = i2;
     HEAP32[i16 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i16 + 4 >> 2] = i8;
     i16 = i5;
     HEAP32[i16 >> 2] = i9;
     HEAP32[i16 + 4 >> 2] = i15;
     i4 = i4 + 1 | 0;
     break;
    }
    i4 = i2 + 8 | 0;
    if (i7 >>> 0 >= (HEAP32[i1 >> 2] | 0) >>> 0) {
     if ((i4 | 0) == (i1 | 0)) {
      i14 = 85;
      break L1;
     }
     while (1) {
      if (i7 >>> 0 < (HEAP32[i4 >> 2] | 0) >>> 0) break;
      i4 = i4 + 8 | 0;
      if ((i4 | 0) == (i1 | 0)) {
       i14 = 85;
       break L1;
      }
     }
     i15 = i4;
     i11 = HEAP32[i15 >> 2] | 0;
     i15 = HEAP32[i15 + 4 >> 2] | 0;
     i9 = i1;
     i10 = HEAP32[i9 + 4 >> 2] | 0;
     i16 = i4;
     HEAP32[i16 >> 2] = HEAP32[i9 >> 2];
     HEAP32[i16 + 4 >> 2] = i10;
     i16 = i1;
     HEAP32[i16 >> 2] = i11;
     HEAP32[i16 + 4 >> 2] = i15;
     i4 = i4 + 8 | 0;
    }
    if ((i4 | 0) == (i1 | 0)) {
     i14 = 85;
     break L1;
    } else i5 = i1;
    while (1) {
     i7 = HEAP32[i2 >> 2] | 0;
     i6 = i4;
     while (1) {
      i4 = i6 + 8 | 0;
      if (i7 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) break; else i6 = i4;
     }
     do i5 = i5 + -8 | 0; while (i7 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0);
     if (i6 >>> 0 >= i5 >>> 0) {
      i2 = i6;
      continue L3;
     }
     i15 = i6;
     i11 = HEAP32[i15 >> 2] | 0;
     i15 = HEAP32[i15 + 4 >> 2] | 0;
     i9 = i5;
     i10 = HEAP32[i9 + 4 >> 2] | 0;
     i16 = i6;
     HEAP32[i16 >> 2] = HEAP32[i9 >> 2];
     HEAP32[i16 + 4 >> 2] = i10;
     i16 = i5;
     HEAP32[i16 >> 2] = i11;
     HEAP32[i16 + 4 >> 2] = i15;
    }
   } while (0);
   i6 = i2 + 8 | 0;
   L50 : do if (i6 >>> 0 < i5 >>> 0) while (1) {
    i9 = HEAP32[i10 >> 2] | 0;
    i7 = i6;
    while (1) {
     i6 = i7 + 8 | 0;
     if ((HEAP32[i7 >> 2] | 0) >>> 0 < i9 >>> 0) i7 = i6; else {
      i8 = i7;
      break;
     }
    }
    do i5 = i5 + -8 | 0; while ((HEAP32[i5 >> 2] | 0) >>> 0 >= i9 >>> 0);
    i7 = i5;
    if (i8 >>> 0 > i7 >>> 0) {
     i6 = i8;
     i5 = i10;
     break L50;
    }
    i16 = i8;
    i15 = HEAP32[i16 >> 2] | 0;
    i16 = HEAP32[i16 + 4 >> 2] | 0;
    i17 = i7;
    i9 = HEAP32[i17 + 4 >> 2] | 0;
    i5 = i8;
    HEAP32[i5 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i5 + 4 >> 2] = i9;
    i5 = i7;
    HEAP32[i5 >> 2] = i15;
    HEAP32[i5 + 4 >> 2] = i16;
    i5 = i7;
    i10 = (i10 | 0) == (i8 | 0) ? i7 : i10;
    i4 = i4 + 1 | 0;
   } else i5 = i10; while (0);
   if ((i6 | 0) != (i5 | 0) ? (HEAP32[i5 >> 2] | 0) >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0 : 0) {
    i16 = i6;
    i15 = HEAP32[i16 >> 2] | 0;
    i16 = HEAP32[i16 + 4 >> 2] | 0;
    i9 = i5;
    i10 = HEAP32[i9 + 4 >> 2] | 0;
    i17 = i6;
    HEAP32[i17 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i17 + 4 >> 2] = i10;
    i17 = i5;
    HEAP32[i17 >> 2] = i15;
    HEAP32[i17 + 4 >> 2] = i16;
    i4 = i4 + 1 | 0;
   }
   if (!i4) {
    i4 = __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEbT0_SV_T_(i2, i6, i13) | 0;
    i5 = i6 + 8 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEbT0_SV_T_(i5, i3, i13) | 0) {
     i14 = 84;
     break;
    }
    if (i4) {
     i2 = i5;
     continue;
    }
   }
   i17 = i6;
   if ((i17 - i11 | 0) >= (i12 - i17 | 0)) {
    i1 = i6;
    i14 = 83;
    break;
   }
   __ZNSt3__16__sortIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEvT0_SV_T_(i2, i6, i13);
   i2 = i6 + 8 | 0;
  }
  if ((i14 | 0) == 83) {
   i14 = 0;
   __ZNSt3__16__sortIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEvT0_SV_T_(i1 + 8 | 0, i3, i13);
   i3 = i1;
   continue;
  } else if ((i14 | 0) == 84) {
   i14 = 0;
   if (i4) {
    i14 = 85;
    break;
   } else {
    i3 = i6;
    continue;
   }
  }
 }
 if ((i14 | 0) == 4) {
  if ((HEAP32[i3 >> 2] | 0) >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) return;
  i16 = i2;
  i15 = HEAP32[i16 >> 2] | 0;
  i16 = HEAP32[i16 + 4 >> 2] | 0;
  i13 = i1;
  i14 = HEAP32[i13 + 4 >> 2] | 0;
  i17 = i2;
  HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i17 + 4 >> 2] = i14;
  i17 = i1;
  HEAP32[i17 >> 2] = i15;
  HEAP32[i17 + 4 >> 2] = i16;
  return;
 } else if ((i14 | 0) == 6) {
  i1 = i2 + 8 | 0;
  i17 = HEAP32[i1 >> 2] | 0;
  i3 = (HEAP32[i7 >> 2] | 0) >>> 0 < i17 >>> 0;
  if (i17 >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) {
   if (!i3) return;
   i16 = i1;
   i15 = HEAP32[i16 >> 2] | 0;
   i16 = HEAP32[i16 + 4 >> 2] | 0;
   i13 = i6;
   i14 = HEAP32[i13 + 4 >> 2] | 0;
   i17 = i1;
   HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i17 + 4 >> 2] = i14;
   i17 = i6;
   HEAP32[i17 >> 2] = i15;
   HEAP32[i17 + 4 >> 2] = i16;
   if ((HEAP32[i1 >> 2] | 0) >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) return;
   i16 = i2;
   i15 = HEAP32[i16 >> 2] | 0;
   i16 = HEAP32[i16 + 4 >> 2] | 0;
   i13 = i1;
   i14 = HEAP32[i13 + 4 >> 2] | 0;
   i17 = i2;
   HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i17 + 4 >> 2] = i14;
   i17 = i1;
   HEAP32[i17 >> 2] = i15;
   HEAP32[i17 + 4 >> 2] = i16;
   return;
  }
  i5 = i2;
  i4 = HEAP32[i5 >> 2] | 0;
  i5 = HEAP32[i5 + 4 >> 2] | 0;
  if (i3) {
   i15 = i6;
   i16 = HEAP32[i15 + 4 >> 2] | 0;
   i17 = i2;
   HEAP32[i17 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i17 + 4 >> 2] = i16;
   i17 = i6;
   HEAP32[i17 >> 2] = i4;
   HEAP32[i17 + 4 >> 2] = i5;
   return;
  }
  i15 = i1;
  i16 = HEAP32[i15 + 4 >> 2] | 0;
  i17 = i2;
  HEAP32[i17 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i17 + 4 >> 2] = i16;
  i17 = i1;
  HEAP32[i17 >> 2] = i4;
  HEAP32[i17 + 4 >> 2] = i5;
  if ((HEAP32[i7 >> 2] | 0) >>> 0 >= i4 >>> 0) return;
  i15 = i6;
  i16 = HEAP32[i15 + 4 >> 2] | 0;
  i17 = i1;
  HEAP32[i17 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i17 + 4 >> 2] = i16;
  i17 = i6;
  HEAP32[i17 >> 2] = i4;
  HEAP32[i17 + 4 >> 2] = i5;
  return;
 } else if ((i14 | 0) == 14) {
  __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i2, i2 + 8 | 0, i2 + 16 | 0, i1, i13) | 0;
  return;
 } else if ((i14 | 0) == 15) {
  i6 = i2 + 8 | 0;
  i7 = i2 + 16 | 0;
  i5 = i2 + 24 | 0;
  __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i2, i6, i7, i5, i13) | 0;
  if ((HEAP32[i3 >> 2] | 0) >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) return;
  i16 = i5;
  i15 = HEAP32[i16 >> 2] | 0;
  i16 = HEAP32[i16 + 4 >> 2] | 0;
  i13 = i1;
  i14 = HEAP32[i13 + 4 >> 2] | 0;
  i17 = i5;
  HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i17 + 4 >> 2] = i14;
  i17 = i1;
  HEAP32[i17 >> 2] = i15;
  HEAP32[i17 + 4 >> 2] = i16;
  if ((HEAP32[i5 >> 2] | 0) >>> 0 >= (HEAP32[i7 >> 2] | 0) >>> 0) return;
  i17 = i7;
  i16 = HEAP32[i17 >> 2] | 0;
  i17 = HEAP32[i17 + 4 >> 2] | 0;
  i4 = i5;
  i3 = HEAP32[i4 >> 2] | 0;
  i4 = HEAP32[i4 + 4 >> 2] | 0;
  i1 = i7;
  HEAP32[i1 >> 2] = i3;
  HEAP32[i1 + 4 >> 2] = i4;
  i1 = i5;
  HEAP32[i1 >> 2] = i16;
  HEAP32[i1 + 4 >> 2] = i17;
  i1 = i3;
  if (i1 >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0) return;
  i16 = i6;
  i15 = HEAP32[i16 >> 2] | 0;
  i16 = HEAP32[i16 + 4 >> 2] | 0;
  i17 = i6;
  HEAP32[i17 >> 2] = i3;
  HEAP32[i17 + 4 >> 2] = i4;
  i17 = i7;
  HEAP32[i17 >> 2] = i15;
  HEAP32[i17 + 4 >> 2] = i16;
  if (i1 >>> 0 >= (HEAP32[i2 >> 2] | 0) >>> 0) return;
  i16 = i2;
  i15 = HEAP32[i16 >> 2] | 0;
  i16 = HEAP32[i16 + 4 >> 2] | 0;
  i17 = i2;
  HEAP32[i17 >> 2] = i3;
  HEAP32[i17 + 4 >> 2] = i4;
  i17 = i6;
  HEAP32[i17 >> 2] = i15;
  HEAP32[i17 + 4 >> 2] = i16;
  return;
 } else if ((i14 | 0) == 21) {
  i8 = i2 + 16 | 0;
  i7 = i2 + 8 | 0;
  i17 = HEAP32[i7 >> 2] | 0;
  i6 = HEAP32[i2 >> 2] | 0;
  i1 = HEAP32[i8 >> 2] | 0;
  i4 = i1 >>> 0 < i17 >>> 0;
  do if (i17 >>> 0 < i6 >>> 0) {
   i6 = i2;
   i5 = HEAP32[i6 >> 2] | 0;
   i6 = HEAP32[i6 + 4 >> 2] | 0;
   if (i4) {
    i16 = i8;
    i17 = HEAP32[i16 + 4 >> 2] | 0;
    i1 = i2;
    HEAP32[i1 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i1 + 4 >> 2] = i17;
    i1 = i8;
    HEAP32[i1 >> 2] = i5;
    HEAP32[i1 + 4 >> 2] = i6;
    i1 = i5;
    break;
   }
   i16 = i7;
   i17 = HEAP32[i16 + 4 >> 2] | 0;
   i4 = i2;
   HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i4 + 4 >> 2] = i17;
   i4 = i7;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i6;
   i4 = i5;
   if (i1 >>> 0 < i4 >>> 0) {
    i16 = i8;
    i17 = HEAP32[i16 + 4 >> 2] | 0;
    i1 = i7;
    HEAP32[i1 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i1 + 4 >> 2] = i17;
    i1 = i8;
    HEAP32[i1 >> 2] = i5;
    HEAP32[i1 + 4 >> 2] = i6;
    i1 = i4;
   }
  } else if (i4) {
   i16 = i7;
   i1 = HEAP32[i16 >> 2] | 0;
   i16 = HEAP32[i16 + 4 >> 2] | 0;
   i5 = i8;
   i4 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[i5 + 4 >> 2] | 0;
   i17 = i7;
   HEAP32[i17 >> 2] = i4;
   HEAP32[i17 + 4 >> 2] = i5;
   i17 = i8;
   HEAP32[i17 >> 2] = i1;
   HEAP32[i17 + 4 >> 2] = i16;
   if (i4 >>> 0 < i6 >>> 0) {
    i16 = i2;
    i15 = HEAP32[i16 >> 2] | 0;
    i16 = HEAP32[i16 + 4 >> 2] | 0;
    i17 = i2;
    HEAP32[i17 >> 2] = i4;
    HEAP32[i17 + 4 >> 2] = i5;
    i17 = i7;
    HEAP32[i17 >> 2] = i15;
    HEAP32[i17 + 4 >> 2] = i16;
   }
  } while (0);
  i4 = i2 + 24 | 0;
  if ((i4 | 0) == (i3 | 0)) return; else {
   i5 = i1;
   i1 = i8;
  }
  while (1) {
   i6 = HEAP32[i4 >> 2] | 0;
   i8 = i6;
   if (i6 >>> 0 < i5 >>> 0) {
    i7 = HEAP32[i4 + 4 >> 2] | 0;
    i5 = i4;
    while (1) {
     i15 = i1;
     i16 = HEAP32[i15 + 4 >> 2] | 0;
     i17 = i5;
     HEAP32[i17 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i17 + 4 >> 2] = i16;
     if ((i1 | 0) == (i2 | 0)) {
      i1 = i2;
      break;
     }
     i5 = i1 + -8 | 0;
     if (i6 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
      i17 = i1;
      i1 = i5;
      i5 = i17;
     } else break;
    }
    HEAP32[i1 >> 2] = i8;
    HEAP32[i1 + 4 >> 2] = i7;
   }
   i1 = i4 + 8 | 0;
   if ((i1 | 0) == (i3 | 0)) break;
   i17 = i4;
   i5 = HEAP32[i4 >> 2] | 0;
   i4 = i1;
   i1 = i17;
  }
  return;
 } else if ((i14 | 0) == 85) return;
}

function _vfscanf(i33, i2, i24) {
 i33 = i33 | 0;
 i2 = i2 | 0;
 i24 = i24 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i34 = 0;
 i34 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i25 = i34 + 16 | 0;
 i27 = i34 + 8 | 0;
 i26 = i34 + 33 | 0;
 i28 = i34;
 i16 = i34 + 32 | 0;
 if ((HEAP32[i33 + 76 >> 2] | 0) > -1) i32 = ___lockfile(i33) | 0; else i32 = 0;
 i1 = HEAP8[i2 >> 0] | 0;
 L4 : do if (i1 << 24 >> 24) {
  i29 = i33 + 4 | 0;
  i30 = i33 + 100 | 0;
  i23 = i33 + 108 | 0;
  i17 = i33 + 8 | 0;
  i18 = i26 + 10 | 0;
  i19 = i26 + 33 | 0;
  i20 = i27 + 4 | 0;
  i21 = i26 + 46 | 0;
  i22 = i26 + 94 | 0;
  i4 = i1;
  i1 = 0;
  i5 = i2;
  i10 = 0;
  i3 = 0;
  i2 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace(i4 & 255) | 0)) {
    i4 = (HEAP8[i5 >> 0] | 0) == 37;
    L10 : do if (i4) {
     i8 = i5 + 1 | 0;
     i6 = HEAP8[i8 >> 0] | 0;
     L12 : do switch (i6 << 24 >> 24) {
     case 37:
      break L10;
     case 42:
      {
       i15 = 0;
       i6 = i5 + 2 | 0;
       break;
      }
     default:
      {
       i6 = (i6 & 255) + -48 | 0;
       if (i6 >>> 0 < 10 ? (HEAP8[i5 + 2 >> 0] | 0) == 36 : 0) {
        HEAP32[i25 >> 2] = HEAP32[i24 >> 2];
        while (1) {
         i15 = (HEAP32[i25 >> 2] | 0) + (4 - 1) & ~(4 - 1);
         i4 = HEAP32[i15 >> 2] | 0;
         HEAP32[i25 >> 2] = i15 + 4;
         if (i6 >>> 0 > 1) i6 = i6 + -1 | 0; else break;
        }
        i15 = i4;
        i6 = i5 + 3 | 0;
        break L12;
       }
       i6 = (HEAP32[i24 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       i15 = HEAP32[i6 >> 2] | 0;
       HEAP32[i24 >> 2] = i6 + 4;
       i6 = i8;
      }
     } while (0);
     i4 = HEAP8[i6 >> 0] | 0;
     i5 = i4 & 255;
     if ((i5 + -48 | 0) >>> 0 < 10) {
      i4 = 0;
      while (1) {
       i8 = (i4 * 10 | 0) + -48 + i5 | 0;
       i6 = i6 + 1 | 0;
       i4 = HEAP8[i6 >> 0] | 0;
       i5 = i4 & 255;
       if ((i5 + -48 | 0) >>> 0 >= 10) break; else i4 = i8;
      }
     } else i8 = 0;
     if (i4 << 24 >> 24 == 109) {
      i6 = i6 + 1 | 0;
      i9 = HEAP8[i6 >> 0] | 0;
      i4 = (i15 | 0) != 0 & 1;
      i3 = 0;
      i2 = 0;
     } else {
      i9 = i4;
      i4 = 0;
     }
     i5 = i6 + 1 | 0;
     switch (i9 & 255 | 0) {
     case 104:
      {
       i14 = (HEAP8[i5 >> 0] | 0) == 104;
       i5 = i14 ? i6 + 2 | 0 : i5;
       i6 = i14 ? -2 : -1;
       break;
      }
     case 108:
      {
       i14 = (HEAP8[i5 >> 0] | 0) == 108;
       i5 = i14 ? i6 + 2 | 0 : i5;
       i6 = i14 ? 3 : 1;
       break;
      }
     case 106:
      {
       i6 = 3;
       break;
      }
     case 116:
     case 122:
      {
       i6 = 1;
       break;
      }
     case 76:
      {
       i6 = 2;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       i5 = i6;
       i6 = 0;
       break;
      }
     default:
      {
       i31 = 154;
       break L6;
      }
     }
     i9 = HEAPU8[i5 >> 0] | 0;
     i11 = (i9 & 47 | 0) == 3;
     i9 = i11 ? i9 | 32 : i9;
     i11 = i11 ? 1 : i6;
     switch (i9 | 0) {
     case 99:
      {
       i14 = i10;
       i13 = (i8 | 0) < 1 ? 1 : i8;
       break;
      }
     case 91:
      {
       i14 = i10;
       i13 = i8;
       break;
      }
     case 110:
      {
       if (!i15) {
        i6 = i10;
        break L8;
       }
       switch (i11 | 0) {
       case -2:
        {
         HEAP8[i15 >> 0] = i10;
         i6 = i10;
         break L8;
        }
       case -1:
        {
         HEAP16[i15 >> 1] = i10;
         i6 = i10;
         break L8;
        }
       case 0:
        {
         HEAP32[i15 >> 2] = i10;
         i6 = i10;
         break L8;
        }
       case 1:
        {
         HEAP32[i15 >> 2] = i10;
         i6 = i10;
         break L8;
        }
       case 3:
        {
         i6 = i15;
         HEAP32[i6 >> 2] = i10;
         HEAP32[i6 + 4 >> 2] = ((i10 | 0) < 0) << 31 >> 31;
         i6 = i10;
         break L8;
        }
       default:
        {
         i6 = i10;
         break L8;
        }
       }
      }
     default:
      {
       ___shlim(i33, 0);
       do {
        i6 = HEAP32[i29 >> 2] | 0;
        if (i6 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
         HEAP32[i29 >> 2] = i6 + 1;
         i6 = HEAPU8[i6 >> 0] | 0;
        } else i6 = ___shgetc(i33) | 0;
       } while ((_isspace(i6) | 0) != 0);
       if (!(HEAP32[i30 >> 2] | 0)) i6 = HEAP32[i29 >> 2] | 0; else {
        i6 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
        HEAP32[i29 >> 2] = i6;
       }
       i14 = (HEAP32[i23 >> 2] | 0) + i10 + i6 - (HEAP32[i17 >> 2] | 0) | 0;
       i13 = i8;
      }
     }
     ___shlim(i33, i13);
     i6 = HEAP32[i29 >> 2] | 0;
     i8 = HEAP32[i30 >> 2] | 0;
     if (i6 >>> 0 < i8 >>> 0) HEAP32[i29 >> 2] = i6 + 1; else {
      if ((___shgetc(i33) | 0) < 0) {
       i31 = 154;
       break L6;
      }
      i8 = HEAP32[i30 >> 2] | 0;
     }
     if (i8 | 0) HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
     L68 : do switch (i9 | 0) {
     case 91:
     case 99:
     case 115:
      {
       i12 = (i9 | 0) == 99;
       L70 : do if ((i9 | 16 | 0) == 115) {
        _memset(i26 | 0, -1, 257) | 0;
        HEAP8[i26 >> 0] = 0;
        if ((i9 | 0) == 115) {
         HEAP8[i19 >> 0] = 0;
         HEAP8[i18 >> 0] = 0;
         HEAP8[i18 + 1 >> 0] = 0;
         HEAP8[i18 + 2 >> 0] = 0;
         HEAP8[i18 + 3 >> 0] = 0;
         HEAP8[i18 + 4 >> 0] = 0;
        }
       } else {
        i9 = i5 + 1 | 0;
        i10 = (HEAP8[i9 >> 0] | 0) == 94;
        i6 = i10 & 1;
        i5 = i10 ? i5 + 2 | 0 : i9;
        _memset(i26 | 0, i10 & 1 | 0, 257) | 0;
        HEAP8[i26 >> 0] = 0;
        switch (HEAP8[i5 >> 0] | 0) {
        case 45:
         {
          i10 = (i6 ^ 1) & 255;
          HEAP8[i21 >> 0] = i10;
          i5 = i5 + 1 | 0;
          break;
         }
        case 93:
         {
          i10 = (i6 ^ 1) & 255;
          HEAP8[i22 >> 0] = i10;
          i5 = i5 + 1 | 0;
          break;
         }
        default:
         i10 = (i6 ^ 1) & 255;
        }
        while (1) {
         i6 = HEAP8[i5 >> 0] | 0;
         L81 : do switch (i6 << 24 >> 24) {
         case 0:
          {
           i31 = 154;
           break L6;
          }
         case 93:
          break L70;
         case 45:
          {
           i9 = i5 + 1 | 0;
           i6 = HEAP8[i9 >> 0] | 0;
           switch (i6 << 24 >> 24) {
           case 93:
           case 0:
            {
             i6 = 45;
             break L81;
            }
           default:
            {}
           }
           i5 = HEAP8[i5 + -1 >> 0] | 0;
           if ((i5 & 255) < (i6 & 255)) {
            i5 = i5 & 255;
            do {
             i5 = i5 + 1 | 0;
             HEAP8[i26 + i5 >> 0] = i10;
             i6 = HEAP8[i9 >> 0] | 0;
            } while ((i5 | 0) < (i6 & 255 | 0));
            i5 = i9;
           } else i5 = i9;
           break;
          }
         default:
          {}
         } while (0);
         HEAP8[i26 + ((i6 & 255) + 1) >> 0] = i10;
         i5 = i5 + 1 | 0;
        }
       } while (0);
       i9 = i12 ? i13 + 1 | 0 : 31;
       i10 = (i11 | 0) == 1;
       i11 = (i4 | 0) != 0;
       L89 : do if (i10) {
        if (i11) {
         i2 = _malloc(i9 << 2) | 0;
         if (!i2) {
          i3 = 0;
          i31 = 154;
          break L6;
         }
        } else i2 = i15;
        HEAP32[i27 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        i3 = 0;
        L95 : while (1) {
         i8 = (i2 | 0) == 0;
         do {
          L99 : while (1) {
           i6 = HEAP32[i29 >> 2] | 0;
           if (i6 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
            HEAP32[i29 >> 2] = i6 + 1;
            i6 = HEAPU8[i6 >> 0] | 0;
           } else i6 = ___shgetc(i33) | 0;
           if (!(HEAP8[i26 + (i6 + 1) >> 0] | 0)) break L95;
           HEAP8[i16 >> 0] = i6;
           switch (_mbrtowc(i28, i16, 1, i27) | 0) {
           case -1:
            {
             i3 = 0;
             i31 = 154;
             break L6;
            }
           case -2:
            break;
           default:
            break L99;
           }
          }
          if (!i8) {
           HEAP32[i2 + (i3 << 2) >> 2] = HEAP32[i28 >> 2];
           i3 = i3 + 1 | 0;
          }
         } while (!(i11 & (i3 | 0) == (i9 | 0)));
         i3 = i9 << 1 | 1;
         i6 = _realloc(i2, i3 << 2) | 0;
         if (!i6) {
          i3 = 0;
          i31 = 154;
          break L6;
         } else {
          i8 = i9;
          i9 = i3;
          i2 = i6;
          i3 = i8;
         }
        }
        if (!(_mbsinit(i27) | 0)) {
         i3 = 0;
         i31 = 154;
         break L6;
        } else {
         i8 = i3;
         i3 = 0;
        }
       } else {
        if (i11) {
         i3 = _malloc(i9) | 0;
         if (!i3) {
          i3 = 0;
          i2 = 0;
          i31 = 154;
          break L6;
         } else i6 = 0;
         while (1) {
          do {
           i2 = HEAP32[i29 >> 2] | 0;
           if (i2 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
            HEAP32[i29 >> 2] = i2 + 1;
            i2 = HEAPU8[i2 >> 0] | 0;
           } else i2 = ___shgetc(i33) | 0;
           if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
            i8 = i6;
            i2 = 0;
            break L89;
           }
           HEAP8[i3 + i6 >> 0] = i2;
           i6 = i6 + 1 | 0;
          } while ((i6 | 0) != (i9 | 0));
          i2 = i9 << 1 | 1;
          i6 = _realloc(i3, i2) | 0;
          if (!i6) {
           i2 = 0;
           i31 = 154;
           break L6;
          } else {
           i8 = i9;
           i9 = i2;
           i3 = i6;
           i6 = i8;
          }
         }
        }
        if (!i15) {
         i3 = i8;
         while (1) {
          i2 = HEAP32[i29 >> 2] | 0;
          if (i2 >>> 0 < i3 >>> 0) {
           HEAP32[i29 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i33) | 0;
          if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
           i8 = 0;
           i3 = 0;
           i2 = 0;
           break L89;
          }
          i3 = HEAP32[i30 >> 2] | 0;
         }
        } else {
         i3 = 0;
         while (1) {
          i2 = HEAP32[i29 >> 2] | 0;
          if (i2 >>> 0 < i8 >>> 0) {
           HEAP32[i29 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i33) | 0;
          if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
           i8 = i3;
           i3 = i15;
           i2 = 0;
           break L89;
          }
          HEAP8[i15 + i3 >> 0] = i2;
          i8 = HEAP32[i30 >> 2] | 0;
          i3 = i3 + 1 | 0;
         }
        }
       } while (0);
       if (!(HEAP32[i30 >> 2] | 0)) i6 = HEAP32[i29 >> 2] | 0; else {
        i6 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
        HEAP32[i29 >> 2] = i6;
       }
       i6 = i6 - (HEAP32[i17 >> 2] | 0) + (HEAP32[i23 >> 2] | 0) | 0;
       if (!i6) break L6;
       if (!((i6 | 0) == (i13 | 0) | i12 ^ 1)) break L6;
       do if (i11) if (i10) {
        HEAP32[i15 >> 2] = i2;
        break;
       } else {
        HEAP32[i15 >> 2] = i3;
        break;
       } while (0);
       if (!i12) {
        if (i2 | 0) HEAP32[i2 + (i8 << 2) >> 2] = 0;
        if (!i3) {
         i3 = 0;
         break L68;
        }
        HEAP8[i3 + i8 >> 0] = 0;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       i6 = 16;
       i31 = 136;
       break;
      }
     case 111:
      {
       i6 = 8;
       i31 = 136;
       break;
      }
     case 117:
     case 100:
      {
       i6 = 10;
       i31 = 136;
       break;
      }
     case 105:
      {
       i6 = 0;
       i31 = 136;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       d7 = +___floatscan(i33, i11, 0);
       if ((HEAP32[i23 >> 2] | 0) == ((HEAP32[i17 >> 2] | 0) - (HEAP32[i29 >> 2] | 0) | 0)) break L6;
       if (i15) switch (i11 | 0) {
       case 0:
        {
         HEAPF32[i15 >> 2] = d7;
         break L68;
        }
       case 1:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       case 2:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       default:
        break L68;
       }
       break;
      }
     default:
      {}
     } while (0);
     L169 : do if ((i31 | 0) == 136) {
      i31 = 0;
      i6 = ___intscan(i33, i6, 0, -1, -1) | 0;
      if ((HEAP32[i23 >> 2] | 0) == ((HEAP32[i17 >> 2] | 0) - (HEAP32[i29 >> 2] | 0) | 0)) break L6;
      if ((i15 | 0) != 0 & (i9 | 0) == 112) {
       HEAP32[i15 >> 2] = i6;
       break;
      }
      if (i15) switch (i11 | 0) {
      case -2:
       {
        HEAP8[i15 >> 0] = i6;
        break L169;
       }
      case -1:
       {
        HEAP16[i15 >> 1] = i6;
        break L169;
       }
      case 0:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 1:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 3:
       {
        i13 = i15;
        HEAP32[i13 >> 2] = i6;
        HEAP32[i13 + 4 >> 2] = tempRet0;
        break L169;
       }
      default:
       break L169;
      }
     } while (0);
     i1 = ((i15 | 0) != 0 & 1) + i1 | 0;
     i6 = (HEAP32[i23 >> 2] | 0) + i14 + (HEAP32[i29 >> 2] | 0) - (HEAP32[i17 >> 2] | 0) | 0;
     break L8;
    } while (0);
    i5 = i5 + (i4 & 1) | 0;
    ___shlim(i33, 0);
    i4 = HEAP32[i29 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
     HEAP32[i29 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i33) | 0;
    if ((i4 | 0) != (HEAPU8[i5 >> 0] | 0)) {
     i31 = 22;
     break L6;
    }
    i6 = i10 + 1 | 0;
   } else {
    while (1) {
     i4 = i5 + 1 | 0;
     if (!(_isspace(HEAPU8[i4 >> 0] | 0) | 0)) break; else i5 = i4;
    }
    ___shlim(i33, 0);
    do {
     i4 = HEAP32[i29 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
      HEAP32[i29 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i33) | 0;
    } while ((_isspace(i4) | 0) != 0);
    if (!(HEAP32[i30 >> 2] | 0)) i4 = HEAP32[i29 >> 2] | 0; else {
     i4 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
     HEAP32[i29 >> 2] = i4;
    }
    i6 = (HEAP32[i23 >> 2] | 0) + i10 + i4 - (HEAP32[i17 >> 2] | 0) | 0;
   } while (0);
   i5 = i5 + 1 | 0;
   i4 = HEAP8[i5 >> 0] | 0;
   if (!(i4 << 24 >> 24)) break L4; else i10 = i6;
  }
  if ((i31 | 0) == 22) {
   if (HEAP32[i30 >> 2] | 0) HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
   if ((i1 | 0) != 0 | (i4 | 0) > -1) break; else {
    i1 = 0;
    i31 = 155;
   }
  } else if ((i31 | 0) == 154) if (!i1) {
   i1 = i4;
   i31 = 155;
  }
  if ((i31 | 0) == 155) {
   i4 = i1;
   i1 = -1;
  }
  if (i4) {
   _free(i3);
   _free(i2);
  }
 } else i1 = 0; while (0);
 if (i32 | 0) ___unlockfile(i33);
 STACKTOP = i34;
 return i1 | 0;
}

function __Z24parse_mc_properties_jsonPc(i17, i1) {
 i17 = i17 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, d27 = 0.0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 i14 = i24 + 300 | 0;
 i22 = i24 + 16 | 0;
 i23 = i24;
 i2 = i24 + 280 | 0;
 i3 = i24 + 260 | 0;
 i4 = i24 + 240 | 0;
 i5 = i24 + 220 | 0;
 i12 = i24 + 200 | 0;
 i13 = i24 + 180 | 0;
 i15 = i24 + 160 | 0;
 i21 = i22 + 64 | 0;
 i19 = i22 + 8 | 0;
 HEAP32[i19 >> 2] = 19996;
 i18 = i22 + 12 | 0;
 HEAP32[i22 >> 2] = 20136;
 HEAP32[i21 >> 2] = 20156;
 HEAP32[i22 + 4 >> 2] = 0;
 __ZNSt3__18ios_base4initEPv(i22 + 64 | 0, i18);
 HEAP32[i22 + 136 >> 2] = 0;
 HEAP32[i22 + 140 >> 2] = -1;
 HEAP32[i22 >> 2] = 19976;
 HEAP32[i21 >> 2] = 20016;
 HEAP32[i19 >> 2] = 19996;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i18);
 HEAP32[i18 >> 2] = 20212;
 i19 = i22 + 44 | 0;
 HEAP32[i19 >> 2] = 0;
 HEAP32[i19 + 4 >> 2] = 0;
 HEAP32[i19 + 8 >> 2] = 0;
 HEAP32[i19 + 12 >> 2] = 0;
 HEAP32[i22 + 60 >> 2] = 24;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i18, i14);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 i20 = i22 + 8 | 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i20, i1, _strlen(i1) | 0) | 0;
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 i16 = i23 + 12 | 0;
 i1 = __Znwj(16) | 0;
 i26 = __Znwj(48) | 0;
 HEAP32[i1 + 4 >> 2] = i26;
 i25 = i26 + 28 | 0;
 HEAP32[i25 >> 2] = 0;
 HEAP32[i26 + 32 >> 2] = i25;
 HEAP32[i26 + 36 >> 2] = i25;
 i25 = i26 + 40 | 0;
 HEAP32[i26 + 44 >> 2] = i25;
 HEAP32[i25 >> 2] = i25;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 __ZN5boost13property_tree11json_parser18read_json_internalINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEEEvRNS4_13basic_istreamINT_8key_type10value_typeENS6_ISG_EEEERSF_RKSA_(i22, i23, i14);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 29978, 8);
 HEAP8[i2 + 12 >> 0] = 46;
 HEAP32[i2 + 16 >> 2] = (HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i2);
 i1 = HEAP8[i14 >> 0] | 0;
 d10 = i1 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i1 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i3, 29987, 8);
 HEAP8[i3 + 12 >> 0] = 46;
 HEAP32[i3 + 16 >> 2] = (HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i3);
 i26 = HEAP8[i14 >> 0] | 0;
 d11 = i26 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 29996, 8);
 HEAP8[i4 + 12 >> 0] = 46;
 HEAP32[i4 + 16 >> 2] = (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i4);
 i26 = HEAP8[i14 >> 0] | 0;
 d8 = i26 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 30005, 8);
 HEAP8[i5 + 12 >> 0] = 46;
 HEAP32[i5 + 16 >> 2] = (HEAP8[i5 >> 0] & 1) == 0 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i5);
 i26 = HEAP8[i14 >> 0] | 0;
 d9 = i26 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i12, 30014, 8);
 HEAP8[i12 + 12 >> 0] = 46;
 HEAP32[i12 + 16 >> 2] = (HEAP8[i12 >> 0] & 1) == 0 ? i12 + 1 | 0 : HEAP32[i12 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i12);
 i26 = HEAP8[i14 >> 0] | 0;
 d6 = i26 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i13, 30023, 8);
 HEAP8[i13 + 12 >> 0] = 46;
 HEAP32[i13 + 16 >> 2] = (HEAP8[i13 >> 0] & 1) == 0 ? i13 + 1 | 0 : HEAP32[i13 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i13);
 i26 = HEAP8[i14 >> 0] | 0;
 d7 = i26 << 24 >> 24 ? +HEAPF32[i14 + 4 >> 2] : nan;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i15, 30032, 10);
 HEAP8[i15 + 12 >> 0] = 46;
 HEAP32[i15 + 16 >> 2] = (HEAP8[i15 >> 0] & 1) == 0 ? i15 + 1 | 0 : HEAP32[i15 + 8 >> 2] | 0;
 __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIiEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i14, i23, i15);
 i26 = HEAP8[i14 >> 0] | 0;
 i1 = i26 << 24 >> 24 ? HEAP32[i14 + 4 >> 2] | 0 : -1;
 if (i26 << 24 >> 24) HEAP8[i14 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
 d27 = +Math_abs(+d10);
 if (!((((((HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040 ? (d27 = +Math_abs(+d11), (HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040) : 0) ? (d27 = +Math_abs(+d8), (HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040) : 0) ? (d27 = +Math_abs(+d9), (HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040) : 0) ? (d27 = +Math_abs(+d6), (HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040) : 0) ? (d27 = +Math_abs(+d7), !((HEAPF32[tempDoublePtr >> 2] = d27, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040 | (i1 | 0) < 3)) : 0)) {
  i1 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30043, 56) | 0;
  HEAP32[i14 >> 2] = __ZNKSt3__18ios_base6getlocEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i26 = __ZNKSt3__16locale9use_facetERNS0_2idE(i14, 52980) | 0;
  i26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i26 >> 2] | 0) + 28 >> 2] & 31](i26, 10) | 0;
  __ZNSt3__16localeD2Ev(i14);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i26) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  i1 = 28;
  d11 = 1.0;
  d10 = -1.0;
  d9 = 1.0;
  d8 = -1.0;
  d7 = 1.0;
  d6 = -1.0;
 }
 HEAPF32[i17 >> 2] = d10;
 HEAPF32[i17 + 4 >> 2] = d11;
 HEAPF32[i17 + 8 >> 2] = d8;
 HEAPF32[i17 + 12 >> 2] = d9;
 HEAPF32[i17 + 16 >> 2] = d6;
 HEAPF32[i17 + 20 >> 2] = d7;
 HEAP32[i17 + 24 >> 2] = i1;
 i5 = HEAP32[i16 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) == (i1 | 0)) {
  i26 = i1;
  __ZdlPv(i26);
  __ZdlPv(i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
  HEAP32[i22 >> 2] = 19976;
  HEAP32[i21 >> 2] = 20016;
  HEAP32[i20 >> 2] = 19996;
  HEAP32[i18 >> 2] = 20212;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i18);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i21);
  STACKTOP = i24;
  return;
 }
 i3 = i5 + 8 | 0;
 while (1) {
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
  __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
  __ZdlPv(i2);
  if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 HEAP32[i22 >> 2] = 19976;
 HEAP32[i21 >> 2] = 20016;
 HEAP32[i20 >> 2] = 19996;
 HEAP32[i18 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i18);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i21);
 STACKTOP = i24;
 return;
}

function _free(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 if (!i1) return;
 i3 = i1 + -8 | 0;
 i7 = HEAP32[12863] | 0;
 if (i3 >>> 0 < i7 >>> 0) _abort();
 i1 = HEAP32[i1 + -4 >> 2] | 0;
 i2 = i1 & 3;
 if ((i2 | 0) == 1) _abort();
 i4 = i1 & -8;
 i12 = i3 + i4 | 0;
 do if (!(i1 & 1)) {
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i2) return;
  i10 = i3 + (0 - i1) | 0;
  i9 = i1 + i4 | 0;
  if (i10 >>> 0 < i7 >>> 0) _abort();
  if ((i10 | 0) == (HEAP32[12864] | 0)) {
   i1 = i12 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i16 = i10;
    i6 = i9;
    break;
   }
   HEAP32[12861] = i9;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i10 + 4 >> 2] = i9 | 1;
   HEAP32[i10 + i9 >> 2] = i9;
   return;
  }
  i4 = i1 >>> 3;
  if (i1 >>> 0 < 256) {
   i2 = HEAP32[i10 + 8 >> 2] | 0;
   i3 = HEAP32[i10 + 12 >> 2] | 0;
   i1 = 51476 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i10 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[12859] = HEAP32[12859] & ~(1 << i4);
    i16 = i10;
    i6 = i9;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) i5 = i1; else _abort();
   } else i5 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i5 >> 2] = i2;
   i16 = i10;
   i6 = i9;
   break;
  }
  i5 = HEAP32[i10 + 24 >> 2] | 0;
  i3 = HEAP32[i10 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i10 | 0)) {
   i2 = i10 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i8 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i7 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i8 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i10 + 8 >> 2] | 0;
   if (i4 >>> 0 < i7 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i10 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i10 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i8 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5) {
   i1 = HEAP32[i10 + 28 >> 2] | 0;
   i2 = 51740 + (i1 << 2) | 0;
   if ((i10 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i8;
    if (!i8) {
     HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
     i16 = i10;
     i6 = i9;
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) HEAP32[i1 >> 2] = i8; else HEAP32[i5 + 20 >> 2] = i8;
    if (!i8) {
     i16 = i10;
     i6 = i9;
     break;
    }
   }
   i3 = HEAP32[12863] | 0;
   if (i8 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i8 + 24 >> 2] = i5;
   i1 = i10 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i8 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i8;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
    HEAP32[i8 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i8;
    i16 = i10;
    i6 = i9;
    break;
   } else {
    i16 = i10;
    i6 = i9;
   }
  } else {
   i16 = i10;
   i6 = i9;
  }
 } else {
  i16 = i3;
  i6 = i4;
 } while (0);
 if (i16 >>> 0 >= i12 >>> 0) _abort();
 i1 = i12 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 1)) _abort();
 if (!(i2 & 2)) {
  if ((i12 | 0) == (HEAP32[12865] | 0)) {
   i15 = (HEAP32[12862] | 0) + i6 | 0;
   HEAP32[12862] = i15;
   HEAP32[12865] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   if ((i16 | 0) != (HEAP32[12864] | 0)) return;
   HEAP32[12864] = 0;
   HEAP32[12861] = 0;
   return;
  }
  if ((i12 | 0) == (HEAP32[12864] | 0)) {
   i15 = (HEAP32[12861] | 0) + i6 | 0;
   HEAP32[12861] = i15;
   HEAP32[12864] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   HEAP32[i16 + i15 >> 2] = i15;
   return;
  }
  i6 = (i2 & -8) + i6 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i5 = HEAP32[i12 + 24 >> 2] | 0;
   i1 = HEAP32[i12 + 12 >> 2] | 0;
   do if ((i1 | 0) == (i12 | 0)) {
    i2 = i12 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i13 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i13 = i1;
     break;
    }
   } else {
    i2 = HEAP32[i12 + 8 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i3 = i2 + 12 | 0;
    if ((HEAP32[i3 >> 2] | 0) != (i12 | 0)) _abort();
    i4 = i1 + 8 | 0;
    if ((HEAP32[i4 >> 2] | 0) == (i12 | 0)) {
     HEAP32[i3 >> 2] = i1;
     HEAP32[i4 >> 2] = i2;
     i13 = i1;
     break;
    } else _abort();
   } while (0);
   if (i5 | 0) {
    i1 = HEAP32[i12 + 28 >> 2] | 0;
    i2 = 51740 + (i1 << 2) | 0;
    if ((i12 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i13;
     if (!i13) {
      HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
      break;
     }
    } else {
     if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
     i1 = i5 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i12 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i5 + 20 >> 2] = i13;
     if (!i13) break;
    }
    i3 = HEAP32[12863] | 0;
    if (i13 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i13 + 24 >> 2] = i5;
    i1 = i12 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i13 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i13;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
     HEAP32[i13 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i13;
     break;
    }
   }
  } else {
   i2 = HEAP32[i12 + 8 >> 2] | 0;
   i3 = HEAP32[i12 + 12 >> 2] | 0;
   i1 = 51476 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i12 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[12859] = HEAP32[12859] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i12 | 0)) i11 = i1; else _abort();
   } else i11 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i11 >> 2] = i2;
  } while (0);
  HEAP32[i16 + 4 >> 2] = i6 | 1;
  HEAP32[i16 + i6 >> 2] = i6;
  if ((i16 | 0) == (HEAP32[12864] | 0)) {
   HEAP32[12861] = i6;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i16 + 4 >> 2] = i6 | 1;
  HEAP32[i16 + i6 >> 2] = i6;
 }
 i1 = i6 >>> 3;
 if (i6 >>> 0 < 256) {
  i3 = 51476 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[12859] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
    i14 = i1;
    i15 = i2;
   }
  } else {
   HEAP32[12859] = i2 | i1;
   i14 = i3 + 8 | 0;
   i15 = i3;
  }
  HEAP32[i14 >> 2] = i16;
  HEAP32[i15 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i15;
  HEAP32[i16 + 12 >> 2] = i3;
  return;
 }
 i1 = i6 >>> 8;
 if (i1) if (i6 >>> 0 > 16777215) i3 = 31; else {
  i14 = (i1 + 1048320 | 0) >>> 16 & 8;
  i15 = i1 << i14;
  i13 = (i15 + 520192 | 0) >>> 16 & 4;
  i15 = i15 << i13;
  i3 = (i15 + 245760 | 0) >>> 16 & 2;
  i3 = 14 - (i13 | i14 | i3) + (i15 << i3 >>> 15) | 0;
  i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
 } else i3 = 0;
 i4 = 51740 + (i3 << 2) | 0;
 HEAP32[i16 + 28 >> 2] = i3;
 HEAP32[i16 + 20 >> 2] = 0;
 HEAP32[i16 + 16 >> 2] = 0;
 i1 = HEAP32[12860] | 0;
 i2 = 1 << i3;
 do if (i1 & i2) {
  i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
    i3 = i1;
    i4 = 130;
    break;
   }
   i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (!i3) {
    i4 = 127;
    break;
   } else {
    i5 = i5 << 1;
    i1 = i3;
   }
  }
  if ((i4 | 0) == 127) if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
   HEAP32[i2 >> 2] = i16;
   HEAP32[i16 + 24 >> 2] = i1;
   HEAP32[i16 + 12 >> 2] = i16;
   HEAP32[i16 + 8 >> 2] = i16;
   break;
  } else if ((i4 | 0) == 130) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i15 = HEAP32[12863] | 0;
   if (i2 >>> 0 >= i15 >>> 0 & i3 >>> 0 >= i15 >>> 0) {
    HEAP32[i2 + 12 >> 2] = i16;
    HEAP32[i1 >> 2] = i16;
    HEAP32[i16 + 8 >> 2] = i2;
    HEAP32[i16 + 12 >> 2] = i3;
    HEAP32[i16 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } else {
  HEAP32[12860] = i1 | i2;
  HEAP32[i4 >> 2] = i16;
  HEAP32[i16 + 24 >> 2] = i4;
  HEAP32[i16 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i16;
 } while (0);
 i16 = (HEAP32[12867] | 0) + -1 | 0;
 HEAP32[12867] = i16;
 if (!i16) i1 = 51892; else return;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else i1 = i1 + 8 | 0;
 }
 HEAP32[12867] = -1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i41, i35, i36, i39, i37, i40, i38, i1) {
 i41 = i41 | 0;
 i35 = i35 | 0;
 i36 = i36 | 0;
 i39 = i39 | 0;
 i37 = i37 | 0;
 i40 = i40 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0, i44 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i42 + 132 | 0;
 i1 = i42 + 116 | 0;
 i28 = i42 + 128 | 0;
 i13 = i42 + 124 | 0;
 i24 = i42 + 120 | 0;
 i29 = i42 + 112 | 0;
 i30 = i42 + 108 | 0;
 i31 = i42 + 104 | 0;
 i32 = i42 + 100 | 0;
 i33 = i42 + 96 | 0;
 i34 = i42 + 92 | 0;
 i3 = i42 + 88 | 0;
 i4 = i42 + 84 | 0;
 i5 = i42 + 80 | 0;
 i6 = i42 + 76 | 0;
 i7 = i42 + 72 | 0;
 i8 = i42 + 68 | 0;
 i9 = i42 + 64 | 0;
 i10 = i42 + 60 | 0;
 i11 = i42 + 56 | 0;
 i12 = i42 + 52 | 0;
 i14 = i42 + 48 | 0;
 i15 = i42 + 44 | 0;
 i16 = i42 + 40 | 0;
 i17 = i42 + 36 | 0;
 i18 = i42 + 32 | 0;
 i19 = i42 + 28 | 0;
 i20 = i42 + 24 | 0;
 i21 = i42 + 20 | 0;
 i22 = i42 + 16 | 0;
 i23 = i42 + 12 | 0;
 i25 = i42 + 8 | 0;
 i26 = i42 + 4 | 0;
 i27 = i42;
 HEAP32[i37 >> 2] = 0;
 i44 = __ZNKSt3__18ios_base6getlocEv(i39) | 0;
 HEAP32[i28 >> 2] = i44;
 i28 = __ZNKSt3__16locale9use_facetERNS0_2idE(i28, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i44) | 0;
 do switch (i38 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i13 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i24 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 99:
  {
   i44 = i41 + 8 | 0;
   i44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 12 >> 2] & 127](i44) | 0;
   HEAP32[i29 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i44 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i43 = i44 + 4 | 0;
   i44 = i36 ? i43 : HEAP32[i44 + 8 >> 2] | 0;
   i43 = i44 + ((i36 ? (i38 & 255) >>> 1 : HEAP32[i43 >> 2] | 0) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i31 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 12 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i32 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 26584, 26616) | 0;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i34 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i34 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 26616, 26648) | 0;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i4 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i5 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 28 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i7 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 4 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i10 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i11 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 26648, 26692) | 0;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i14 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 26692, 26712) | 0;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i16 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i17 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 26712, 26744) | 0;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i41 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i20 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i21 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i44 & 63](i41, i1, i2, i39, i37, i40) | 0;
   break;
  }
 case 88:
  {
   i44 = i41 + 8 | 0;
   i44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 24 >> 2] & 127](i44) | 0;
   HEAP32[i22 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i44 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i43 = i44 + 4 | 0;
   i44 = i36 ? i43 : HEAP32[i44 + 8 >> 2] | 0;
   i43 = i44 + ((i36 ? (i38 & 255) >>> 1 : HEAP32[i43 >> 2] | 0) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i26 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i27 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i35 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i41, i35, i36, i39, i37, i40, i38, i1) {
 i41 = i41 | 0;
 i35 = i35 | 0;
 i36 = i36 | 0;
 i39 = i39 | 0;
 i37 = i37 | 0;
 i40 = i40 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0, i44 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i42 + 132 | 0;
 i1 = i42 + 116 | 0;
 i28 = i42 + 128 | 0;
 i13 = i42 + 124 | 0;
 i24 = i42 + 120 | 0;
 i29 = i42 + 112 | 0;
 i30 = i42 + 108 | 0;
 i31 = i42 + 104 | 0;
 i32 = i42 + 100 | 0;
 i33 = i42 + 96 | 0;
 i34 = i42 + 92 | 0;
 i3 = i42 + 88 | 0;
 i4 = i42 + 84 | 0;
 i5 = i42 + 80 | 0;
 i6 = i42 + 76 | 0;
 i7 = i42 + 72 | 0;
 i8 = i42 + 68 | 0;
 i9 = i42 + 64 | 0;
 i10 = i42 + 60 | 0;
 i11 = i42 + 56 | 0;
 i12 = i42 + 52 | 0;
 i14 = i42 + 48 | 0;
 i15 = i42 + 44 | 0;
 i16 = i42 + 40 | 0;
 i17 = i42 + 36 | 0;
 i18 = i42 + 32 | 0;
 i19 = i42 + 28 | 0;
 i20 = i42 + 24 | 0;
 i21 = i42 + 20 | 0;
 i22 = i42 + 16 | 0;
 i23 = i42 + 12 | 0;
 i25 = i42 + 8 | 0;
 i26 = i42 + 4 | 0;
 i27 = i42;
 HEAP32[i37 >> 2] = 0;
 i44 = __ZNKSt3__18ios_base6getlocEv(i39) | 0;
 HEAP32[i28 >> 2] = i44;
 i28 = __ZNKSt3__16locale9use_facetERNS0_2idE(i28, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i44) | 0;
 do switch (i38 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i13 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i24 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 99:
  {
   i43 = i41 + 8 | 0;
   i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i43 >> 2] | 0) + 12 >> 2] & 127](i43) | 0;
   HEAP32[i29 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i43 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i44 = i36 ? i43 + 1 | 0 : HEAP32[i43 + 8 >> 2] | 0;
   i43 = i44 + (i36 ? (i38 & 255) >>> 1 : HEAP32[i43 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i31 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 12 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i32 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 48284, 48292) | 0;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i34 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i34 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 48292, 48300) | 0;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i4 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i5 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 28 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i7 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 4 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i10 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i11 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 48300, 48311) | 0;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i14 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 48311, 48316) | 0;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i16 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i17 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 48316, 48324) | 0;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i41 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i20 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i21 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i44 & 63](i41, i1, i2, i39, i37, i40) | 0;
   break;
  }
 case 88:
  {
   i43 = i41 + 8 | 0;
   i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i43 >> 2] | 0) + 24 >> 2] & 127](i43) | 0;
   HEAP32[i22 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i43 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i44 = i36 ? i43 + 1 | 0 : HEAP32[i43 + 8 >> 2] | 0;
   i43 = i44 + (i36 ? (i38 & 255) >>> 1 : HEAP32[i43 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i35 >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i26 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i27 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i35 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function __Z12InvertMatrixPKfPf(i1, i14) {
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i21 + 12 | 0;
 i5 = i21;
 i19 = __Znwj(64) | 0;
 i20 = __Znwj(64) | 0;
 HEAP32[i19 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i19 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i19 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i19 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i20 >> 2] = HEAP32[i14 >> 2];
 HEAP32[i20 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
 HEAP32[i20 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
 HEAP32[i20 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
 i15 = i20 + 16 | 0;
 i17 = i14 + 16 | 0;
 i16 = i19 + 16 | 0;
 i18 = i1 + 16 | 0;
 HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i16 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
 HEAP32[i16 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
 HEAP32[i16 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
 HEAP32[i15 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
 HEAP32[i15 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
 HEAP32[i15 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
 i16 = i20 + 32 | 0;
 i18 = i14 + 32 | 0;
 i9 = i19 + 32 | 0;
 i11 = i1 + 32 | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
 HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
 HEAP32[i9 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
 HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i16 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
 HEAP32[i16 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
 HEAP32[i16 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
 HEAPF32[i19 + 60 >> 2] = 1.0;
 HEAPF32[i19 + 48 >> 2] = 0.0;
 HEAPF32[i19 + 52 >> 2] = 0.0;
 HEAPF32[i19 + 56 >> 2] = 0.0;
 HEAPF32[i20 + 60 >> 2] = 1.0;
 HEAPF32[i20 + 48 >> 2] = 0.0;
 HEAPF32[i20 + 52 >> 2] = 0.0;
 HEAPF32[i20 + 56 >> 2] = 0.0;
 HEAP32[i4 >> 2] = 4;
 i9 = i4 + 4 | 0;
 HEAP32[i9 >> 2] = 4;
 i11 = i4 + 12 | 0;
 HEAP32[i11 >> 2] = 16;
 i7 = __Znwj(64) | 0;
 i12 = i4 + 16 | 0;
 HEAP32[i12 >> 2] = i7;
 HEAP32[i7 >> 2] = HEAP32[i19 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
 HEAP32[i7 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
 HEAP32[i7 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
 HEAP32[i7 + 16 >> 2] = HEAP32[i19 + 16 >> 2];
 HEAP32[i7 + 20 >> 2] = HEAP32[i19 + 20 >> 2];
 HEAP32[i7 + 24 >> 2] = HEAP32[i19 + 24 >> 2];
 HEAP32[i7 + 28 >> 2] = HEAP32[i19 + 28 >> 2];
 HEAP32[i7 + 32 >> 2] = HEAP32[i19 + 32 >> 2];
 HEAP32[i7 + 36 >> 2] = HEAP32[i19 + 36 >> 2];
 HEAP32[i7 + 40 >> 2] = HEAP32[i19 + 40 >> 2];
 HEAP32[i7 + 44 >> 2] = HEAP32[i19 + 44 >> 2];
 HEAP32[i7 + 48 >> 2] = HEAP32[i19 + 48 >> 2];
 HEAP32[i7 + 52 >> 2] = HEAP32[i19 + 52 >> 2];
 HEAP32[i7 + 56 >> 2] = HEAP32[i19 + 56 >> 2];
 HEAP32[i7 + 60 >> 2] = HEAP32[i19 + 60 >> 2];
 i7 = HEAP32[i4 >> 2] | 0;
 HEAP32[i5 + 4 >> 2] = i7;
 i13 = (i7 | 0) == 0;
 if (i13) {
  HEAP32[i5 + 8 >> 2] = 0;
  i10 = 0;
  i6 = 0;
 } else {
  i2 = __Znwj(i7 << 2) | 0;
  HEAP32[i5 + 8 >> 2] = i2;
  i1 = 0;
  do {
   HEAP32[i2 + (i1 << 2) >> 2] = i1;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i7 | 0));
  i10 = i2;
  i6 = i2;
 }
 if (!(__ZN5boost7numeric5ublas12lu_factorizeINS1_6matrixIfNS1_15basic_row_majorIjiEENS1_15unbounded_arrayIfNSt3__19allocatorIfEEEEEENS1_18permutation_matrixIjNS6_IjNS8_IjEEEEEEEENT_9size_typeERSG_RT0_(i4, i5) | 0)) {
  i4 = HEAP32[i4 >> 2] | 0;
  i1 = i20;
  i2 = i1 + 64 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  if (i4 | 0) {
   i1 = 0;
   do {
    HEAP32[i20 + (i1 * 5 << 2) >> 2] = 1065353216;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != (i4 | 0));
  }
  if (i13) i7 = 0; else {
   i2 = 0;
   do {
    i1 = HEAP32[i6 + (i2 << 2) >> 2] | 0;
    if ((i2 | 0) != (i1 | 0)) {
     i8 = i20 + (i1 << 2 << 2) | 0;
     i4 = i20 + (i2 << 2 << 2) | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i8 >> 2] = i5;
     i4 = i4 + 4 | 0;
     i8 = i8 + 4 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i8 >> 2] = i5;
     i4 = i4 + 4 | 0;
     i8 = i8 + 4 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i8 >> 2] = i5;
     i4 = i4 + 4 | 0;
     i8 = i8 + 4 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i8 >> 2] = i5;
    }
    i2 = i2 + 1 | 0;
   } while ((i2 | 0) != (i7 | 0));
   i7 = 0;
  }
  do {
   i8 = i7;
   i7 = i7 + 1 | 0;
   if (i7 >>> 0 < 4) {
    i4 = i8 << 2;
    i5 = HEAP32[i9 >> 2] | 0;
    i6 = HEAP32[i12 >> 2] | 0;
    d3 = +HEAPF32[i20 + (i4 << 2) >> 2];
    if (d3 != 0.0) {
     i2 = i7;
     do {
      if (i8 >>> 0 < i2 >>> 0) i1 = i6 + ((Math_imul(i2, i5) | 0) + i8 << 2) | 0; else i1 = (i8 | 0) == (i2 | 0) ? 20684 : 51360;
      i22 = i20 + (i2 << 2 << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d3 * +HEAPF32[i1 >> 2];
      i2 = i2 + 1 | 0;
     } while ((i2 | 0) != 4);
    }
    d3 = +HEAPF32[i20 + ((i4 | 1) << 2) >> 2];
    if (d3 != 0.0) {
     i2 = i7;
     do {
      if (i8 >>> 0 < i2 >>> 0) i1 = i6 + ((Math_imul(i2, i5) | 0) + i8 << 2) | 0; else i1 = (i8 | 0) == (i2 | 0) ? 20684 : 51360;
      i22 = i20 + ((i2 << 2 | 1) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d3 * +HEAPF32[i1 >> 2];
      i2 = i2 + 1 | 0;
     } while ((i2 | 0) != 4);
    }
    d3 = +HEAPF32[i20 + ((i4 | 2) << 2) >> 2];
    if (d3 != 0.0) {
     i2 = i7;
     do {
      if (i8 >>> 0 < i2 >>> 0) i1 = i6 + ((Math_imul(i2, i5) | 0) + i8 << 2) | 0; else i1 = (i8 | 0) == (i2 | 0) ? 20684 : 51360;
      i22 = i20 + ((i2 << 2 | 2) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d3 * +HEAPF32[i1 >> 2];
      i2 = i2 + 1 | 0;
     } while ((i2 | 0) != 4);
    }
    d3 = +HEAPF32[i20 + ((i4 | 3) << 2) >> 2];
    if (d3 != 0.0) {
     i2 = i7;
     do {
      if (i8 >>> 0 < i2 >>> 0) i1 = i6 + ((Math_imul(i2, i5) | 0) + i8 << 2) | 0; else i1 = (i8 | 0) == (i2 | 0) ? 20684 : 51360;
      i22 = i20 + ((i2 << 2 | 3) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d3 * +HEAPF32[i1 >> 2];
      i2 = i2 + 1 | 0;
     } while ((i2 | 0) != 4);
    }
   }
  } while ((i7 | 0) != 4);
  i6 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i12 >> 2] | 0;
  i1 = 4;
  i8 = 3;
  while (1) {
   i4 = i7 + ((Math_imul(i6, i8) | 0) + i8 << 2) | 0;
   i5 = i8 << 2;
   i1 = i1 + -2 | 0;
   i22 = i20 + ((i5 | 3) << 2) | 0;
   d3 = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
   HEAPF32[i22 >> 2] = d3;
   if ((i1 | 0) > -1) {
    if (d3 != 0.0) {
     i2 = i1;
     while (1) {
      d23 = d3 * +HEAPF32[i7 + ((Math_imul(i2, i6) | 0) + i8 << 2) >> 2];
      i22 = i20 + ((i2 << 2 | 3) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d23;
      if ((i2 | 0) > 0) i2 = i2 + -1 | 0; else break;
     }
    }
    i22 = i20 + ((i5 | 2) << 2) | 0;
    d3 = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
    HEAPF32[i22 >> 2] = d3;
    if (d3 != 0.0) {
     i2 = i1;
     while (1) {
      d23 = d3 * +HEAPF32[i7 + ((Math_imul(i2, i6) | 0) + i8 << 2) >> 2];
      i22 = i20 + ((i2 << 2 | 2) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d23;
      if ((i2 | 0) > 0) i2 = i2 + -1 | 0; else break;
     }
    }
    i22 = i20 + ((i5 | 1) << 2) | 0;
    d3 = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
    HEAPF32[i22 >> 2] = d3;
    if (d3 != 0.0) {
     i2 = i1;
     while (1) {
      d23 = d3 * +HEAPF32[i7 + ((Math_imul(i2, i6) | 0) + i8 << 2) >> 2];
      i22 = i20 + ((i2 << 2 | 1) << 2) | 0;
      HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d23;
      if ((i2 | 0) > 0) i2 = i2 + -1 | 0; else break;
     }
    }
    i22 = i20 + (i5 << 2) | 0;
    d3 = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
    HEAPF32[i22 >> 2] = d3;
    if (d3 != 0.0) while (1) {
     d23 = d3 * +HEAPF32[i7 + ((Math_imul(i1, i6) | 0) + i8 << 2) >> 2];
     i22 = i20 + (i1 << 2 << 2) | 0;
     HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] - d23;
     if ((i1 | 0) > 0) i1 = i1 + -1 | 0; else break;
    }
   } else {
    i22 = i20 + ((i5 | 2) << 2) | 0;
    HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
    i22 = i20 + ((i5 | 1) << 2) | 0;
    HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
    i22 = i20 + (i5 << 2) | 0;
    HEAPF32[i22 >> 2] = +HEAPF32[i22 >> 2] / +HEAPF32[i4 >> 2];
   }
   if ((i8 | 0) > 0) {
    i1 = i8;
    i8 = i8 + -1 | 0;
   } else break;
  }
  HEAP32[i14 >> 2] = HEAP32[i20 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i20 + 4 >> 2];
  HEAP32[i14 + 8 >> 2] = HEAP32[i20 + 8 >> 2];
  HEAP32[i14 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
  HEAP32[i17 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  HEAP32[i17 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
  HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i18 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
  HEAP32[i18 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
  HEAP32[i18 + 12 >> 2] = HEAP32[i16 + 12 >> 2];
  i1 = 1;
 } else i1 = 0;
 if (!i13) __ZdlPv(i10);
 if (!(HEAP32[i11 >> 2] | 0)) {
  __ZdlPv(i20);
  __ZdlPv(i19);
  STACKTOP = i21;
  return i1 | 0;
 }
 __ZdlPv(HEAP32[i12 >> 2] | 0);
 __ZdlPv(i20);
 __ZdlPv(i19);
 STACKTOP = i21;
 return i1 | 0;
}

function _dispose_chunk(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i14 = i2 + i3 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 do if (!(i1 & 1)) {
  i5 = HEAP32[i2 >> 2] | 0;
  if (!(i1 & 3)) return;
  i11 = i2 + (0 - i5) | 0;
  i10 = i5 + i3 | 0;
  i8 = HEAP32[12863] | 0;
  if (i11 >>> 0 < i8 >>> 0) _abort();
  if ((i11 | 0) == (HEAP32[12864] | 0)) {
   i2 = i14 + 4 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 & 3 | 0) != 3) {
    i17 = i11;
    i6 = i10;
    break;
   }
   HEAP32[12861] = i10;
   HEAP32[i2 >> 2] = i1 & -2;
   HEAP32[i11 + 4 >> 2] = i10 | 1;
   HEAP32[i11 + i10 >> 2] = i10;
   return;
  }
  i4 = i5 >>> 3;
  if (i5 >>> 0 < 256) {
   i2 = HEAP32[i11 + 8 >> 2] | 0;
   i3 = HEAP32[i11 + 12 >> 2] | 0;
   i1 = 51476 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i8 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i11 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[12859] = HEAP32[12859] & ~(1 << i4);
    i17 = i11;
    i6 = i10;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i8 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) i7 = i1; else _abort();
   } else i7 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i7 >> 2] = i2;
   i17 = i11;
   i6 = i10;
   break;
  }
  i5 = HEAP32[i11 + 24 >> 2] | 0;
  i3 = HEAP32[i11 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i11 | 0)) {
   i2 = i11 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i9 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i8 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i9 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i11 + 8 >> 2] | 0;
   if (i4 >>> 0 < i8 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i11 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i11 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i9 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5) {
   i1 = HEAP32[i11 + 28 >> 2] | 0;
   i2 = 51740 + (i1 << 2) | 0;
   if ((i11 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i9;
    if (!i9) {
     HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
     i17 = i11;
     i6 = i10;
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) HEAP32[i1 >> 2] = i9; else HEAP32[i5 + 20 >> 2] = i9;
    if (!i9) {
     i17 = i11;
     i6 = i10;
     break;
    }
   }
   i3 = HEAP32[12863] | 0;
   if (i9 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i9 + 24 >> 2] = i5;
   i1 = i11 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i9 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i9;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
    HEAP32[i9 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i9;
    i17 = i11;
    i6 = i10;
    break;
   } else {
    i17 = i11;
    i6 = i10;
   }
  } else {
   i17 = i11;
   i6 = i10;
  }
 } else {
  i17 = i2;
  i6 = i3;
 } while (0);
 i7 = HEAP32[12863] | 0;
 if (i14 >>> 0 < i7 >>> 0) _abort();
 i1 = i14 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 2)) {
  if ((i14 | 0) == (HEAP32[12865] | 0)) {
   i16 = (HEAP32[12862] | 0) + i6 | 0;
   HEAP32[12862] = i16;
   HEAP32[12865] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   if ((i17 | 0) != (HEAP32[12864] | 0)) return;
   HEAP32[12864] = 0;
   HEAP32[12861] = 0;
   return;
  }
  if ((i14 | 0) == (HEAP32[12864] | 0)) {
   i16 = (HEAP32[12861] | 0) + i6 | 0;
   HEAP32[12861] = i16;
   HEAP32[12864] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   HEAP32[i17 + i16 >> 2] = i16;
   return;
  }
  i6 = (i2 & -8) + i6 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i5 = HEAP32[i14 + 24 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   do if ((i3 | 0) == (i14 | 0)) {
    i2 = i14 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i13 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < i7 >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i13 = i1;
     break;
    }
   } else {
    i4 = HEAP32[i14 + 8 >> 2] | 0;
    if (i4 >>> 0 < i7 >>> 0) _abort();
    i1 = i4 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) != (i14 | 0)) _abort();
    i2 = i3 + 8 | 0;
    if ((HEAP32[i2 >> 2] | 0) == (i14 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i2 >> 2] = i4;
     i13 = i3;
     break;
    } else _abort();
   } while (0);
   if (i5 | 0) {
    i1 = HEAP32[i14 + 28 >> 2] | 0;
    i2 = 51740 + (i1 << 2) | 0;
    if ((i14 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i13;
     if (!i13) {
      HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
      break;
     }
    } else {
     if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
     i1 = i5 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i5 + 20 >> 2] = i13;
     if (!i13) break;
    }
    i3 = HEAP32[12863] | 0;
    if (i13 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i13 + 24 >> 2] = i5;
    i1 = i14 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i13 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i13;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
     HEAP32[i13 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i13;
     break;
    }
   }
  } else {
   i2 = HEAP32[i14 + 8 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   i1 = 51476 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i14 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[12859] = HEAP32[12859] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) i12 = i1; else _abort();
   } else i12 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i12 >> 2] = i2;
  } while (0);
  HEAP32[i17 + 4 >> 2] = i6 | 1;
  HEAP32[i17 + i6 >> 2] = i6;
  if ((i17 | 0) == (HEAP32[12864] | 0)) {
   HEAP32[12861] = i6;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i17 + 4 >> 2] = i6 | 1;
  HEAP32[i17 + i6 >> 2] = i6;
 }
 i1 = i6 >>> 3;
 if (i6 >>> 0 < 256) {
  i3 = 51476 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[12859] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
    i15 = i1;
    i16 = i2;
   }
  } else {
   HEAP32[12859] = i2 | i1;
   i15 = i3 + 8 | 0;
   i16 = i3;
  }
  HEAP32[i15 >> 2] = i17;
  HEAP32[i16 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i16;
  HEAP32[i17 + 12 >> 2] = i3;
  return;
 }
 i1 = i6 >>> 8;
 if (i1) if (i6 >>> 0 > 16777215) i3 = 31; else {
  i15 = (i1 + 1048320 | 0) >>> 16 & 8;
  i16 = i1 << i15;
  i14 = (i16 + 520192 | 0) >>> 16 & 4;
  i16 = i16 << i14;
  i3 = (i16 + 245760 | 0) >>> 16 & 2;
  i3 = 14 - (i14 | i15 | i3) + (i16 << i3 >>> 15) | 0;
  i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
 } else i3 = 0;
 i4 = 51740 + (i3 << 2) | 0;
 HEAP32[i17 + 28 >> 2] = i3;
 HEAP32[i17 + 20 >> 2] = 0;
 HEAP32[i17 + 16 >> 2] = 0;
 i1 = HEAP32[12860] | 0;
 i2 = 1 << i3;
 if (!(i1 & i2)) {
  HEAP32[12860] = i1 | i2;
  HEAP32[i4 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i4;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 }
 i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
 i1 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
   i3 = i1;
   i4 = 127;
   break;
  }
  i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if (!i3) {
   i4 = 124;
   break;
  } else {
   i5 = i5 << 1;
   i1 = i3;
  }
 }
 if ((i4 | 0) == 124) {
  if (i2 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
  HEAP32[i2 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i1;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 } else if ((i4 | 0) == 127) {
  i1 = i3 + 8 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i16 = HEAP32[12863] | 0;
  if (!(i2 >>> 0 >= i16 >>> 0 & i3 >>> 0 >= i16 >>> 0)) _abort();
  HEAP32[i2 + 12 >> 2] = i17;
  HEAP32[i1 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i2;
  HEAP32[i17 + 12 >> 2] = i3;
  HEAP32[i17 + 24 >> 2] = 0;
  return;
 }
}

function __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10a_object_sclEc(i19, i1) {
 i19 = i19 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i7 = i20 + 85 | 0;
 i8 = i20 + 84 | 0;
 i10 = i20 + 80 | 0;
 i2 = i20 + 72 | 0;
 i18 = i20 + 76 | 0;
 i13 = i20 + 44 | 0;
 i16 = i20 + 16 | 0;
 i17 = i20;
 i6 = HEAP32[i19 >> 2] | 0;
 i3 = i6 + 40 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i6 + 44 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if ((i4 | 0) == (i1 | 0)) {
  i1 = i6 + 24 | 0;
  HEAP32[i2 >> 2] = i1;
  if (i4 >>> 0 < (HEAP32[i6 + 48 >> 2] | 0) >>> 0) {
   HEAP32[i4 >> 2] = i1;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   STACKTOP = i20;
   return;
  } else {
   __ZNSt3__16vectorIPN5boost13property_tree11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_NS_4lessIS9_EEEENS7_ISD_EEE21__push_back_slow_pathISD_EEvOT_(i3, i2);
   STACKTOP = i20;
   return;
  }
 }
 i4 = HEAP32[i1 + -4 >> 2] | 0;
 HEAP32[i17 >> 2] = 0;
 HEAP32[i17 + 4 >> 2] = 0;
 HEAP32[i17 + 8 >> 2] = 0;
 i15 = i17 + 12 | 0;
 i14 = __Znwj(16) | 0;
 i12 = __Znwj(48) | 0;
 HEAP32[i14 + 4 >> 2] = i12;
 i11 = i12 + 28 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i12 + 32 >> 2] = i11;
 HEAP32[i12 + 36 >> 2] = i11;
 i11 = i12 + 40 | 0;
 HEAP32[i12 + 44 >> 2] = i11;
 HEAP32[i11 >> 2] = i11;
 HEAP32[i14 + 12 >> 2] = 0;
 HEAP32[i15 >> 2] = i14;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i16, i6 + 12 | 0);
 i14 = i16 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i14, i17);
 i11 = i16 + 24 | 0;
 i12 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i12, HEAP32[i15 >> 2] | 0);
 HEAP32[i11 >> 2] = i12;
 HEAP32[i13 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i13 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
 HEAP32[i13 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
 HEAP32[i16 >> 2] = 0;
 HEAP32[i16 + 4 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 i12 = i13 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i12, i14);
 i9 = i13 + 24 | 0;
 i5 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i5, HEAP32[i11 >> 2] | 0);
 HEAP32[i9 >> 2] = i5;
 i4 = HEAP32[i4 + 12 >> 2] | 0;
 i5 = i4 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP8[i7 >> 0] = HEAP8[i8 >> 0] | 0;
 i1 = __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE7insert_INS1_10lvalue_tagEEEPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEERKSI_RS1F_T_(i4 + 8 | 0, i13, i10, i7) | 0;
 if ((i1 | 0) == (HEAP32[i10 >> 2] | 0)) {
  i2 = i1 + 40 | 0;
  i10 = (HEAP32[i5 >> 2] | 0) + 40 | 0;
  HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
  i3 = i1 + 44 | 0;
  HEAP32[i3 >> 2] = i10;
  HEAP32[i10 >> 2] = i2;
  HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = i2;
  i10 = i4 + 12 | 0;
  HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
  if ((i6 | 0) != (HEAP32[i5 >> 2] | 0)) {
   i10 = i6 + 40 | 0;
   HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = HEAP32[i3 >> 2];
   HEAP32[HEAP32[i3 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i3 >> 2] = i10;
   HEAP32[i10 >> 2] = i2;
   HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = i2;
  }
 }
 i6 = i1 + 12 | 0;
 i5 = HEAP32[i9 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 i5 = HEAP32[i11 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
 i5 = HEAP32[i15 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 HEAP32[i18 >> 2] = i6;
 i1 = HEAP32[i19 >> 2] | 0;
 i2 = i1 + 44 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) == (HEAP32[i1 + 48 >> 2] | 0)) __ZNSt3__16vectorIPN5boost13property_tree11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_NS_4lessIS9_EEEENS7_ISD_EEE21__push_back_slow_pathIRKSD_EEvOT_(i1 + 40 | 0, i18); else {
  HEAP32[i3 >> 2] = i6;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
 }
 i1 = HEAP32[i19 >> 2] | 0;
 i2 = i1 + 12 | 0;
 if (!(HEAP8[i2 >> 0] & 1)) {
  HEAP8[i2 + 1 >> 0] = 0;
  HEAP8[i2 >> 0] = 0;
 } else {
  HEAP8[HEAP32[i1 + 20 >> 2] >> 0] = 0;
  HEAP32[i1 + 16 >> 2] = 0;
 }
 STACKTOP = i20;
 return;
}

function __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE13a_literal_valclENS4_11__wrap_iterIPcEESI_(i19, i1, i2) {
 i19 = i19 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i10 = i20 + 93 | 0;
 i11 = i20 + 92 | 0;
 i12 = i20 + 88 | 0;
 i15 = i20 + 60 | 0;
 i16 = i20 + 32 | 0;
 i17 = i20 + 16 | 0;
 i18 = i20;
 i5 = HEAP32[i19 >> 2] | 0;
 i9 = HEAP32[(HEAP32[i5 + 44 >> 2] | 0) + -4 >> 2] | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i1 = i4 - i3 | 0;
 i2 = i3;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i18);
 if (i1 >>> 0 < 11) {
  HEAP8[i18 >> 0] = i1 << 1;
  i1 = i18 + 1 | 0;
 } else {
  i13 = i1 + 16 & -16;
  i14 = __Znwj(i13) | 0;
  HEAP32[i18 + 8 >> 2] = i14;
  HEAP32[i18 >> 2] = i13 | 1;
  HEAP32[i18 + 4 >> 2] = i1;
  i1 = i14;
 }
 if ((i2 | 0) != (i4 | 0)) while (1) {
  HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
  i2 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
  if ((i2 | 0) == (i4 | 0)) break; else i3 = i2;
 }
 HEAP8[i1 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i17, i18);
 i14 = i17 + 12 | 0;
 i13 = __Znwj(16) | 0;
 i8 = __Znwj(48) | 0;
 HEAP32[i13 + 4 >> 2] = i8;
 i7 = i8 + 28 | 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i8 + 32 >> 2] = i7;
 HEAP32[i8 + 36 >> 2] = i7;
 i7 = i8 + 40 | 0;
 HEAP32[i8 + 44 >> 2] = i7;
 HEAP32[i7 >> 2] = i7;
 HEAP32[i13 + 12 >> 2] = 0;
 HEAP32[i14 >> 2] = i13;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i16, i5 + 12 | 0);
 i13 = i16 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i13, i17);
 i7 = i16 + 24 | 0;
 i8 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i8, HEAP32[i14 >> 2] | 0);
 HEAP32[i7 >> 2] = i8;
 HEAP32[i15 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
 HEAP32[i15 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
 HEAP32[i16 >> 2] = 0;
 HEAP32[i16 + 4 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 i8 = i15 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i8, i13);
 i6 = i15 + 24 | 0;
 i3 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i3, HEAP32[i7 >> 2] | 0);
 HEAP32[i6 >> 2] = i3;
 i3 = HEAP32[i9 + 12 >> 2] | 0;
 i4 = i3 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP8[i10 >> 0] = HEAP8[i11 >> 0] | 0;
 i1 = __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE7insert_INS1_10lvalue_tagEEEPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEERKSI_RS1F_T_(i3 + 8 | 0, i15, i12, i10) | 0;
 if ((i1 | 0) == (HEAP32[i12 >> 2] | 0)) {
  i2 = i1 + 40 | 0;
  i12 = (HEAP32[i4 >> 2] | 0) + 40 | 0;
  HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
  i1 = i1 + 44 | 0;
  HEAP32[i1 >> 2] = i12;
  HEAP32[i12 >> 2] = i2;
  HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = i2;
  i12 = i3 + 12 | 0;
  HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 1;
  if ((i5 | 0) != (HEAP32[i4 >> 2] | 0)) {
   i12 = i5 + 40 | 0;
   HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = HEAP32[i1 >> 2];
   HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i1 >> 2] = i12;
   HEAP32[i12 >> 2] = i2;
   HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] = i2;
  }
 }
 i5 = HEAP32[i6 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
 i5 = HEAP32[i7 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
 i5 = HEAP32[i14 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 i1 = HEAP32[i19 >> 2] | 0;
 i2 = i1 + 12 | 0;
 if (!(HEAP8[i2 >> 0] & 1)) {
  HEAP8[i2 + 1 >> 0] = 0;
  HEAP8[i2 >> 0] = 0;
 } else {
  HEAP8[HEAP32[i1 + 20 >> 2] >> 0] = 0;
  HEAP32[i1 + 16 >> 2] = 0;
 }
 i1 = HEAP32[i19 >> 2] | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP8[i1 + 1 >> 0] = 0;
  HEAP8[i1 >> 0] = 0;
  STACKTOP = i20;
  return;
 } else {
  HEAP8[HEAP32[i1 + 8 >> 2] >> 0] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  STACKTOP = i20;
  return;
 }
}

function __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE12a_string_valclENS4_11__wrap_iterIPcEESI_(i15, i1, i2) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i1 = i14 + 77 | 0;
 i6 = i14 + 72 | 0;
 i9 = i14 + 44 | 0;
 i12 = i14 + 16 | 0;
 i13 = i14;
 i11 = HEAP32[i15 >> 2] | 0;
 i3 = HEAP32[(HEAP32[i11 + 44 >> 2] | 0) + -4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i13, i11);
 i10 = i13 + 12 | 0;
 i7 = __Znwj(16) | 0;
 i2 = __Znwj(48) | 0;
 HEAP32[i7 + 4 >> 2] = i2;
 i8 = i2 + 28 | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i2 + 32 >> 2] = i8;
 HEAP32[i2 + 36 >> 2] = i8;
 i8 = i2 + 40 | 0;
 HEAP32[i2 + 44 >> 2] = i8;
 HEAP32[i8 >> 2] = i8;
 HEAP32[i7 + 12 >> 2] = 0;
 HEAP32[i10 >> 2] = i7;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i12, i11 + 12 | 0);
 i11 = i12 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i11, i13);
 i7 = i12 + 24 | 0;
 i8 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i8, HEAP32[i10 >> 2] | 0);
 HEAP32[i7 >> 2] = i8;
 HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i9 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
 HEAP32[i9 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 i8 = i9 + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i8, i11);
 i2 = i9 + 24 | 0;
 i4 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i4, HEAP32[i7 >> 2] | 0);
 HEAP32[i2 >> 2] = i4;
 i3 = HEAP32[i3 + 12 >> 2] | 0;
 i4 = i3 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP8[i1 >> 0] = HEAP8[i14 + 76 >> 0] | 0;
 i1 = __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE7insert_INS1_10lvalue_tagEEEPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEERKSI_RS1F_T_(i3 + 8 | 0, i9, i6, i1) | 0;
 if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
  i6 = i1 + 40 | 0;
  i16 = (HEAP32[i4 >> 2] | 0) + 40 | 0;
  HEAP32[i6 >> 2] = HEAP32[i16 >> 2];
  i1 = i1 + 44 | 0;
  HEAP32[i1 >> 2] = i16;
  HEAP32[i16 >> 2] = i6;
  HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] = i6;
  i3 = i3 + 12 | 0;
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
  if ((i5 | 0) != (HEAP32[i4 >> 2] | 0)) {
   i16 = i5 + 40 | 0;
   HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] = HEAP32[i1 >> 2];
   HEAP32[HEAP32[i1 >> 2] >> 2] = HEAP32[i6 >> 2];
   HEAP32[i6 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i1 >> 2] = i16;
   HEAP32[i16 >> 2] = i6;
   HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] = i6;
  }
 }
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 i5 = HEAP32[i7 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 i5 = HEAP32[i10 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 i1 = HEAP32[i15 >> 2] | 0;
 i2 = i1 + 12 | 0;
 if (!(HEAP8[i2 >> 0] & 1)) {
  HEAP8[i2 + 1 >> 0] = 0;
  HEAP8[i2 >> 0] = 0;
 } else {
  HEAP8[HEAP32[i1 + 20 >> 2] >> 0] = 0;
  HEAP32[i1 + 16 >> 2] = 0;
 }
 i1 = HEAP32[i15 >> 2] | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP8[i1 + 1 >> 0] = 0;
  HEAP8[i1 >> 0] = 0;
  STACKTOP = i14;
  return;
 } else {
  HEAP8[HEAP32[i1 + 8 >> 2] >> 0] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  STACKTOP = i14;
  return;
 }
}

function __ZNK5boost6spirit7classic11alternativeINS2_INS2_INS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSC_ISG_SJ_SG_SN_SO_SP_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES10_EESG_EESG_EESG_E5parseISZ_EENS1_13parser_resultIS14_T_E4typeERKS17_(i14, i13) {
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i16 + 12 | 0;
 i12 = i16;
 i15 = i13 + 4 | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 i9 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
 do if (i2) {
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 31](i2, i13) | 0;
  if ((i1 | 0) < 0) {
   i1 = HEAP32[i15 >> 2] | 0;
   break;
  } else {
   i15 = i1;
   STACKTOP = i16;
   return i15 | 0;
  }
 } while (0);
 HEAP32[i1 >> 2] = i9;
 i4 = HEAP32[i13 >> 2] | 0;
 i8 = HEAP32[i15 >> 2] | 0;
 i2 = i13 + 8 | 0;
 HEAP32[i12 >> 2] = i4;
 HEAP32[i12 + 4 >> 2] = i8;
 HEAP32[i12 + 8 >> 2] = HEAP32[i2 >> 2];
 i5 = i4 + 12 | 0;
 i6 = i4 + 20 | 0;
 i7 = i4 + 24 | 0;
 i1 = i8;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i4, i12) | 0) < 0 ? (HEAP32[i8 >> 2] = i3, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i11, i5, i12, i5, i6, i7) | 0) < 0) : 0) break;
  i1 = HEAP32[i15 >> 2] | 0;
 }
 HEAP32[HEAP32[i15 >> 2] >> 2] = i1;
 i4 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i14 + 4 >> 2] | 0;
 i5 = HEAP32[i14 + 8 >> 2] | 0;
 i6 = i5 - i1 | 0;
 L13 : do if ((i1 | 0) == (i5 | 0)) i10 = 13; else {
  i7 = HEAP32[i15 >> 2] | 0;
  i3 = HEAP32[i7 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i4 | 0)) break L13;
   if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) break L13;
   i1 = i1 + 1 | 0;
   i3 = i3 + 1 | 0;
   HEAP32[i7 >> 2] = i3;
   if ((i1 | 0) == (i5 | 0)) {
    i10 = 13;
    break;
   }
  }
 } while (0);
 if ((i10 | 0) == 13 ? (i6 | 0) >= 0 : 0) {
  i15 = i6;
  STACKTOP = i16;
  return i15 | 0;
 }
 HEAP32[HEAP32[i15 >> 2] >> 2] = i9;
 i4 = HEAP32[i13 >> 2] | 0;
 i8 = HEAP32[i15 >> 2] | 0;
 HEAP32[i12 >> 2] = i4;
 HEAP32[i12 + 4 >> 2] = i8;
 HEAP32[i12 + 8 >> 2] = HEAP32[i2 >> 2];
 i5 = i4 + 12 | 0;
 i6 = i4 + 20 | 0;
 i7 = i4 + 24 | 0;
 i1 = i8;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i4, i12) | 0) < 0 ? (HEAP32[i8 >> 2] = i3, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i11, i5, i12, i5, i6, i7) | 0) < 0) : 0) break;
  i1 = HEAP32[i15 >> 2] | 0;
 }
 HEAP32[HEAP32[i15 >> 2] >> 2] = i1;
 i4 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i14 + 12 >> 2] | 0;
 i5 = HEAP32[i14 + 16 >> 2] | 0;
 i6 = i5 - i1 | 0;
 L29 : do if ((i1 | 0) == (i5 | 0)) i10 = 23; else {
  i7 = HEAP32[i15 >> 2] | 0;
  i3 = HEAP32[i7 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i4 | 0)) {
    i3 = i15;
    i1 = i13;
    break L29;
   }
   if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
    i3 = i15;
    i1 = i13;
    break L29;
   }
   i1 = i1 + 1 | 0;
   i3 = i3 + 1 | 0;
   HEAP32[i7 >> 2] = i3;
   if ((i1 | 0) == (i5 | 0)) {
    i10 = 23;
    break;
   }
  }
 } while (0);
 do if ((i10 | 0) == 23) if ((i6 | 0) < 0) {
  i3 = i15;
  i2 = i13 + 8 | 0;
  i1 = i13;
  break;
 } else {
  i15 = i6;
  STACKTOP = i16;
  return i15 | 0;
 } while (0);
 HEAP32[HEAP32[i15 >> 2] >> 2] = i9;
 i7 = HEAP32[i1 >> 2] | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i12 >> 2] = i7;
 HEAP32[i12 + 4 >> 2] = i6;
 HEAP32[i12 + 8 >> 2] = HEAP32[i2 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i12) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i11, i3, i12, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i15 >> 2] | 0;
 }
 HEAP32[HEAP32[i15 >> 2] >> 2] = i1;
 i6 = HEAP32[i13 + 8 >> 2] | 0;
 i2 = HEAP32[i14 + 20 >> 2] | 0;
 i5 = HEAP32[i14 + 24 >> 2] | 0;
 i1 = i5 - i2 | 0;
 if ((i2 | 0) == (i5 | 0)) {
  i15 = i1;
  STACKTOP = i16;
  return i15 | 0;
 }
 i4 = HEAP32[i15 >> 2] | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i6 | 0)) {
   i1 = -1;
   i10 = 34;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
   i1 = -1;
   i10 = 34;
   break;
  }
  i2 = i2 + 1 | 0;
  i3 = i3 + 1 | 0;
  HEAP32[i4 >> 2] = i3;
  if ((i2 | 0) == (i5 | 0)) {
   i10 = 34;
   break;
  }
 }
 if ((i10 | 0) == 34) {
  STACKTOP = i16;
  return i1 | 0;
 }
 return 0;
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i1, i12, i2, i13, i19, i21, i20, i22, i14, i23) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i19 = i19 | 0;
 i21 = i21 | 0;
 i20 = i20 | 0;
 i22 = i22 | 0;
 i14 = i14 | 0;
 i23 = i23 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i4 = i24 + 108 | 0;
 i8 = i24 + 96 | 0;
 i5 = i24 + 92 | 0;
 i9 = i24 + 80 | 0;
 i16 = i24 + 68 | 0;
 i18 = i24 + 56 | 0;
 i6 = i24 + 52 | 0;
 i10 = i24 + 40 | 0;
 i7 = i24 + 36 | 0;
 i11 = i24 + 24 | 0;
 i15 = i24 + 12 | 0;
 i17 = i24;
 if (i1) {
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54700) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i12) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 63](i4, i3);
   i17 = HEAP32[i4 >> 2] | 0;
   HEAP8[i13 >> 0] = i17;
   HEAP8[i13 + 1 >> 0] = i17 >> 8;
   HEAP8[i13 + 2 >> 0] = i17 >> 16;
   HEAP8[i13 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 32 >> 2] & 63](i8, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i8 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
   i2 = i3;
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 63](i5, i3);
   i17 = HEAP32[i5 >> 2] | 0;
   HEAP8[i13 >> 0] = i17;
   HEAP8[i13 + 1 >> 0] = i17 >> 8;
   HEAP8[i13 + 2 >> 0] = i17 >> 16;
   HEAP8[i13 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i9, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
   i2 = i3;
  }
  HEAP8[i19 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
  HEAP8[i21 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i16, i3);
  if (!(HEAP8[i20 >> 0] & 1)) {
   HEAP8[i20 + 1 >> 0] = 0;
   HEAP8[i20 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i20 + 8 >> 2] >> 0] = 0;
   HEAP32[i20 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i20, 0);
  HEAP32[i20 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i16 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i18, i3);
  if (!(HEAP8[i22 >> 0] & 1)) {
   HEAP8[i22 + 1 >> 0] = 0;
   HEAP8[i22 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i22 + 8 >> 2] >> 0] = 0;
   HEAP32[i22 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i22, 0);
  HEAP32[i22 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i18 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0;
 } else {
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54692) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i12) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 63](i6, i3);
   i18 = HEAP32[i6 >> 2] | 0;
   HEAP8[i13 >> 0] = i18;
   HEAP8[i13 + 1 >> 0] = i18 >> 8;
   HEAP8[i13 + 2 >> 0] = i18 >> 16;
   HEAP8[i13 + 3 >> 0] = i18 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 32 >> 2] & 63](i10, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
   i2 = i3;
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 63](i7, i3);
   i18 = HEAP32[i7 >> 2] | 0;
   HEAP8[i13 >> 0] = i18;
   HEAP8[i13 + 1 >> 0] = i18 >> 8;
   HEAP8[i13 + 2 >> 0] = i18 >> 16;
   HEAP8[i13 + 3 >> 0] = i18 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i11, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i3;
  }
  HEAP8[i19 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
  HEAP8[i21 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i15, i3);
  if (!(HEAP8[i20 >> 0] & 1)) {
   HEAP8[i20 + 1 >> 0] = 0;
   HEAP8[i20 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i20 + 8 >> 2] >> 0] = 0;
   HEAP32[i20 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i20, 0);
  HEAP32[i20 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i17, i3);
  if (!(HEAP8[i22 >> 0] & 1)) {
   HEAP8[i22 + 1 >> 0] = 0;
   HEAP8[i22 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i22 + 8 >> 2] >> 0] = 0;
   HEAP32[i22 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i22, 0);
  HEAP32[i22 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i17 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0;
 }
 HEAP32[i23 >> 2] = i1;
 STACKTOP = i24;
 return;
}

function __ZN13MarchingCubes15polygonize_cubeEfffifRK10callback_t(i30, d24, d25, d26, i28, d27, i29) {
 i30 = i30 | 0;
 d24 = +d24;
 d25 = +d25;
 d26 = +d26;
 i28 = i28 | 0;
 d27 = +d27;
 i29 = i29 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, i16 = 0, d17 = 0.0, i18 = 0, i19 = 0, d20 = 0.0, d21 = 0.0, d22 = 0.0, i23 = 0, i31 = 0, i32 = 0;
 i1 = i28 + 1 | 0;
 i7 = HEAP32[i30 + 16 >> 2] | 0;
 i16 = i7 + i28 | 0;
 i23 = HEAP32[i30 + 20 >> 2] | 0;
 i7 = i7 + i1 | 0;
 i4 = HEAP32[i30 + 24 >> 2] | 0;
 i2 = i4 + i28 | 0;
 i6 = HEAP32[i30 + 28 >> 2] | 0;
 i3 = i6 + i28 | 0;
 i4 = i4 + i1 | 0;
 i5 = i2 + i6 | 0;
 i6 = i6 + i1 | 0;
 i18 = (HEAP32[i30 + 68 >> 2] | 0) + (HEAP32[i30 + 92 >> 2] << 2) | 0;
 i19 = HEAP32[i30 + 84 >> 2] | 0;
 d8 = +HEAPF32[i18 + ((Math_imul(i19, i28) | 0) << 2) >> 2];
 d9 = +HEAPF32[i18 + ((Math_imul(i19, i1) | 0) << 2) >> 2];
 d10 = +HEAPF32[i18 + ((Math_imul(i19, i16) | 0) << 2) >> 2];
 d11 = +HEAPF32[i18 + ((Math_imul(i19, i7) | 0) << 2) >> 2];
 d12 = +HEAPF32[i18 + ((Math_imul(i19, i23 + i28 | 0) | 0) << 2) >> 2];
 d13 = +HEAPF32[i18 + ((Math_imul(i19, i23 + i1 | 0) | 0) << 2) >> 2];
 d14 = +HEAPF32[i18 + ((Math_imul(i19, i16 + i23 | 0) | 0) << 2) >> 2];
 d15 = +HEAPF32[i18 + ((Math_imul(i19, i7 + i23 | 0) | 0) << 2) >> 2];
 i23 = d8 < d27 & 1;
 i23 = d9 < d27 ? i23 | 2 : i23;
 i23 = d10 < d27 ? i23 | 8 : i23;
 i23 = d11 < d27 ? i23 | 4 : i23;
 i23 = d12 < d27 ? i23 | 16 : i23;
 i23 = d13 < d27 ? i23 | 32 : i23;
 i23 = d14 < d27 ? i23 | 128 : i23;
 i23 = d15 < d27 ? i23 | 64 : i23;
 i7 = HEAP32[2536 + (i23 << 2) >> 2] | 0;
 switch (i23 | 0) {
 case 0:
 case 255:
  {
   i30 = 0;
   return i30 | 0;
  }
 default:
  {}
 }
 i16 = i30 + 32 | 0;
 d17 = +HEAPF32[i16 >> 2];
 i18 = i30 + 36 | 0;
 i19 = i30 + 40 | 0;
 d20 = d17 + d24;
 d21 = +HEAPF32[i18 >> 2] + d25;
 d22 = +HEAPF32[i19 >> 2] + d26;
 if (i7 & 1 | 0) {
  i32 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i31 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i32 >> 2] = (d27 - d8) / (d9 - d8) * d17 + d24;
  HEAPF32[i32 + (i31 << 2) >> 2] = d25;
  HEAPF32[i32 + (i31 << 1 << 2) >> 2] = d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) >> 2] = i28 * 3;
 }
 if (i7 & 2 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 3 << 2) >> 2] = d20;
  HEAPF32[i31 + (i32 << 2 << 2) >> 2] = (d27 - d9) / (d11 - d9) * +HEAPF32[i18 >> 2] + d25;
  HEAPF32[i31 + (i32 * 5 << 2) >> 2] = d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + (HEAP32[i30 + 280 >> 2] << 2) >> 2] = (i1 * 3 | 0) + 1;
 }
 if (i7 & 4 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 6 << 2) >> 2] = (d27 - d10) / (d11 - d10) * +HEAPF32[i16 >> 2] + d24;
  HEAPF32[i31 + (i32 * 7 << 2) >> 2] = d21;
  HEAPF32[i31 + (i32 << 3 << 2) >> 2] = d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + (HEAP32[i30 + 280 >> 2] << 1 << 2) >> 2] = i2 * 3;
 }
 if (i7 & 8 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 9 << 2) >> 2] = d24;
  HEAPF32[i31 + (i32 * 10 << 2) >> 2] = (d27 - d8) / (d10 - d8) * +HEAPF32[i18 >> 2] + d25;
  HEAPF32[i31 + (i32 * 11 << 2) >> 2] = d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 3 << 2) >> 2] = (i28 * 3 | 0) + 1;
 }
 if (i7 & 16 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 12 << 2) >> 2] = (d27 - d12) / (d13 - d12) * +HEAPF32[i16 >> 2] + d24;
  HEAPF32[i31 + (i32 * 13 << 2) >> 2] = d25;
  HEAPF32[i31 + (i32 * 14 << 2) >> 2] = d22;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + (HEAP32[i30 + 280 >> 2] << 2 << 2) >> 2] = i3 * 3;
 }
 if (i7 & 32 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 15 << 2) >> 2] = d20;
  HEAPF32[i31 + (i32 << 4 << 2) >> 2] = (d27 - d13) / (d15 - d13) * +HEAPF32[i18 >> 2] + d25;
  HEAPF32[i31 + (i32 * 17 << 2) >> 2] = d22;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 5 << 2) >> 2] = (i6 * 3 | 0) + 1;
 }
 if ((i23 + -64 | 0) >>> 0 < 128) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 18 << 2) >> 2] = (d27 - d14) / (d15 - d14) * +HEAPF32[i16 >> 2] + d24;
  HEAPF32[i31 + (i32 * 19 << 2) >> 2] = d21;
  HEAPF32[i31 + (i32 * 20 << 2) >> 2] = d22;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 6 << 2) >> 2] = i5 * 3;
 }
 if (i7 & 128 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 21 << 2) >> 2] = d24;
  HEAPF32[i31 + (i32 * 22 << 2) >> 2] = (d27 - d12) / (d14 - d12) * +HEAPF32[i18 >> 2] + d25;
  HEAPF32[i31 + (i32 * 23 << 2) >> 2] = d22;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 7 << 2) >> 2] = (i3 * 3 | 0) + 1;
 }
 if (i7 & 256 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 24 << 2) >> 2] = d24;
  HEAPF32[i31 + (i32 * 25 << 2) >> 2] = d25;
  HEAPF32[i31 + (i32 * 26 << 2) >> 2] = (d27 - d8) / (d12 - d8) * +HEAPF32[i19 >> 2] + d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + (HEAP32[i30 + 280 >> 2] << 3 << 2) >> 2] = (i28 * 3 | 0) + 2;
 }
 if (i7 & 512 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 27 << 2) >> 2] = d20;
  HEAPF32[i31 + (i32 * 28 << 2) >> 2] = d25;
  HEAPF32[i31 + (i32 * 29 << 2) >> 2] = (d27 - d9) / (d13 - d9) * +HEAPF32[i19 >> 2] + d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 9 << 2) >> 2] = (i1 * 3 | 0) + 2;
 }
 if (i7 & 1024 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 30 << 2) >> 2] = d20;
  HEAPF32[i31 + (i32 * 31 << 2) >> 2] = d21;
  HEAPF32[i31 + (i32 << 5 << 2) >> 2] = (d27 - d11) / (d15 - d11) * +HEAPF32[i19 >> 2] + d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 10 << 2) >> 2] = (i4 * 3 | 0) + 2;
 }
 if (i7 & 2048 | 0) {
  i31 = (HEAP32[i30 + 168 >> 2] | 0) + (HEAP32[i30 + 192 >> 2] << 2) | 0;
  i32 = HEAP32[i30 + 184 >> 2] | 0;
  HEAPF32[i31 + (i32 * 33 << 2) >> 2] = d24;
  HEAPF32[i31 + (i32 * 34 << 2) >> 2] = d21;
  HEAPF32[i31 + (i32 * 35 << 2) >> 2] = (d27 - d10) / (d14 - d10) * +HEAPF32[i19 >> 2] + d26;
  HEAP32[(HEAP32[i30 + 264 >> 2] | 0) + (HEAP32[i30 + 288 >> 2] << 2) + ((HEAP32[i30 + 280 >> 2] | 0) * 11 << 2) >> 2] = (i2 * 3 | 0) + 2;
 }
 i4 = i23 << 4;
 i1 = HEAP32[3560 + (i4 << 2) >> 2] | 0;
 if ((i1 | 0) == -1) {
  i32 = 0;
  return i32 | 0;
 }
 i5 = i30 + 168 | 0;
 i6 = i30 + 264 | 0;
 i7 = i4;
 i2 = i1;
 i3 = 0;
 i1 = 0;
 do {
  __ZN13MarchingCubes11posnormtrivERN5boost11multi_arrayIfLj1ENSt3__19allocatorIfEEEES6_RNS1_IiLj1ENS3_IiEEEEiiiRK10callback_t(i30, i5, 0, i6, i2 * 3 | 0, (HEAP32[3560 + (i7 + 1 << 2) >> 2] | 0) * 3 | 0, (HEAP32[3560 + (i7 + 2 << 2) >> 2] | 0) * 3 | 0, i29);
  i3 = i3 + 3 | 0;
  i1 = i1 + 1 | 0;
  i7 = i3 + i4 | 0;
  i2 = HEAP32[3560 + (i7 << 2) >> 2] | 0;
 } while ((i2 | 0) != -1);
 return i1 | 0;
}
function __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEbT0_SV_T_(i9, i8, i2) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0;
 switch (i8 - i9 >> 3 | 0) {
 case 2:
  {
   i1 = i8 + -8 | 0;
   if ((HEAP32[i1 >> 2] | 0) >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) {
    i9 = 1;
    return i9 | 0;
   }
   i8 = i9;
   i7 = HEAP32[i8 >> 2] | 0;
   i8 = HEAP32[i8 + 4 >> 2] | 0;
   i5 = i1;
   i6 = HEAP32[i5 + 4 >> 2] | 0;
   HEAP32[i9 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i9 + 4 >> 2] = i6;
   i9 = i1;
   HEAP32[i9 >> 2] = i7;
   HEAP32[i9 + 4 >> 2] = i8;
   i9 = 1;
   return i9 | 0;
  }
 case 3:
  {
   i5 = i9 + 8 | 0;
   i1 = i8 + -8 | 0;
   i8 = HEAP32[i5 >> 2] | 0;
   i2 = (HEAP32[i1 >> 2] | 0) >>> 0 < i8 >>> 0;
   if (i8 >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) {
    if (!i2) {
     i9 = 1;
     return i9 | 0;
    }
    i7 = i5;
    i6 = HEAP32[i7 >> 2] | 0;
    i7 = HEAP32[i7 + 4 >> 2] | 0;
    i3 = i1;
    i4 = HEAP32[i3 + 4 >> 2] | 0;
    i8 = i5;
    HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i8 + 4 >> 2] = i4;
    i8 = i1;
    HEAP32[i8 >> 2] = i6;
    HEAP32[i8 + 4 >> 2] = i7;
    if ((HEAP32[i5 >> 2] | 0) >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) {
     i9 = 1;
     return i9 | 0;
    }
    i8 = i9;
    i7 = HEAP32[i8 >> 2] | 0;
    i8 = HEAP32[i8 + 4 >> 2] | 0;
    i4 = i5;
    i6 = HEAP32[i4 + 4 >> 2] | 0;
    HEAP32[i9 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i9 + 4 >> 2] = i6;
    i9 = i5;
    HEAP32[i9 >> 2] = i7;
    HEAP32[i9 + 4 >> 2] = i8;
    i9 = 1;
    return i9 | 0;
   }
   i4 = i9;
   i3 = HEAP32[i4 >> 2] | 0;
   i4 = HEAP32[i4 + 4 >> 2] | 0;
   if (i2) {
    i7 = i1;
    i8 = HEAP32[i7 + 4 >> 2] | 0;
    HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i9 + 4 >> 2] = i8;
    i9 = i1;
    HEAP32[i9 >> 2] = i3;
    HEAP32[i9 + 4 >> 2] = i4;
    i9 = 1;
    return i9 | 0;
   }
   i7 = i5;
   i8 = HEAP32[i7 + 4 >> 2] | 0;
   HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i9 + 4 >> 2] = i8;
   i9 = i5;
   HEAP32[i9 >> 2] = i3;
   HEAP32[i9 + 4 >> 2] = i4;
   if ((HEAP32[i1 >> 2] | 0) >>> 0 >= i3 >>> 0) {
    i9 = 1;
    return i9 | 0;
   }
   i7 = i1;
   i8 = HEAP32[i7 + 4 >> 2] | 0;
   i9 = i5;
   HEAP32[i9 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i9 + 4 >> 2] = i8;
   i9 = i1;
   HEAP32[i9 >> 2] = i3;
   HEAP32[i9 + 4 >> 2] = i4;
   i9 = 1;
   return i9 | 0;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i9, i9 + 8 | 0, i9 + 16 | 0, i8 + -8 | 0, i2) | 0;
   i9 = 1;
   return i9 | 0;
  }
 case 5:
  {
   i5 = i9 + 8 | 0;
   i6 = i9 + 16 | 0;
   i4 = i9 + 24 | 0;
   i1 = i8 + -8 | 0;
   __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i9, i5, i6, i4, i2) | 0;
   if ((HEAP32[i1 >> 2] | 0) >>> 0 >= (HEAP32[i4 >> 2] | 0) >>> 0) {
    i9 = 1;
    return i9 | 0;
   }
   i7 = i4;
   i3 = HEAP32[i7 >> 2] | 0;
   i7 = HEAP32[i7 + 4 >> 2] | 0;
   i10 = i1;
   i2 = HEAP32[i10 + 4 >> 2] | 0;
   i8 = i4;
   HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i8 + 4 >> 2] = i2;
   i8 = i1;
   HEAP32[i8 >> 2] = i3;
   HEAP32[i8 + 4 >> 2] = i7;
   if ((HEAP32[i4 >> 2] | 0) >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0) {
    i10 = 1;
    return i10 | 0;
   }
   i10 = i6;
   i8 = HEAP32[i10 >> 2] | 0;
   i10 = HEAP32[i10 + 4 >> 2] | 0;
   i3 = i4;
   i2 = HEAP32[i3 >> 2] | 0;
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   i1 = i6;
   HEAP32[i1 >> 2] = i2;
   HEAP32[i1 + 4 >> 2] = i3;
   i1 = i4;
   HEAP32[i1 >> 2] = i8;
   HEAP32[i1 + 4 >> 2] = i10;
   i1 = i2;
   if (i1 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
    i10 = 1;
    return i10 | 0;
   }
   i8 = i5;
   i7 = HEAP32[i8 >> 2] | 0;
   i8 = HEAP32[i8 + 4 >> 2] | 0;
   i10 = i5;
   HEAP32[i10 >> 2] = i2;
   HEAP32[i10 + 4 >> 2] = i3;
   i10 = i6;
   HEAP32[i10 >> 2] = i7;
   HEAP32[i10 + 4 >> 2] = i8;
   if (i1 >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) {
    i10 = 1;
    return i10 | 0;
   }
   i8 = i9;
   i7 = HEAP32[i8 >> 2] | 0;
   i8 = HEAP32[i8 + 4 >> 2] | 0;
   i10 = i9;
   HEAP32[i10 >> 2] = i2;
   HEAP32[i10 + 4 >> 2] = i3;
   i10 = i5;
   HEAP32[i10 >> 2] = i7;
   HEAP32[i10 + 4 >> 2] = i8;
   i10 = 1;
   return i10 | 0;
  }
 case 1:
 case 0:
  {
   i10 = 1;
   return i10 | 0;
  }
 default:
  {
   i6 = i9 + 16 | 0;
   i5 = i9 + 8 | 0;
   i10 = HEAP32[i5 >> 2] | 0;
   i4 = HEAP32[i9 >> 2] | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   i2 = i1 >>> 0 < i10 >>> 0;
   do if (i10 >>> 0 < i4 >>> 0) {
    i4 = i9;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    if (i2) {
     i7 = i6;
     i10 = HEAP32[i7 + 4 >> 2] | 0;
     i1 = i9;
     HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i1 + 4 >> 2] = i10;
     i1 = i6;
     HEAP32[i1 >> 2] = i3;
     HEAP32[i1 + 4 >> 2] = i4;
     i1 = i3;
     break;
    }
    i7 = i5;
    i10 = HEAP32[i7 + 4 >> 2] | 0;
    i2 = i9;
    HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i2 + 4 >> 2] = i10;
    i2 = i5;
    HEAP32[i2 >> 2] = i3;
    HEAP32[i2 + 4 >> 2] = i4;
    i2 = i3;
    if (i1 >>> 0 < i2 >>> 0) {
     i7 = i6;
     i10 = HEAP32[i7 + 4 >> 2] | 0;
     i1 = i5;
     HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i1 + 4 >> 2] = i10;
     i1 = i6;
     HEAP32[i1 >> 2] = i3;
     HEAP32[i1 + 4 >> 2] = i4;
     i1 = i2;
    }
   } else if (i2) {
    i7 = i5;
    i1 = HEAP32[i7 >> 2] | 0;
    i7 = HEAP32[i7 + 4 >> 2] | 0;
    i3 = i6;
    i2 = HEAP32[i3 >> 2] | 0;
    i3 = HEAP32[i3 + 4 >> 2] | 0;
    i10 = i5;
    HEAP32[i10 >> 2] = i2;
    HEAP32[i10 + 4 >> 2] = i3;
    i10 = i6;
    HEAP32[i10 >> 2] = i1;
    HEAP32[i10 + 4 >> 2] = i7;
    if (i2 >>> 0 < i4 >>> 0) {
     i7 = i9;
     i4 = HEAP32[i7 >> 2] | 0;
     i7 = HEAP32[i7 + 4 >> 2] | 0;
     i10 = i9;
     HEAP32[i10 >> 2] = i2;
     HEAP32[i10 + 4 >> 2] = i3;
     i10 = i5;
     HEAP32[i10 >> 2] = i4;
     HEAP32[i10 + 4 >> 2] = i7;
    }
   } while (0);
   i2 = i9 + 24 | 0;
   L13 : do if ((i2 | 0) == (i8 | 0)) {
    i2 = 1;
    i1 = 0;
   } else {
    i3 = i1;
    i1 = 0;
    i7 = i2;
    i2 = i6;
    while (1) {
     i4 = HEAP32[i7 >> 2] | 0;
     i6 = i4;
     if (i4 >>> 0 < i3 >>> 0) {
      i5 = HEAP32[i7 + 4 >> 2] | 0;
      i3 = i7;
      while (1) {
       i12 = i2;
       i11 = HEAP32[i12 + 4 >> 2] | 0;
       i10 = i3;
       HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
       HEAP32[i10 + 4 >> 2] = i11;
       if ((i2 | 0) == (i9 | 0)) {
        i2 = i9;
        break;
       }
       i3 = i2 + -8 | 0;
       if (i4 >>> 0 < (HEAP32[i3 >> 2] | 0) >>> 0) {
        i12 = i2;
        i2 = i3;
        i3 = i12;
       } else break;
      }
      HEAP32[i2 >> 2] = i6;
      HEAP32[i2 + 4 >> 2] = i5;
      i1 = i1 + 1 | 0;
      if ((i1 | 0) == 8) {
       i2 = 0;
       i1 = (i7 + 8 | 0) == (i8 | 0);
       break L13;
      }
     }
     i2 = i7 + 8 | 0;
     if ((i2 | 0) == (i8 | 0)) {
      i2 = 1;
      i1 = 0;
      break L13;
     }
     i12 = i7;
     i3 = HEAP32[i7 >> 2] | 0;
     i7 = i2;
     i2 = i12;
    }
   } while (0);
   i12 = i1 | i2;
   return i12 | 0;
  }
 }
 return 0;
}

function ___intscan(i13, i3, i6, i1, i2) {
 i13 = i13 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 L1 : do if (i3 >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  i2 = 0;
  i1 = 0;
 } else {
  i15 = i13 + 4 | 0;
  i14 = i13 + 100 | 0;
  do {
   i4 = HEAP32[i15 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i4 + 1;
    i4 = HEAPU8[i4 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
  } while ((_isspace(i4) | 0) != 0);
  L11 : do switch (i4 | 0) {
  case 43:
  case 45:
   {
    i5 = ((i4 | 0) == 45) << 31 >> 31;
    i4 = HEAP32[i15 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
     i12 = i5;
     break L11;
    } else {
     i4 = ___shgetc(i13) | 0;
     i12 = i5;
     break L11;
    }
   }
  default:
   i12 = 0;
  } while (0);
  i5 = (i3 | 0) == 0;
  do if ((i3 | 16 | 0) == 16 & (i4 | 0) == 48) {
   i4 = HEAP32[i15 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i4 + 1;
    i4 = HEAPU8[i4 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
   if ((i4 | 32 | 0) != 120) if (i5) {
    i3 = 8;
    i10 = 46;
    break;
   } else {
    i10 = 32;
    break;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i4 = HEAPU8[i3 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
   if ((HEAPU8[46572 + i4 >> 0] | 0) > 15) {
    i1 = (HEAP32[i14 >> 2] | 0) == 0;
    if (!i1) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    if (!i6) {
     ___shlim(i13, 0);
     i2 = 0;
     i1 = 0;
     break L1;
    }
    if (i1) {
     i2 = 0;
     i1 = 0;
     break L1;
    }
    HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    i2 = 0;
    i1 = 0;
    break L1;
   } else {
    i3 = 16;
    i10 = 46;
   }
  } else {
   i3 = i5 ? 10 : i3;
   if ((HEAPU8[46572 + i4 >> 0] | 0) >>> 0 < i3 >>> 0) i10 = 32; else {
    if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    ___shlim(i13, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    i2 = 0;
    i1 = 0;
    break L1;
   }
  } while (0);
  if ((i10 | 0) == 32) if ((i3 | 0) == 10) {
   i3 = i4 + -48 | 0;
   if (i3 >>> 0 < 10) {
    i4 = 0;
    while (1) {
     i5 = (i4 * 10 | 0) + i3 | 0;
     i3 = HEAP32[i15 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i3 + 1;
      i4 = HEAPU8[i3 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i3 = i4 + -48 | 0;
     if (!(i3 >>> 0 < 10 & i5 >>> 0 < 429496729)) {
      i3 = i5;
      break;
     } else i4 = i5;
    }
    i5 = 0;
   } else {
    i3 = 0;
    i5 = 0;
   }
   i6 = i4 + -48 | 0;
   if (i6 >>> 0 < 10) {
    while (1) {
     i7 = ___muldi3(i3 | 0, i5 | 0, 10, 0) | 0;
     i8 = tempRet0;
     i9 = ((i6 | 0) < 0) << 31 >> 31;
     i11 = ~i9;
     if (i8 >>> 0 > i11 >>> 0 | (i8 | 0) == (i11 | 0) & i7 >>> 0 > ~i6 >>> 0) {
      i7 = i3;
      break;
     }
     i3 = _i64Add(i7 | 0, i8 | 0, i6 | 0, i9 | 0) | 0;
     i5 = tempRet0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i6 = i4 + -48 | 0;
     if (!(i6 >>> 0 < 10 & (i5 >>> 0 < 429496729 | (i5 | 0) == 429496729 & i3 >>> 0 < 2576980378))) {
      i7 = i3;
      break;
     }
    }
    if (i6 >>> 0 > 9) {
     i4 = i7;
     i3 = i12;
    } else {
     i3 = 10;
     i10 = 72;
    }
   } else {
    i4 = i3;
    i3 = i12;
   }
  } else i10 = 46;
  L63 : do if ((i10 | 0) == 46) {
   if (!(i3 + -1 & i3)) {
    i10 = HEAP8[46828 + ((i3 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    i5 = HEAP8[46572 + i4 >> 0] | 0;
    i6 = i5 & 255;
    if (i6 >>> 0 < i3 >>> 0) {
     i4 = 0;
     while (1) {
      i7 = i6 | i4 << i10;
      i4 = HEAP32[i15 >> 2] | 0;
      if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
       HEAP32[i15 >> 2] = i4 + 1;
       i4 = HEAPU8[i4 >> 0] | 0;
      } else i4 = ___shgetc(i13) | 0;
      i5 = HEAP8[46572 + i4 >> 0] | 0;
      i6 = i5 & 255;
      if (!(i7 >>> 0 < 134217728 & i6 >>> 0 < i3 >>> 0)) break; else i4 = i7;
     }
     i6 = 0;
    } else {
     i6 = 0;
     i7 = 0;
    }
    i8 = _bitshift64Lshr(-1, -1, i10 | 0) | 0;
    i9 = tempRet0;
    if ((i5 & 255) >>> 0 >= i3 >>> 0 | (i6 >>> 0 > i9 >>> 0 | (i6 | 0) == (i9 | 0) & i7 >>> 0 > i8 >>> 0)) {
     i5 = i6;
     i10 = 72;
     break;
    } else i4 = i6;
    while (1) {
     i7 = _bitshift64Shl(i7 | 0, i4 | 0, i10 | 0) | 0;
     i6 = tempRet0;
     i7 = i5 & 255 | i7;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[46572 + i4 >> 0] | 0;
     if ((i5 & 255) >>> 0 >= i3 >>> 0 | (i6 >>> 0 > i9 >>> 0 | (i6 | 0) == (i9 | 0) & i7 >>> 0 > i8 >>> 0)) {
      i5 = i6;
      i10 = 72;
      break L63;
     } else i4 = i6;
    }
   }
   i5 = HEAP8[46572 + i4 >> 0] | 0;
   i6 = i5 & 255;
   if (i6 >>> 0 < i3 >>> 0) {
    i4 = 0;
    while (1) {
     i7 = i6 + (Math_imul(i4, i3) | 0) | 0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[46572 + i4 >> 0] | 0;
     i6 = i5 & 255;
     if (!(i7 >>> 0 < 119304647 & i6 >>> 0 < i3 >>> 0)) break; else i4 = i7;
    }
    i6 = 0;
   } else {
    i7 = 0;
    i6 = 0;
   }
   if ((i5 & 255) >>> 0 < i3 >>> 0) {
    i10 = ___udivdi3(-1, -1, i3 | 0, 0) | 0;
    i11 = tempRet0;
    i9 = i6;
    while (1) {
     if (i9 >>> 0 > i11 >>> 0 | (i9 | 0) == (i11 | 0) & i7 >>> 0 > i10 >>> 0) {
      i5 = i9;
      i10 = 72;
      break L63;
     }
     i6 = ___muldi3(i7 | 0, i9 | 0, i3 | 0, 0) | 0;
     i8 = tempRet0;
     i5 = i5 & 255;
     if (i8 >>> 0 > 4294967295 | (i8 | 0) == -1 & i6 >>> 0 > ~i5 >>> 0) {
      i5 = i9;
      i10 = 72;
      break L63;
     }
     i7 = _i64Add(i5 | 0, 0, i6 | 0, i8 | 0) | 0;
     i6 = tempRet0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[46572 + i4 >> 0] | 0;
     if ((i5 & 255) >>> 0 >= i3 >>> 0) {
      i5 = i6;
      i10 = 72;
      break;
     } else i9 = i6;
    }
   } else {
    i5 = i6;
    i10 = 72;
   }
  } while (0);
  if ((i10 | 0) == 72) if ((HEAPU8[46572 + i4 >> 0] | 0) >>> 0 < i3 >>> 0) {
   do {
    i4 = HEAP32[i15 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i13) | 0;
   } while ((HEAPU8[46572 + i4 >> 0] | 0) >>> 0 < i3 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   i5 = i2;
   i4 = i1;
   i3 = (i1 & 1 | 0) == 0 & 0 == 0 ? i12 : 0;
  } else {
   i4 = i7;
   i3 = i12;
  }
  if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
  if (!(i5 >>> 0 < i2 >>> 0 | (i5 | 0) == (i2 | 0) & i4 >>> 0 < i1 >>> 0)) {
   if (!((i1 & 1 | 0) != 0 | 0 != 0 | (i3 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    i1 = _i64Add(i1 | 0, i2 | 0, -1, -1) | 0;
    i2 = tempRet0;
    break;
   }
   if (i5 >>> 0 > i2 >>> 0 | (i5 | 0) == (i2 | 0) & i4 >>> 0 > i1 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    break;
   }
  }
  i1 = ((i3 | 0) < 0) << 31 >> 31;
  i1 = _i64Subtract(i4 ^ i3 | 0, i5 ^ i1 | 0, i3 | 0, i1 | 0) | 0;
  i2 = tempRet0;
 } while (0);
 tempRet0 = i2;
 return i1 | 0;
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i1, i11, i2, i12, i18, i20, i19, i21, i13, i22) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i18 = i18 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 i21 = i21 | 0;
 i13 = i13 | 0;
 i22 = i22 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i23 + 108 | 0;
 i7 = i23 + 96 | 0;
 i4 = i23 + 92 | 0;
 i8 = i23 + 80 | 0;
 i15 = i23 + 68 | 0;
 i17 = i23 + 56 | 0;
 i5 = i23 + 52 | 0;
 i9 = i23 + 40 | 0;
 i6 = i23 + 36 | 0;
 i10 = i23 + 24 | 0;
 i14 = i23 + 12 | 0;
 i16 = i23;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54716) | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i11) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 63](i3, i2);
   i16 = HEAP32[i3 >> 2] | 0;
   HEAP8[i12 >> 0] = i16;
   HEAP8[i12 + 1 >> 0] = i16 >> 8;
   HEAP8[i12 + 2 >> 0] = i16 >> 16;
   HEAP8[i12 + 3 >> 0] = i16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i7, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i7 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 63](i4, i2);
   i16 = HEAP32[i4 >> 2] | 0;
   HEAP8[i12 >> 0] = i16;
   HEAP8[i12 + 1 >> 0] = i16 >> 8;
   HEAP8[i12 + 2 >> 0] = i16 >> 16;
   HEAP8[i12 + 3 >> 0] = i16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i8, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i8 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
  }
  HEAP32[i18 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i20 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i17, i2);
  if (!(HEAP8[i21 >> 0] & 1)) HEAP8[i21 >> 0] = 0; else HEAP32[HEAP32[i21 + 8 >> 2] >> 2] = 0;
  HEAP32[i21 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i21, 0);
  HEAP32[i21 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i21 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i21 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i17 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i17);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54708) | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i11) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 63](i5, i2);
   i17 = HEAP32[i5 >> 2] | 0;
   HEAP8[i12 >> 0] = i17;
   HEAP8[i12 + 1 >> 0] = i17 >> 8;
   HEAP8[i12 + 2 >> 0] = i17 >> 16;
   HEAP8[i12 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i9, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 63](i6, i2);
   i17 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = i17;
   HEAP8[i12 + 1 >> 0] = i17 >> 8;
   HEAP8[i12 + 2 >> 0] = i17 >> 16;
   HEAP8[i12 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i10, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  }
  HEAP32[i18 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i20 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i16, i2);
  if (!(HEAP8[i21 >> 0] & 1)) HEAP8[i21 >> 0] = 0; else HEAP32[HEAP32[i21 + 8 >> 2] >> 2] = 0;
  HEAP32[i21 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i21, 0);
  HEAP32[i21 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i21 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
  HEAP32[i21 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i16 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i16);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i22 >> 2] = i1;
 STACKTOP = i23;
 return;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i1, i2, i8, i16, i18, i17, i19, i13, i7, i20) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i21 + 100 | 0;
 i5 = i21 + 88 | 0;
 i9 = i21 + 76 | 0;
 i11 = i21 + 64 | 0;
 i14 = i21 + 52 | 0;
 i4 = i21 + 48 | 0;
 i6 = i21 + 36 | 0;
 i10 = i21 + 24 | 0;
 i12 = i21 + 12 | 0;
 i15 = i21;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54700) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i3, i2);
  i15 = HEAP32[i3 >> 2] | 0;
  HEAP8[i8 >> 0] = i15;
  HEAP8[i8 + 1 >> 0] = i15 >> 8;
  HEAP8[i8 + 2 >> 0] = i15 >> 16;
  HEAP8[i8 + 3 >> 0] = i15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i5, i2);
  if (!(HEAP8[i7 >> 0] & 1)) {
   HEAP8[i7 + 1 >> 0] = 0;
   HEAP8[i7 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i7 + 8 >> 2] >> 0] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i9, i2);
  if (!(HEAP8[i13 >> 0] & 1)) {
   HEAP8[i13 + 1 >> 0] = 0;
   HEAP8[i13 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i13 + 8 >> 2] >> 0] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
  HEAP8[i16 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i18 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54692) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i4, i2);
  i14 = HEAP32[i4 >> 2] | 0;
  HEAP8[i8 >> 0] = i14;
  HEAP8[i8 + 1 >> 0] = i14 >> 8;
  HEAP8[i8 + 2 >> 0] = i14 >> 16;
  HEAP8[i8 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i6, i2);
  if (!(HEAP8[i7 >> 0] & 1)) {
   HEAP8[i7 + 1 >> 0] = 0;
   HEAP8[i7 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i7 + 8 >> 2] >> 0] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i6 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i10, i2);
  if (!(HEAP8[i13 >> 0] & 1)) {
   HEAP8[i13 + 1 >> 0] = 0;
   HEAP8[i13 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i13 + 8 >> 2] >> 0] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  HEAP8[i16 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i18 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i12, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i20 >> 2] = i1;
 STACKTOP = i21;
 return;
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i1, i2, i8, i16, i18, i17, i19, i13, i7, i20) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i21 + 100 | 0;
 i5 = i21 + 88 | 0;
 i9 = i21 + 76 | 0;
 i11 = i21 + 64 | 0;
 i14 = i21 + 52 | 0;
 i4 = i21 + 48 | 0;
 i6 = i21 + 36 | 0;
 i10 = i21 + 24 | 0;
 i12 = i21 + 12 | 0;
 i15 = i21;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54716) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i3, i2);
  i15 = HEAP32[i3 >> 2] | 0;
  HEAP8[i8 >> 0] = i15;
  HEAP8[i8 + 1 >> 0] = i15 >> 8;
  HEAP8[i8 + 2 >> 0] = i15 >> 16;
  HEAP8[i8 + 3 >> 0] = i15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i5, i2);
  if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = 0; else HEAP32[HEAP32[i7 + 8 >> 2] >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i5);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i9, i2);
  if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
  HEAP32[i13 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
  HEAP32[i16 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i11, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) HEAP8[i19 >> 0] = 0; else HEAP32[HEAP32[i19 + 8 >> 2] >> 2] = 0;
  HEAP32[i19 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i14);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 54708) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 63](i4, i2);
  i14 = HEAP32[i4 >> 2] | 0;
  HEAP8[i8 >> 0] = i14;
  HEAP8[i8 + 1 >> 0] = i14 >> 8;
  HEAP8[i8 + 2 >> 0] = i14 >> 16;
  HEAP8[i8 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 63](i6, i2);
  if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = 0; else HEAP32[HEAP32[i7 + 8 >> 2] >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i6 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 63](i10, i2);
  if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
  HEAP32[i13 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  HEAP32[i16 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 63](i12, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 63](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) HEAP8[i19 >> 0] = 0; else HEAP32[HEAP32[i19 + 8 >> 2] >> 2] = 0;
  HEAP32[i19 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i15);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i20 >> 2] = i1;
 STACKTOP = i21;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i17, i18, i19, i15, i20, i16, i1, i14) {
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i20 = i20 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i22 + 16 | 0;
 i9 = i22 + 12 | 0;
 i13 = i22 + 8 | 0;
 i11 = i22 + 4 | 0;
 i12 = i22;
 i2 = __ZNKSt3__18ios_base6getlocEv(i15) | 0;
 HEAP32[i13 >> 2] = i2;
 i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i13, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i20 >> 2] = 0;
 i2 = i1;
 i1 = 0;
 L1 : while (1) {
  i8 = (i2 | 0) != (i14 | 0);
  i3 = i1;
  while (1) {
   i1 = HEAP32[i18 >> 2] | 0;
   if (!(i8 & (i3 | 0) == 0)) break L1;
   i4 = i1;
   if (i1) {
    i3 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i18 >> 2] = 0;
     i1 = 0;
     i4 = 0;
     i7 = 1;
    } else i7 = 0;
   } else {
    i1 = 0;
    i7 = 1;
   }
   i6 = HEAP32[i19 >> 2] | 0;
   i3 = i6;
   do if (i6) {
    i5 = HEAP32[i6 + 12 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i5 = HEAP32[i5 >> 2] | 0;
    if ((i5 | 0) != -1) if (i7) {
     i5 = i6;
     break;
    } else {
     i21 = 18;
     break L1;
    } else {
     HEAP32[i19 >> 2] = 0;
     i3 = 0;
     i21 = 16;
     break;
    }
   } else i21 = 16; while (0);
   if ((i21 | 0) == 16) {
    i21 = 0;
    if (i7) {
     i21 = 18;
     break L1;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i2 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    i7 = i3;
    i21 = 20;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, HEAP32[i2 >> 2] | 0) | 0) {
    i4 = i5;
    i21 = 28;
    break;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i3 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAP32[i4 >> 2] | 0;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 31](i13, i4) | 0;
   if ((i7 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 31](i13, HEAP32[i2 >> 2] | 0) | 0)) {
    i21 = 57;
    break;
   }
   HEAP32[i20 >> 2] = 4;
   i3 = 4;
  }
  L33 : do if ((i21 | 0) == 20) {
   i21 = 0;
   i3 = i2 + 4 | 0;
   if ((i3 | 0) == (i14 | 0)) {
    i21 = 21;
    break L1;
   }
   i6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i3 >> 2] | 0, 0) | 0;
   switch (i6 << 24 >> 24) {
   case 48:
   case 69:
    {
     i5 = i2 + 8 | 0;
     if ((i5 | 0) == (i14 | 0)) {
      i21 = 26;
      break L1;
     }
     i2 = i3;
     i3 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i5 >> 2] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i3 = i6;
     i1 = 0;
    }
   }
   i8 = HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i11 >> 2] = i4;
   HEAP32[i12 >> 2] = i7;
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i18 >> 2] = FUNCTION_TABLE_iiiiiiiii[i8 & 15](i17, i9, i10, i15, i20, i16, i3, i1) | 0;
   i1 = i2 + 8 | 0;
  } else if ((i21 | 0) == 28) {
   i21 = 0;
   do {
    i2 = i2 + 4 | 0;
    if ((i2 | 0) == (i14 | 0)) {
     i2 = i14;
     break;
    }
   } while (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, HEAP32[i2 >> 2] | 0) | 0);
   i3 = i4;
   i6 = i4;
   while (1) {
    if (i1) {
     i4 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) == -1) {
      HEAP32[i18 >> 2] = 0;
      i1 = 0;
      i5 = 1;
     } else i5 = 0;
    } else {
     i1 = 0;
     i5 = 1;
    }
    do if (i6) {
     i4 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) != -1) if (i5 ^ (i3 | 0) == 0) {
      i7 = i3;
      i6 = i3;
      break;
     } else {
      i1 = i2;
      break L33;
     } else {
      HEAP32[i19 >> 2] = 0;
      i3 = 0;
      i21 = 44;
      break;
     }
    } else i21 = 44; while (0);
    if ((i21 | 0) == 44) {
     i21 = 0;
     if (i5) {
      i1 = i2;
      break L33;
     } else {
      i7 = i3;
      i6 = 0;
     }
    }
    i5 = i1 + 12 | 0;
    i3 = HEAP32[i5 >> 2] | 0;
    i4 = i1 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i4 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, i3) | 0)) {
     i1 = i2;
     break L33;
    }
    i3 = HEAP32[i5 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i4 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i5 >> 2] = i3 + 4;
     i3 = i7;
     continue;
    }
   }
  } else if ((i21 | 0) == 57) {
   i21 = 0;
   i4 = HEAP32[i5 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i5 >> 2] = i4 + 4;
   i1 = i2 + 4 | 0;
  } while (0);
  i2 = i1;
  i1 = HEAP32[i20 >> 2] | 0;
 }
 if ((i21 | 0) == 18) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 21) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 26) HEAP32[i20 >> 2] = 4;
 if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAP32[i2 >> 2] | 0;
  if ((i2 | 0) == -1) {
   HEAP32[i18 >> 2] = 0;
   i1 = 0;
   i4 = 1;
  } else i4 = 0;
 } else {
  i1 = 0;
  i4 = 1;
 }
 i2 = HEAP32[i19 >> 2] | 0;
 do if (i2) {
  i3 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
  if ((i2 | 0) != -1) if (i4) break; else {
   i21 = 77;
   break;
  } else {
   HEAP32[i19 >> 2] = 0;
   i21 = 75;
   break;
  }
 } else i21 = 75; while (0);
 if ((i21 | 0) == 75 ? i4 : 0) i21 = 77;
 if ((i21 | 0) == 77) HEAP32[i20 >> 2] = HEAP32[i20 >> 2] | 2;
 STACKTOP = i22;
 return i1 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i18, i19, i20, i16, i21, i17, i1, i15) {
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i16 = i16 | 0;
 i21 = i21 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i9 = i23 + 16 | 0;
 i8 = i23 + 12 | 0;
 i12 = i23 + 8 | 0;
 i10 = i23 + 4 | 0;
 i11 = i23;
 i13 = __ZNKSt3__18ios_base6getlocEv(i16) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 HEAP32[i21 >> 2] = 0;
 i13 = i12 + 8 | 0;
 i2 = i1;
 i1 = 0;
 L1 : while (1) {
  i7 = (i2 | 0) != (i15 | 0);
  i3 = i1;
  while (1) {
   i1 = HEAP32[i19 >> 2] | 0;
   if (!(i7 & (i3 | 0) == 0)) break L1;
   i3 = i1;
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
     HEAP32[i19 >> 2] = 0;
     i3 = 0;
     i1 = 0;
    }
   } else i1 = 0;
   i6 = (i1 | 0) == 0;
   i5 = HEAP32[i20 >> 2] | 0;
   i4 = i5;
   do if (i5) {
    if ((HEAP32[i5 + 12 >> 2] | 0) == (HEAP32[i5 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) == -1 : 0) {
     HEAP32[i20 >> 2] = 0;
     i4 = 0;
     i22 = 13;
     break;
    }
    if (!i6) {
     i22 = 14;
     break L1;
    }
   } else i22 = 13; while (0);
   if ((i22 | 0) == 13) {
    i22 = 0;
    if (i6) {
     i22 = 14;
     break L1;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i2 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    i7 = i4;
    i22 = 16;
    break;
   }
   i3 = HEAP8[i2 >> 0] | 0;
   if (i3 << 24 >> 24 > -1 ? (i14 = HEAP32[i13 >> 2] | 0, HEAP16[i14 + (i3 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    i4 = i14;
    i22 = 25;
    break;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i3 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAPU8[i4 >> 0] | 0;
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, i4 & 255) | 0;
   if (i6 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, HEAP8[i2 >> 0] | 0) | 0) << 24 >> 24) {
    i22 = 53;
    break;
   }
   HEAP32[i21 >> 2] = 4;
   i3 = 4;
  }
  L29 : do if ((i22 | 0) == 16) {
   i22 = 0;
   i4 = i2 + 1 | 0;
   if ((i4 | 0) == (i15 | 0)) {
    i22 = 17;
    break L1;
   }
   i6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i4 >> 0] | 0, 0) | 0;
   switch (i6 << 24 >> 24) {
   case 48:
   case 69:
    {
     i5 = i2 + 2 | 0;
     if ((i5 | 0) == (i15 | 0)) {
      i22 = 22;
      break L1;
     }
     i2 = i4;
     i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i5 >> 0] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i4 = i6;
     i1 = 0;
    }
   }
   i6 = HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i10 >> 2] = i3;
   HEAP32[i11 >> 2] = i7;
   HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i19 >> 2] = FUNCTION_TABLE_iiiiiiiii[i6 & 15](i18, i8, i9, i16, i21, i17, i4, i1) | 0;
   i1 = i2 + 2 | 0;
  } else if ((i22 | 0) == 25) {
   i22 = 0;
   do {
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i15 | 0)) {
     i2 = i15;
     break;
    }
    i3 = HEAP8[i2 >> 0] | 0;
    if (i3 << 24 >> 24 <= -1) break;
   } while ((HEAP16[i4 + (i3 << 24 >> 24 << 1) >> 1] & 8192) != 0);
   i3 = i5;
   while (1) {
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
      HEAP32[i19 >> 2] = 0;
      i1 = 0;
     }
    } else i1 = 0;
    i4 = (i1 | 0) == 0;
    do if (i5) {
     if ((HEAP32[i5 + 12 >> 2] | 0) != (HEAP32[i5 + 16 >> 2] | 0)) if (i4) {
      i7 = i3;
      break;
     } else {
      i1 = i2;
      break L29;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) != -1) if (i4 ^ (i3 | 0) == 0) {
      i7 = i3;
      i5 = i3;
      break;
     } else {
      i1 = i2;
      break L29;
     } else {
      HEAP32[i20 >> 2] = 0;
      i3 = 0;
      i22 = 39;
      break;
     }
    } else i22 = 39; while (0);
    if ((i22 | 0) == 39) {
     i22 = 0;
     if (i4) {
      i1 = i2;
      break L29;
     } else {
      i7 = i3;
      i5 = 0;
     }
    }
    i4 = i1 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i6 = i1 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
    if ((i3 & 255) << 24 >> 24 <= -1) {
     i1 = i2;
     break L29;
    }
    if (!(HEAP16[(HEAP32[i13 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) {
     i1 = i2;
     break L29;
    }
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i4 >> 2] = i3 + 1;
     i3 = i7;
     continue;
    }
   }
  } else if ((i22 | 0) == 53) {
   i22 = 0;
   i4 = HEAP32[i5 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i5 >> 2] = i4 + 1;
   i1 = i2 + 1 | 0;
  } while (0);
  i2 = i1;
  i1 = HEAP32[i21 >> 2] | 0;
 }
 if ((i22 | 0) == 14) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 17) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 22) HEAP32[i21 >> 2] = 4;
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i19 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i2 = (i1 | 0) == 0;
 i3 = HEAP32[i20 >> 2] | 0;
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
   HEAP32[i20 >> 2] = 0;
   i22 = 68;
   break;
  }
  if (!i2) i22 = 69;
 } else i22 = 68; while (0);
 if ((i22 | 0) == 68 ? i2 : 0) i22 = 69;
 if ((i22 | 0) == 69) HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 2;
 STACKTOP = i23;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS4_INS1_6strlitIPKcEENS7_INS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS4_ISM_SO_SM_SS_ST_SU_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES16_EEEES6_SS_ST_NS1_10non_lexemeEEEEEE5parseINS9_ISD_NSE_IS10_S12_S13_EEEEEENS1_13parser_resultIS1C_T_E4typeERKS1H_(i19, i17) {
 i19 = i19 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i14 = i21 + 24 | 0;
 i18 = i21 + 12 | 0;
 i15 = i21;
 i7 = HEAP32[i17 >> 2] | 0;
 i20 = i17 + 4 | 0;
 i6 = HEAP32[i20 >> 2] | 0;
 i16 = i17 + 8 | 0;
 HEAP32[i18 >> 2] = i7;
 HEAP32[i18 + 4 >> 2] = i6;
 HEAP32[i18 + 8 >> 2] = HEAP32[i16 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i18) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i14, i3, i18, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i20 >> 2] | 0;
 }
 HEAP32[HEAP32[i20 >> 2] >> 2] = i1;
 i1 = HEAP32[i20 >> 2] | 0;
 HEAP32[i15 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i15 + 4 >> 2] = i1;
 HEAP32[i15 + 8 >> 2] = HEAP32[i16 >> 2];
 i1 = __ZNK5boost6spirit7classic13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSF_INS1_12space_parserENS2_INS1_6strlitIPKcEENS5_INS1_14anychar_parserEEENSF_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS2_ISK_SM_SK_SQ_SR_SS_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES14_EEEES4_SQ_SR_NS1_10non_lexemeEE5parseIS13_EENS1_13parser_resultIS18_T_E4typeERKS1B_(i19, i15) | 0;
 if ((i1 | 0) < 0) {
  i20 = i1;
  STACKTOP = i21;
  return i20 | 0;
 }
 i10 = i18 + 4 | 0;
 i11 = i18 + 8 | 0;
 i12 = i15 + 4 | 0;
 i13 = i15 + 8 | 0;
 while (1) {
  i4 = HEAP32[i20 >> 2] | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  i5 = HEAP32[i17 >> 2] | 0;
  HEAP32[i18 >> 2] = i5;
  HEAP32[i10 >> 2] = i4;
  HEAP32[i11 >> 2] = HEAP32[i16 >> 2];
  i6 = i5 + 12 | 0;
  i7 = i5 + 20 | 0;
  i8 = i5 + 24 | 0;
  i9 = i2;
  i3 = i2;
  while (1) {
   if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i5, i18) | 0) < 0 ? (HEAP32[i4 >> 2] = i9, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i14, i6, i18, i6, i7, i8) | 0) < 0) : 0) break;
   i9 = HEAP32[i4 >> 2] | 0;
   i3 = HEAP32[HEAP32[i20 >> 2] >> 2] | 0;
  }
  HEAP32[HEAP32[i20 >> 2] >> 2] = i3;
  i3 = HEAP32[i20 >> 2] | 0;
  HEAP32[i15 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i12 >> 2] = i3;
  HEAP32[i13 >> 2] = HEAP32[i16 >> 2];
  i3 = __ZNK5boost6spirit7classic13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSF_INS1_12space_parserENS2_INS1_6strlitIPKcEENS5_INS1_14anychar_parserEEENSF_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS2_ISK_SM_SK_SQ_SR_SS_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES14_EEEES4_SQ_SR_NS1_10non_lexemeEE5parseIS13_EENS1_13parser_resultIS18_T_E4typeERKS1B_(i19, i15) | 0;
  if ((i3 | 0) < 0) break; else i1 = i3 + i1 | 0;
 }
 HEAP32[HEAP32[i20 >> 2] >> 2] = i2;
 i20 = i1;
 STACKTOP = i21;
 return i20 | 0;
}

function __Z14object_factoryNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i5 = i15 + 176 | 0;
 i13 = i15 + 32 | 0;
 i14 = i15;
 i7 = i15 + 16 | 0;
 i10 = i13 + 64 | 0;
 i12 = i13 + 8 | 0;
 HEAP32[i12 >> 2] = 19996;
 i11 = i13 + 12 | 0;
 HEAP32[i13 >> 2] = 20136;
 HEAP32[i10 >> 2] = 20156;
 HEAP32[i13 + 4 >> 2] = 0;
 __ZNSt3__18ios_base4initEPv(i13 + 64 | 0, i11);
 HEAP32[i13 + 136 >> 2] = 0;
 HEAP32[i13 + 140 >> 2] = -1;
 HEAP32[i13 >> 2] = 19976;
 HEAP32[i10 >> 2] = 20016;
 HEAP32[i12 >> 2] = 19996;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i11);
 HEAP32[i11 >> 2] = 20212;
 i12 = i13 + 44 | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 HEAP32[i12 + 12 >> 2] = 0;
 HEAP32[i13 + 60 >> 2] = 24;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i11, i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 i9 = i13 + 8 | 0;
 i6 = HEAP8[i1 >> 0] | 0;
 i8 = (i6 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i9, i8 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i8 ? (i6 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0) | 0;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP32[i14 + 8 >> 2] = 0;
 i6 = i14 + 12 | 0;
 i8 = __Znwj(16) | 0;
 i1 = __Znwj(48) | 0;
 HEAP32[i8 + 4 >> 2] = i1;
 i4 = i1 + 28 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i1 + 32 >> 2] = i4;
 HEAP32[i1 + 36 >> 2] = i4;
 i4 = i1 + 40 | 0;
 HEAP32[i1 + 44 >> 2] = i4;
 HEAP32[i4 >> 2] = i4;
 HEAP32[i8 + 12 >> 2] = 0;
 HEAP32[i6 >> 2] = i8;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 __ZN5boost13property_tree11json_parser18read_json_internalINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEEEvRNS4_13basic_istreamINT_8key_type10value_typeENS6_ISG_EEEERSF_RKSA_(i13, i14, i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i7, i14);
 i5 = i7 + 12 | 0;
 i8 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i8, HEAP32[i6 >> 2] | 0);
 HEAP32[i5 >> 2] = i8;
 i8 = __Z14object_factoryN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEEERb(i7, i2) | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 i5 = HEAP32[i6 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) == (i1 | 0)) {
  i7 = i1;
  __ZdlPv(i7);
  __ZdlPv(i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
  HEAP32[i13 >> 2] = 19976;
  HEAP32[i10 >> 2] = 20016;
  HEAP32[i9 >> 2] = 19996;
  HEAP32[i11 >> 2] = 20212;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i11);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i10);
  STACKTOP = i15;
  return i8 | 0;
 }
 i3 = i5 + 8 | 0;
 while (1) {
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
  __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
  __ZdlPv(i2);
  if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 HEAP32[i13 >> 2] = 19976;
 HEAP32[i10 >> 2] = 20016;
 HEAP32[i9 >> 2] = 19996;
 HEAP32[i11 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i11);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i10);
 STACKTOP = i15;
 return i8 | 0;
}

function __ZN13MarchingCubes11posnormtrivERN5boost11multi_arrayIfLj1ENSt3__19allocatorIfEEEES6_RNS1_IiLj1ENS3_IiEEEEiiiRK10callback_t(i26, i25, i1, i3, i22, i23, i24, i2) {
 i26 = i26 | 0;
 i25 = i25 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0;
 i4 = i26 + 312 | 0;
 i5 = (HEAP32[i4 >> 2] | 0) * 3 | 0;
 i11 = i25 + 24 | 0;
 i28 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i11 >> 2] << 2) | 0;
 i20 = i25 + 16 | 0;
 i29 = HEAP32[i20 >> 2] | 0;
 i6 = HEAP32[i28 + ((Math_imul(i29, i22) | 0) << 2) >> 2] | 0;
 i30 = (HEAP32[i26 + 320 >> 2] | 0) + (HEAP32[i26 + 344 >> 2] << 2) | 0;
 i1 = HEAP32[i26 + 336 >> 2] | 0;
 HEAP32[i30 + ((Math_imul(i1, i5) | 0) << 2) >> 2] = i6;
 i6 = i22 + 1 | 0;
 i7 = i5 + 1 | 0;
 HEAP32[i30 + ((Math_imul(i1, i7) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i6) | 0) << 2) >> 2];
 i8 = i22 + 2 | 0;
 i9 = i5 + 2 | 0;
 HEAP32[i30 + ((Math_imul(i1, i9) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i8) | 0) << 2) >> 2];
 i10 = i5 + 3 | 0;
 HEAP32[i30 + ((Math_imul(i1, i10) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i23) | 0) << 2) >> 2];
 i12 = i23 + 1 | 0;
 i13 = i5 + 4 | 0;
 HEAP32[i30 + ((Math_imul(i1, i13) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i12) | 0) << 2) >> 2];
 i14 = i23 + 2 | 0;
 i15 = i5 + 5 | 0;
 HEAP32[i30 + ((Math_imul(i1, i15) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i14) | 0) << 2) >> 2];
 i16 = i5 + 6 | 0;
 HEAP32[i30 + ((Math_imul(i1, i16) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i24) | 0) << 2) >> 2];
 i17 = i24 + 1 | 0;
 i18 = i5 + 7 | 0;
 HEAP32[i30 + ((Math_imul(i1, i18) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i17) | 0) << 2) >> 2];
 i19 = i24 + 2 | 0;
 i21 = i5 + 8 | 0;
 HEAP32[i30 + ((Math_imul(i1, i21) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i19) | 0) << 2) >> 2];
 i1 = HEAP32[i4 >> 2] | 0;
 i30 = HEAP32[i3 >> 2] | 0;
 i29 = i3 + 24 | 0;
 i28 = i3 + 16 | 0;
 i31 = HEAP32[i30 + (HEAP32[i29 >> 2] << 2) + ((Math_imul(HEAP32[i28 >> 2] | 0, (i22 | 0) / 3 | 0) | 0) << 2) >> 2] | 0;
 i27 = HEAP32[i26 + 416 >> 2] | 0;
 i3 = i26 + 440 | 0;
 i2 = i26 + 432 | 0;
 HEAP32[i27 + (HEAP32[i3 >> 2] << 2) + ((Math_imul(HEAP32[i2 >> 2] | 0, i1) | 0) << 2) >> 2] = i31;
 i31 = HEAP32[i30 + (HEAP32[i29 >> 2] << 2) + ((Math_imul(HEAP32[i28 >> 2] | 0, (i23 | 0) / 3 | 0) | 0) << 2) >> 2] | 0;
 HEAP32[i27 + (HEAP32[i3 >> 2] << 2) + ((Math_imul(HEAP32[i2 >> 2] | 0, i1 + 1 | 0) | 0) << 2) >> 2] = i31;
 i28 = HEAP32[i30 + (HEAP32[i29 >> 2] << 2) + ((Math_imul(HEAP32[i28 >> 2] | 0, (i24 | 0) / 3 | 0) | 0) << 2) >> 2] | 0;
 HEAP32[i27 + (HEAP32[i3 >> 2] << 2) + ((Math_imul(HEAP32[i2 >> 2] | 0, i1 + 2 | 0) | 0) << 2) >> 2] = i28;
 i1 = HEAP16[i26 >> 1] | 0;
 i2 = (i1 & 255) << 24 >> 24 == 0;
 if (!i2) {
  i31 = HEAP32[i4 >> 2] << 1;
  i27 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i11 >> 2] << 2) | 0;
  i28 = HEAP32[i20 >> 2] | 0;
  i3 = HEAP32[i27 + ((Math_imul(i28, i22) | 0) << 2) >> 2] | 0;
  i30 = HEAP32[i26 + 468 >> 2] | 0;
  i29 = (HEAP32[i30 >> 2] | 0) + (HEAP32[i30 + 24 >> 2] << 2) | 0;
  i30 = HEAP32[i30 + 16 >> 2] | 0;
  HEAP32[i29 + ((Math_imul(i30, i31) | 0) << 2) >> 2] = i3;
  HEAP32[i29 + ((Math_imul(i30, i31 | 1) | 0) << 2) >> 2] = HEAP32[i27 + ((Math_imul(i28, i8) | 0) << 2) >> 2];
  HEAP32[i29 + ((Math_imul(i30, i31 + 2 | 0) | 0) << 2) >> 2] = HEAP32[i27 + ((Math_imul(i28, i23) | 0) << 2) >> 2];
  HEAP32[i29 + ((Math_imul(i30, i31 + 3 | 0) | 0) << 2) >> 2] = HEAP32[i27 + ((Math_imul(i28, i14) | 0) << 2) >> 2];
  HEAP32[i29 + ((Math_imul(i30, i31 + 4 | 0) | 0) << 2) >> 2] = HEAP32[i27 + ((Math_imul(i28, i24) | 0) << 2) >> 2];
  HEAP32[i29 + ((Math_imul(i30, i31 + 5 | 0) | 0) << 2) >> 2] = HEAP32[i27 + ((Math_imul(i28, i19) | 0) << 2) >> 2];
 }
 i1 = (i1 & 65535) < 256;
 if (!i1) {
  i28 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i11 >> 2] << 2) | 0;
  i29 = HEAP32[i20 >> 2] | 0;
  i27 = HEAP32[i28 + ((Math_imul(i29, i22) | 0) << 2) >> 2] | 0;
  i31 = HEAP32[i26 + 464 >> 2] | 0;
  i30 = (HEAP32[i31 >> 2] | 0) + (HEAP32[i31 + 24 >> 2] << 2) | 0;
  i31 = HEAP32[i31 + 16 >> 2] | 0;
  HEAP32[i30 + ((Math_imul(i31, i5) | 0) << 2) >> 2] = i27;
  HEAP32[i30 + ((Math_imul(i31, i7) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i6) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i9) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i8) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i10) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i23) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i13) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i12) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i15) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i14) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i16) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i24) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i18) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i17) | 0) << 2) >> 2];
  HEAP32[i30 + ((Math_imul(i31, i21) | 0) << 2) >> 2] = HEAP32[i28 + ((Math_imul(i29, i19) | 0) << 2) >> 2];
 }
 i31 = (HEAP32[i4 >> 2] | 0) + 3 | 0;
 HEAP32[i4 >> 2] = i31;
 if ((i31 | 0) <= 4092) return;
 HEAP8[i26 + 316 >> 0] = 1;
 HEAP8[i26 + 317 >> 0] = 0;
 if (!i2) HEAP8[i26 + 319 >> 0] = 1;
 if (!i1) HEAP8[i26 + 318 >> 0] = 1;
 __ZN13MarchingCubes20flush_geometry_queueERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERiRNS0_6vectorIfNS0_9allocatorIfEEEESB_RNS7_IiNS8_IiEEEERNS0_3mapIiiNS0_4lessIiEENS8_INS0_4pairIKiiEEEEEES6_(i26, 0, i26 + 476 | 0, 0, i26 + 492 | 0, i26 + 504 | 0, i26 + 516 | 0, i26 + 528 | 0);
 return;
}

function __ZN5boost11multi_index6detail23ordered_index_node_implINSt3__19allocatorIcEEE9rebalanceEPS6_NS1_34ordered_index_node_compressed_baseIS5_E10parent_refE(i7, i10) {
 i7 = i7 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i4 = HEAP32[i7 >> 2] & -2;
 HEAP32[i7 >> 2] = i4;
 i6 = HEAP32[i10 >> 2] | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 if ((i1 & -2 | 0) == (i7 | 0)) {
  i10 = i1;
  i10 = i10 & -2;
  i9 = HEAP32[i10 >> 2] | 0;
  i9 = i9 | 1;
  HEAP32[i10 >> 2] = i9;
  return;
 }
 i3 = i4;
 i2 = HEAP32[i3 >> 2] | 0;
 if (!(i2 & 1)) {
  i9 = i3;
  i8 = i3;
  i1 = i4;
  i5 = i4;
 } else {
  i10 = i1;
  i10 = i10 & -2;
  i9 = HEAP32[i10 >> 2] | 0;
  i9 = i9 | 1;
  HEAP32[i10 >> 2] = i9;
  return;
 }
 while (1) {
  i3 = i2 & -2;
  i4 = HEAP32[i3 + 4 >> 2] | 0;
  do if ((i9 | 0) == (i4 | 0)) {
   i3 = HEAP32[i3 + 8 >> 2] | 0;
   if (i3 | 0 ? (HEAP32[i3 >> 2] & 1 | 0) == 0 : 0) {
    HEAP32[i8 >> 2] = i2 | 1;
    HEAP32[i3 >> 2] = HEAP32[i3 >> 2] | 1;
    i9 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
    HEAP32[i9 >> 2] = HEAP32[i9 >> 2] & -2;
    i7 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
    break;
   }
   i3 = i9 + 8 | 0;
   if ((i7 | 0) == (HEAP32[i3 >> 2] | 0)) {
    i4 = i7 + 4 | 0;
    HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
    i3 = HEAP32[i4 >> 2] | 0;
    if (i3) {
     HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & 1 | i5;
     i2 = HEAP32[i8 >> 2] | 0;
     i1 = HEAP32[i7 >> 2] | 0;
    }
    HEAP32[i7 >> 2] = i1 & 1 | i2 & -2;
    i1 = HEAP32[i6 >> 2] | 0;
    do if ((i1 & -2 | 0) != (i9 | 0)) {
     i1 = HEAP32[i8 >> 2] | 0;
     i2 = i1 & -2;
     i3 = i2 + 4 | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i3 >> 2] = i7;
      break;
     } else {
      HEAP32[i2 + 8 >> 2] = i7;
      break;
     }
    } else {
     HEAP32[i6 >> 2] = i1 & 1 | i7;
     i1 = HEAP32[i8 >> 2] | 0;
    } while (0);
    HEAP32[i4 >> 2] = i9;
    i1 = i1 & 1 | i7;
    HEAP32[i8 >> 2] = i1;
    i7 = i9;
    i3 = HEAP32[i10 >> 2] | 0;
   } else i3 = i6;
   i2 = i1 & -2;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
   i2 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] & -2;
   i2 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
   i4 = i2;
   i1 = i4 + 4 | 0;
   i5 = HEAP32[i1 >> 2] | 0;
   i6 = i5 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 | 0) HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & 1 | i2;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & 1 | HEAP32[i4 >> 2] & -2;
   i1 = HEAP32[i3 >> 2] | 0;
   do if ((i1 & -2 | 0) != (i4 | 0)) {
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = i1 & -2;
    i3 = i2 + 8 | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i4 | 0)) {
     HEAP32[i3 >> 2] = i5;
     break;
    } else {
     HEAP32[i2 + 4 >> 2] = i5;
     break;
    }
   } else {
    HEAP32[i3 >> 2] = i1 & 1 | i5;
    i1 = HEAP32[i4 >> 2] | 0;
   } while (0);
   HEAP32[i6 >> 2] = i4;
   HEAP32[i4 >> 2] = i1 & 1 | i5;
  } else {
   if (i4 | 0 ? (HEAP32[i4 >> 2] & 1 | 0) == 0 : 0) {
    HEAP32[i8 >> 2] = i2 | 1;
    HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 1;
    i9 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
    HEAP32[i9 >> 2] = HEAP32[i9 >> 2] & -2;
    i7 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
    break;
   }
   i3 = i9 + 4 | 0;
   if ((i7 | 0) == (HEAP32[i3 >> 2] | 0)) {
    i4 = i7 + 8 | 0;
    HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
    i3 = HEAP32[i4 >> 2] | 0;
    if (i3) {
     HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & 1 | i5;
     i2 = HEAP32[i8 >> 2] | 0;
     i1 = HEAP32[i7 >> 2] | 0;
    }
    HEAP32[i7 >> 2] = i1 & 1 | i2 & -2;
    i1 = HEAP32[i6 >> 2] | 0;
    do if ((i1 & -2 | 0) != (i9 | 0)) {
     i1 = HEAP32[i8 >> 2] | 0;
     i2 = i1 & -2;
     i3 = i2 + 8 | 0;
     if ((HEAP32[i3 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i3 >> 2] = i7;
      break;
     } else {
      HEAP32[i2 + 4 >> 2] = i7;
      break;
     }
    } else {
     HEAP32[i6 >> 2] = i1 & 1 | i7;
     i1 = HEAP32[i8 >> 2] | 0;
    } while (0);
    HEAP32[i4 >> 2] = i9;
    i1 = i1 & 1 | i7;
    HEAP32[i8 >> 2] = i1;
    i7 = i9;
    i3 = HEAP32[i10 >> 2] | 0;
   } else i3 = i6;
   i1 = i1 & -2;
   HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 1;
   i1 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
   HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
   i1 = HEAP32[(HEAP32[i7 >> 2] & -2) >> 2] & -2;
   i4 = i1;
   i2 = i4 + 8 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   i6 = i5 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   i2 = HEAP32[i6 >> 2] | 0;
   if (i2 | 0) HEAP32[i2 >> 2] = HEAP32[i2 >> 2] & 1 | i1;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & 1 | HEAP32[i4 >> 2] & -2;
   i1 = HEAP32[i3 >> 2] | 0;
   do if ((i1 & -2 | 0) != (i4 | 0)) {
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = i1 & -2;
    i3 = i2 + 4 | 0;
    if ((HEAP32[i3 >> 2] | 0) == (i4 | 0)) {
     HEAP32[i3 >> 2] = i5;
     break;
    } else {
     HEAP32[i2 + 8 >> 2] = i5;
     break;
    }
   } else {
    HEAP32[i3 >> 2] = i1 & 1 | i5;
    i1 = HEAP32[i4 >> 2] | 0;
   } while (0);
   HEAP32[i6 >> 2] = i4;
   HEAP32[i4 >> 2] = i1 & 1 | i5;
  } while (0);
  i6 = HEAP32[i10 >> 2] | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if ((i7 | 0) == (i1 & -2 | 0)) {
   i2 = 46;
   break;
  }
  i4 = HEAP32[i7 >> 2] | 0;
  i5 = i4 & -2;
  i3 = i5;
  i2 = HEAP32[i3 >> 2] | 0;
  if (!(i2 & 1)) {
   i9 = i3;
   i8 = i3;
   i1 = i4;
  } else {
   i2 = 46;
   break;
  }
 }
 if ((i2 | 0) == 46) {
  i10 = i1 & -2;
  i9 = HEAP32[i10 >> 2] | 0;
  i9 = i9 | 1;
  HEAP32[i10 >> 2] = i9;
  return;
 }
}

function __ZNK12mp5_implicit13CrispSubtract13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i6, i7, i11) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i13 = i31 + 184 | 0;
 i22 = i31 + 136 | 0;
 i5 = i31 + 128 | 0;
 i27 = i31 + 64 | 0;
 i28 = i31;
 i9 = i7 + 16 | 0;
 i2 = HEAP32[i9 >> 2] | 0;
 HEAP32[i13 + 4 >> 2] = 0;
 HEAP8[i13 + 8 >> 0] = 1;
 HEAP32[i13 + 20 >> 2] = 0;
 HEAP32[i13 + 12 >> 2] = i2;
 HEAP32[i13 + 32 >> 2] = i2;
 i15 = i13 + 16 | 0;
 HEAP32[i15 >> 2] = 1;
 i12 = i13 + 24 | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i13 + 28 >> 2] = 0;
 i3 = i2 << 2;
 i1 = __Znwj(i3) | 0;
 i30 = i13 + 40 | 0;
 HEAP32[i30 >> 2] = i1;
 HEAP32[i13 >> 2] = i1;
 HEAP32[i13 + 44 >> 2] = i2;
 i4 = (i2 | 0) == 0;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 HEAP32[i22 + 4 >> 2] = 0;
 HEAP8[i22 + 8 >> 0] = 1;
 HEAP32[i22 + 20 >> 2] = 0;
 HEAP32[i22 + 12 >> 2] = i2;
 HEAP32[i22 + 32 >> 2] = i2;
 i21 = i22 + 16 | 0;
 HEAP32[i21 >> 2] = 1;
 i14 = i22 + 24 | 0;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i22 + 28 >> 2] = 0;
 i1 = __Znwj(i3) | 0;
 i29 = i22 + 40 | 0;
 HEAP32[i29 >> 2] = i1;
 HEAP32[i22 >> 2] = i1;
 HEAP32[i22 + 44 >> 2] = i2;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 HEAP32[i5 >> 2] = i2;
 HEAP32[i5 + 4 >> 2] = 3;
 HEAP32[i27 >> 2] = 0;
 HEAP32[i27 + 4 >> 2] = 1;
 HEAP32[i27 + 8 >> 2] = 0;
 HEAP8[i27 + 12 >> 0] = 1;
 HEAP8[i27 + 13 >> 0] = 1;
 HEAP32[i27 + 32 >> 2] = 0;
 HEAP32[i27 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i27, i5);
 i25 = HEAP32[i27 + 48 >> 2] | 0;
 i1 = i25 << 2;
 i2 = __Znwj(i1) | 0;
 i26 = i27 + 56 | 0;
 HEAP32[i26 >> 2] = i2;
 HEAP32[i27 >> 2] = i2;
 HEAP32[i27 + 60 >> 2] = i25;
 if (i25 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[i28 >> 2] = 0;
 HEAP32[i28 + 4 >> 2] = 1;
 HEAP32[i28 + 8 >> 2] = 0;
 HEAP8[i28 + 12 >> 0] = 1;
 HEAP8[i28 + 13 >> 0] = 1;
 i3 = i28 + 32 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i28 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i28, i5);
 i24 = HEAP32[i28 + 48 >> 2] | 0;
 i1 = i24 << 2;
 i2 = __Znwj(i1) | 0;
 i25 = i28 + 56 | 0;
 HEAP32[i25 >> 2] = i2;
 HEAP32[i28 >> 2] = i2;
 HEAP32[i28 + 60 >> 2] = i24;
 if (i24 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 i10 = i6 + 4 | 0;
 i8 = HEAP32[i10 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i8 >> 2] >> 2] & 31](i8, i7, i13);
 i8 = i6 + 8 | 0;
 i2 = HEAP32[i8 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i2 >> 2] >> 2] & 31](i2, i7, i22);
 i10 = HEAP32[i10 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] & 31](i10, i7, i27);
 i8 = HEAP32[i8 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i8 >> 2] | 0) + 4 >> 2] & 31](i8, i7, i28);
 i8 = i7 + 32 | 0;
 i10 = HEAP32[i8 >> 2] | 0;
 i9 = HEAP32[i9 >> 2] | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i23 = i28 + 40 | 0;
 i3 = (HEAP32[i28 >> 2] | 0) + (HEAP32[i23 >> 2] << 2) | 0;
 i24 = i28 + 24 | 0;
 i4 = HEAP32[i28 + 16 >> 2] | 0;
 if ((0 - i4 | 0) < 0) {
  i5 = HEAP32[i28 + 28 >> 2] | 0;
  i6 = i5 << 1;
  i1 = HEAP32[i24 >> 2] | 0;
  i7 = i2;
  do {
   i20 = i3 + ((Math_imul(i1, i7) | 0) << 2) | 0;
   HEAPF32[i20 >> 2] = -+HEAPF32[i20 >> 2];
   i20 = i20 + (i5 << 2) | 0;
   HEAPF32[i20 >> 2] = -+HEAPF32[i20 >> 2];
   i20 = i3 + ((Math_imul(i1, i7) | 0) << 2) + (i6 << 2) | 0;
   HEAPF32[i20 >> 2] = -+HEAPF32[i20 >> 2];
   i7 = i7 + 1 | 0;
  } while ((i7 - i2 - i4 | 0) < 0);
  i2 = HEAP32[i8 >> 2] | 0;
 } else i2 = i10;
 i1 = i9 + i10 | 0;
 if ((i2 - i1 | 0) < 0) {
  i18 = (HEAP32[i11 >> 2] | 0) + (HEAP32[i11 + 40 >> 2] << 2) | 0;
  i19 = HEAP32[i11 + 24 >> 2] | 0;
  i20 = i11 + 28 | 0;
  i17 = i11 + 36 | 0;
  i16 = (HEAP32[i13 >> 2] | 0) + (HEAP32[i12 >> 2] << 2) | 0;
  i15 = HEAP32[i15 >> 2] | 0;
  i14 = (HEAP32[i22 >> 2] | 0) + (HEAP32[i14 >> 2] << 2) | 0;
  i11 = HEAP32[i21 >> 2] | 0;
  i12 = i27 + 40 | 0;
  i13 = i27 + 24 | 0;
  i7 = i1 - i2 | 0;
  i10 = 0;
  do {
   i8 = i18 + ((Math_imul(i19, i10) | 0) << 2) | 0;
   d32 = +HEAPF32[i16 + ((Math_imul(i15, i10) | 0) << 2) >> 2];
   if (d32 < -+HEAPF32[i14 + ((Math_imul(i11, i10) | 0) << 2) >> 2]) {
    i1 = i27;
    i6 = (HEAP32[i27 >> 2] | 0) + (HEAP32[i12 >> 2] << 2) + ((Math_imul(HEAP32[i13 >> 2] | 0, i10) | 0) << 2) | 0;
   } else {
    i1 = i28;
    i6 = (HEAP32[i28 >> 2] | 0) + (HEAP32[i23 >> 2] << 2) + ((Math_imul(HEAP32[i24 >> 2] | 0, i10) | 0) << 2) | 0;
   }
   i3 = HEAP32[i1 + 36 >> 2] | 0;
   i22 = HEAP32[i1 + 20 >> 2] | 0;
   i9 = i22 + i3 | 0;
   if (i22 | 0) {
    i4 = HEAP32[i1 + 28 >> 2] | 0;
    i5 = HEAP32[i20 >> 2] | 0;
    i2 = HEAP32[i17 >> 2] | 0;
    i1 = i3;
    while (1) {
     HEAP32[i8 + ((Math_imul(i2, i5) | 0) << 2) >> 2] = HEAP32[i6 + ((Math_imul(i1, i4) | 0) << 2) >> 2];
     i1 = i1 + 1 | 0;
     if ((i1 | 0) == (i9 | 0)) break; else i2 = i2 + 1 | 0;
    }
   }
   i10 = i10 + 1 | 0;
  } while ((i10 | 0) != (i7 | 0));
 }
 i1 = HEAP32[i25 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i26 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i29 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i30 >> 2] | 0;
 if (!i1) {
  STACKTOP = i31;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i31;
 return;
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i31, i33, i32, i30, i1, i19, i18, i23, i24, i20, i27, i22, i26, i25, i21) {
 i31 = i31 | 0;
 i33 = i33 | 0;
 i32 = i32 | 0;
 i30 = i30 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 i27 = i27 | 0;
 i22 = i22 | 0;
 i26 = i26 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i28 = 0, i29 = 0, i34 = 0;
 HEAP32[i32 >> 2] = i31;
 i28 = i25 + 4 | 0;
 i29 = i25 + 8 | 0;
 i11 = i26 + 4 | 0;
 i12 = (i30 & 512 | 0) == 0;
 i13 = i26 + 8 | 0;
 i14 = (i21 | 0) > 0;
 i15 = i22 + 4 | 0;
 i16 = i22 + 8 | 0;
 i17 = i22 + 1 | 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 4) break;
  L4 : do switch (HEAP8[i24 + i10 >> 0] | 0) {
  case 0:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 32) | 0;
    i9 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = i9 + 4;
    HEAP32[i9 >> 2] = i8;
    break;
   }
  case 3:
   {
    i9 = HEAP8[i25 >> 0] | 0;
    i2 = (i9 & 1) == 0;
    if ((i2 ? (i9 & 255) >>> 1 : HEAP32[i28 >> 2] | 0) | 0) {
     i8 = HEAP32[(i2 ? i28 : HEAP32[i29 >> 2] | 0) >> 2] | 0;
     i9 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i9 + 4;
     HEAP32[i9 >> 2] = i8;
    }
    break;
   }
  case 2:
   {
    i6 = HEAP8[i26 >> 0] | 0;
    i2 = (i6 & 1) == 0;
    i6 = i2 ? (i6 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
    if (!(i12 | (i6 | 0) == 0)) {
     i5 = i2 ? i11 : HEAP32[i13 >> 2] | 0;
     i3 = i5 + (i6 << 2) | 0;
     i4 = HEAP32[i32 >> 2] | 0;
     i2 = i4;
     while (1) {
      if ((i5 | 0) == (i3 | 0)) break;
      HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
      i2 = i2 + 4 | 0;
      i5 = i5 + 4 | 0;
     }
     HEAP32[i32 >> 2] = i4 + (i6 << 2);
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i32 >> 2] | 0;
    i1 = i23 ? i1 + 4 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i19 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 12 >> 2] & 31](i18, 2048, HEAP32[i2 >> 2] | 0) | 0)) break;
     i2 = i2 + 4 | 0;
    }
    if (i14) {
     i6 = i21;
     while (1) {
      i4 = (i6 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i9 = i2 + -4 | 0;
      i7 = HEAP32[i9 >> 2] | 0;
      i8 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i8 + 4;
      HEAP32[i8 >> 2] = i7;
      i2 = i9;
      i6 = i6 + -1 | 0;
     }
     if (i4) i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 48) | 0; else i7 = 0;
     i5 = HEAP32[i32 >> 2] | 0;
     while (1) {
      i4 = i5 + 4 | 0;
      if ((i6 | 0) <= 0) break;
      HEAP32[i5 >> 2] = i7;
      i5 = i4;
      i6 = i6 + -1 | 0;
     }
     HEAP32[i32 >> 2] = i4;
     HEAP32[i5 >> 2] = i20;
    }
    if ((i2 | 0) == (i1 | 0)) {
     i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 48) | 0;
     i9 = HEAP32[i32 >> 2] | 0;
     i2 = i9 + 4 | 0;
     HEAP32[i32 >> 2] = i2;
     HEAP32[i9 >> 2] = i8;
    } else {
     i8 = HEAP8[i22 >> 0] | 0;
     i4 = (i8 & 1) == 0;
     i9 = HEAP32[i15 >> 2] | 0;
     if (!((i4 ? (i8 & 255) >>> 1 : i9) | 0)) {
      i7 = -1;
      i6 = 0;
      i8 = 0;
     } else {
      i7 = HEAP8[(i4 ? i17 : HEAP32[i16 >> 2] | 0) >> 0] | 0;
      i6 = 0;
      i8 = 0;
     }
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i4 = HEAP32[i32 >> 2] | 0;
      if ((i8 | 0) == (i7 | 0)) {
       i5 = i4 + 4 | 0;
       HEAP32[i32 >> 2] = i5;
       HEAP32[i4 >> 2] = i27;
       i6 = i6 + 1 | 0;
       i7 = HEAP8[i22 >> 0] | 0;
       i4 = (i7 & 1) == 0;
       if (i6 >>> 0 < (i4 ? (i7 & 255) >>> 1 : i9) >>> 0) {
        i7 = HEAP8[(i4 ? i17 : HEAP32[i16 >> 2] | 0) + i6 >> 0] | 0;
        i4 = i5;
        i7 = i7 << 24 >> 24 == 127 ? -1 : i7 << 24 >> 24;
        i5 = 0;
       } else {
        i4 = i5;
        i7 = i8;
        i5 = 0;
       }
      } else i5 = i8;
      i8 = i2 + -4 | 0;
      i34 = HEAP32[i8 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 4;
      HEAP32[i4 >> 2] = i34;
      i2 = i8;
      i8 = i5 + 1 | 0;
     }
     i2 = HEAP32[i32 >> 2] | 0;
    }
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -4 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i34 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i2 >> 2] = i34;
     i3 = i3 + 4 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i10 = i10 + 1 | 0;
 }
 i2 = HEAP8[i25 >> 0] | 0;
 i1 = (i2 & 1) == 0;
 i2 = i1 ? (i2 & 255) >>> 1 : HEAP32[i28 >> 2] | 0;
 if (i2 >>> 0 > 1) {
  i3 = i1 ? i28 : HEAP32[i29 >> 2] | 0;
  i5 = i3 + 4 | 0;
  i2 = i3 + (i2 << 2) | 0;
  i3 = HEAP32[i32 >> 2] | 0;
  i4 = i2 - i5 | 0;
  i1 = i3;
  while (1) {
   if ((i5 | 0) == (i2 | 0)) break;
   HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
   i1 = i1 + 4 | 0;
   i5 = i5 + 4 | 0;
  }
  HEAP32[i32 >> 2] = i3 + (i4 >>> 2 << 2);
 }
 switch (i30 & 176 | 0) {
 case 32:
  {
   HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i33 >> 2] = i31;
 }
 return;
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i31, i33, i32, i30, i1, i18, i17, i22, i23, i19, i26, i21, i25, i24, i20) {
 i31 = i31 | 0;
 i33 = i33 | 0;
 i32 = i32 | 0;
 i30 = i30 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i19 = i19 | 0;
 i26 = i26 | 0;
 i21 = i21 | 0;
 i25 = i25 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i27 = 0, i28 = 0, i29 = 0, i34 = 0, i35 = 0, i36 = 0;
 HEAP32[i32 >> 2] = i31;
 i27 = i24 + 4 | 0;
 i28 = i24 + 8 | 0;
 i29 = i24 + 1 | 0;
 i11 = i25 + 4 | 0;
 i12 = (i30 & 512 | 0) == 0;
 i13 = i25 + 8 | 0;
 i14 = i25 + 1 | 0;
 i15 = i17 + 8 | 0;
 i16 = (i20 | 0) > 0;
 i8 = i21 + 4 | 0;
 i9 = i21 + 8 | 0;
 i10 = i21 + 1 | 0;
 i7 = 0;
 while (1) {
  if ((i7 | 0) == 4) break;
  L4 : do switch (HEAP8[i23 + i7 >> 0] | 0) {
  case 0:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 32) | 0;
    i6 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = i6 + 1;
    HEAP8[i6 >> 0] = i5;
    break;
   }
  case 3:
   {
    i6 = HEAP8[i24 >> 0] | 0;
    i2 = (i6 & 1) == 0;
    if ((i2 ? (i6 & 255) >>> 1 : HEAP32[i27 >> 2] | 0) | 0) {
     i5 = HEAP8[(i2 ? i29 : HEAP32[i28 >> 2] | 0) >> 0] | 0;
     i6 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i6 + 1;
     HEAP8[i6 >> 0] = i5;
    }
    break;
   }
  case 2:
   {
    i3 = HEAP8[i25 >> 0] | 0;
    i2 = (i3 & 1) == 0;
    i3 = i2 ? (i3 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
    if (!(i12 | (i3 | 0) == 0)) {
     i6 = i2 ? i14 : HEAP32[i13 >> 2] | 0;
     i4 = i6 + i3 | 0;
     i2 = HEAP32[i32 >> 2] | 0;
     i3 = i6;
     while (1) {
      if ((i3 | 0) == (i4 | 0)) break;
      HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
      i2 = i2 + 1 | 0;
      i3 = i3 + 1 | 0;
     }
     HEAP32[i32 >> 2] = i2;
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i32 >> 2] | 0;
    i1 = i22 ? i1 + 1 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i18 >>> 0) break;
     i4 = HEAP8[i2 >> 0] | 0;
     if (i4 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[i15 >> 2] | 0) + (i4 << 24 >> 24 << 1) >> 1] & 2048)) break;
     i2 = i2 + 1 | 0;
    }
    if (i16) {
     i5 = i20;
     while (1) {
      i4 = (i5 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i6 = i2 + -1 | 0;
      i34 = HEAP8[i6 >> 0] | 0;
      i4 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 1;
      HEAP8[i4 >> 0] = i34;
      i2 = i6;
      i5 = i5 + -1 | 0;
     }
     if (i4) i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 48) | 0; else i6 = 0;
     while (1) {
      i4 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 1;
      if ((i5 | 0) <= 0) break;
      HEAP8[i4 >> 0] = i6;
      i5 = i5 + -1 | 0;
     }
     HEAP8[i4 >> 0] = i19;
    }
    L35 : do if ((i2 | 0) == (i1 | 0)) {
     i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 48) | 0;
     i34 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i34 + 1;
     HEAP8[i34 >> 0] = i6;
    } else {
     i34 = HEAP8[i21 >> 0] | 0;
     i4 = (i34 & 1) == 0;
     if (!((i4 ? (i34 & 255) >>> 1 : HEAP32[i8 >> 2] | 0) | 0)) {
      i4 = -1;
      i5 = 0;
      i6 = 0;
     } else {
      i4 = HEAP8[(i4 ? i10 : HEAP32[i9 >> 2] | 0) >> 0] | 0;
      i5 = 0;
      i6 = 0;
     }
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break L35;
      if ((i6 | 0) == (i4 | 0)) {
       i34 = HEAP32[i32 >> 2] | 0;
       HEAP32[i32 >> 2] = i34 + 1;
       HEAP8[i34 >> 0] = i26;
       i5 = i5 + 1 | 0;
       i34 = HEAP8[i21 >> 0] | 0;
       i4 = (i34 & 1) == 0;
       if (i5 >>> 0 < (i4 ? (i34 & 255) >>> 1 : HEAP32[i8 >> 2] | 0) >>> 0) {
        i4 = HEAP8[(i4 ? i10 : HEAP32[i9 >> 2] | 0) + i5 >> 0] | 0;
        i4 = i4 << 24 >> 24 == 127 ? -1 : i4 << 24 >> 24;
        i6 = 0;
       } else {
        i4 = i6;
        i6 = 0;
       }
      }
      i34 = i2 + -1 | 0;
      i36 = HEAP8[i34 >> 0] | 0;
      i35 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i35 + 1;
      HEAP8[i35 >> 0] = i36;
      i2 = i34;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i2 = HEAP32[i32 >> 2] | 0;
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -1 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i36 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i36;
     i3 = i3 + 1 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i7 = i7 + 1 | 0;
 }
 i1 = HEAP8[i24 >> 0] | 0;
 i2 = (i1 & 1) == 0;
 i1 = i2 ? (i1 & 255) >>> 1 : HEAP32[i27 >> 2] | 0;
 if (i1 >>> 0 > 1) {
  i2 = i2 ? i29 : HEAP32[i28 >> 2] | 0;
  i3 = i2 + i1 | 0;
  i1 = HEAP32[i32 >> 2] | 0;
  while (1) {
   i2 = i2 + 1 | 0;
   if ((i2 | 0) == (i3 | 0)) break;
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i32 >> 2] = i1;
 }
 switch (i30 & 176 | 0) {
 case 32:
  {
   HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i33 >> 2] = i31;
 }
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i16, i17, i1, i19, i15, i18, i14) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i22;
 i4 = (i19 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i20 = i3;
   i2 = i3;
  }
 } else {
  i20 = 0;
  i2 = i3;
 }
 i7 = i1;
 i3 = 0;
 i6 = i2;
 while (1) {
  if ((i7 | 0) == (i19 | 0)) break;
  i5 = HEAP8[i7 >> 0] | 0;
  if (!(i5 & 1)) i5 = (i5 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
  if (!i5) {
   HEAP8[i6 >> 0] = 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + -1 | 0;
  } else HEAP8[i6 >> 0] = 1;
  i7 = i7 + 12 | 0;
  i6 = i6 + 1 | 0;
 }
 i13 = 0;
 i10 = i3;
 i8 = i4;
 L17 : while (1) {
  i3 = HEAP32[i16 >> 2] | 0;
  do if (i3) {
   i4 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == -1) {
    HEAP32[i16 >> 2] = 0;
    i6 = 1;
    break;
   } else {
    i6 = (HEAP32[i16 >> 2] | 0) == 0;
    break;
   }
  } else i6 = 1; while (0);
  i5 = HEAP32[i17 >> 2] | 0;
  if (i5) {
   i3 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = HEAP32[i3 >> 2] | 0;
   if ((i3 | 0) == -1) {
    HEAP32[i17 >> 2] = 0;
    i5 = 0;
    i3 = 1;
   } else i3 = 0;
  } else {
   i5 = 0;
   i3 = 1;
  }
  i4 = HEAP32[i16 >> 2] | 0;
  if (!((i8 | 0) != 0 & (i6 ^ i3))) break;
  i3 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 31](i15, i3) | 0;
  i12 = i13 + 1 | 0;
  i7 = 0;
  i9 = i1;
  i11 = i8;
  i8 = i2;
  while (1) {
   if ((i9 | 0) == (i19 | 0)) break;
   do if ((HEAP8[i8 >> 0] | 0) == 1) {
    if (!(HEAP8[i9 >> 0] & 1)) i4 = i9 + 4 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
    i4 = HEAP32[i4 + (i13 << 2) >> 2] | 0;
    if (!i14) i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 31](i15, i4) | 0;
    if ((i3 | 0) != (i4 | 0)) {
     HEAP8[i8 >> 0] = 0;
     i4 = i7;
     i5 = i10;
     i6 = i11 + -1 | 0;
     break;
    }
    i4 = HEAP8[i9 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i9 + 4 >> 2] | 0;
    if ((i4 | 0) == (i12 | 0)) {
     HEAP8[i8 >> 0] = 2;
     i4 = 1;
     i5 = i10 + 1 | 0;
     i6 = i11 + -1 | 0;
    } else {
     i4 = 1;
     i5 = i10;
     i6 = i11;
    }
   } else {
    i4 = i7;
    i5 = i10;
    i6 = i11;
   } while (0);
   i7 = i4;
   i9 = i9 + 12 | 0;
   i10 = i5;
   i11 = i6;
   i8 = i8 + 1 | 0;
  }
  if (!i7) {
   i13 = i12;
   i8 = i11;
   continue;
  }
  i3 = HEAP32[i16 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else HEAP32[i4 >> 2] = i5 + 4;
  if ((i10 + i11 | 0) >>> 0 > 1) {
   i6 = i1;
   i3 = i10;
   i5 = i2;
  } else {
   i13 = i12;
   i8 = i11;
   continue;
  }
  while (1) {
   if ((i6 | 0) == (i19 | 0)) {
    i13 = i12;
    i10 = i3;
    i8 = i11;
    continue L17;
   }
   if ((HEAP8[i5 >> 0] | 0) == 2) {
    i4 = HEAP8[i6 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i6 + 4 >> 2] | 0;
    if ((i4 | 0) != (i12 | 0)) {
     HEAP8[i5 >> 0] = 0;
     i3 = i3 + -1 | 0;
    }
   }
   i6 = i6 + 12 | 0;
   i5 = i5 + 1 | 0;
  }
 }
 do if (i4) {
  i3 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if ((i3 | 0) == -1) {
   HEAP32[i16 >> 2] = 0;
   i4 = 1;
   break;
  } else {
   i4 = (HEAP32[i16 >> 2] | 0) == 0;
   break;
  }
 } else i4 = 1; while (0);
 do if (i5) {
  i3 = HEAP32[i5 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if ((i3 | 0) != -1) if (i4) break; else {
   i21 = 77;
   break;
  } else {
   HEAP32[i17 >> 2] = 0;
   i21 = 41;
   break;
  }
 } else i21 = 41; while (0);
 if ((i21 | 0) == 41) if (i4) i21 = 77;
 if ((i21 | 0) == 77) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i19 | 0)) {
   i21 = 81;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i21 | 0) == 81) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i19;
 }
 _free(i20);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function _try_realloc_chunk(i14, i13) {
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = i14 + 4 | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 i1 = i12 & -8;
 i8 = i14 + i1 | 0;
 i6 = HEAP32[12863] | 0;
 i2 = i12 & 3;
 if (!((i2 | 0) != 1 & i14 >>> 0 >= i6 >>> 0 & i14 >>> 0 < i8 >>> 0)) _abort();
 i3 = HEAP32[i8 + 4 >> 2] | 0;
 if (!(i3 & 1)) _abort();
 if (!i2) {
  if (i13 >>> 0 < 256) {
   i14 = 0;
   return i14 | 0;
  }
  if (i1 >>> 0 >= (i13 + 4 | 0) >>> 0 ? (i1 - i13 | 0) >>> 0 <= HEAP32[12979] << 1 >>> 0 : 0) return i14 | 0;
  i14 = 0;
  return i14 | 0;
 }
 if (i1 >>> 0 >= i13 >>> 0) {
  i1 = i1 - i13 | 0;
  if (i1 >>> 0 <= 15) return i14 | 0;
  i10 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i10 + 4 >> 2] = i1 | 3;
  i13 = i10 + i1 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i10, i1);
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[12865] | 0)) {
  i1 = (HEAP32[12862] | 0) + i1 | 0;
  if (i1 >>> 0 <= i13 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i10 = i1 - i13 | 0;
  i9 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 1;
  HEAP32[12865] = i9;
  HEAP32[12862] = i10;
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[12864] | 0)) {
  i2 = (HEAP32[12861] | 0) + i1 | 0;
  if (i2 >>> 0 < i13 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i1 = i2 - i13 | 0;
  if (i1 >>> 0 > 15) {
   i2 = i14 + i13 | 0;
   i10 = i2 + i1 | 0;
   HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
   HEAP32[i2 + 4 >> 2] = i1 | 1;
   HEAP32[i10 >> 2] = i1;
   i13 = i10 + 4 | 0;
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] & -2;
  } else {
   HEAP32[i11 >> 2] = i12 & 1 | i2 | 2;
   i2 = i14 + i2 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
   i2 = 0;
   i1 = 0;
  }
  HEAP32[12861] = i1;
  HEAP32[12864] = i2;
  return i14 | 0;
 }
 if (i3 & 2 | 0) {
  i14 = 0;
  return i14 | 0;
 }
 i9 = (i3 & -8) + i1 | 0;
 if (i9 >>> 0 < i13 >>> 0) {
  i14 = 0;
  return i14 | 0;
 }
 i10 = i9 - i13 | 0;
 i4 = i3 >>> 3;
 do if (i3 >>> 0 >= 256) {
  i5 = HEAP32[i8 + 24 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i8 | 0)) {
   i2 = i8 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i7 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i6 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i7 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   if (i4 >>> 0 < i6 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i8 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i8 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i7 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5 | 0) {
   i1 = HEAP32[i8 + 28 >> 2] | 0;
   i2 = 51740 + (i1 << 2) | 0;
   if ((i8 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i7;
    if (!i7) {
     HEAP32[12860] = HEAP32[12860] & ~(1 << i1);
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) HEAP32[i1 >> 2] = i7; else HEAP32[i5 + 20 >> 2] = i7;
    if (!i7) break;
   }
   i3 = HEAP32[12863] | 0;
   if (i7 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i7 + 24 >> 2] = i5;
   i1 = i8 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i7 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i7;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1 | 0) if (i1 >>> 0 < (HEAP32[12863] | 0) >>> 0) _abort(); else {
    HEAP32[i7 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i7;
    break;
   }
  }
 } else {
  i2 = HEAP32[i8 + 8 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  i1 = 51476 + (i4 << 1 << 2) | 0;
  if ((i2 | 0) != (i1 | 0)) {
   if (i2 >>> 0 < i6 >>> 0) _abort();
   if ((HEAP32[i2 + 12 >> 2] | 0) != (i8 | 0)) _abort();
  }
  if ((i3 | 0) == (i2 | 0)) {
   HEAP32[12859] = HEAP32[12859] & ~(1 << i4);
   break;
  }
  if ((i3 | 0) != (i1 | 0)) {
   if (i3 >>> 0 < i6 >>> 0) _abort();
   i1 = i3 + 8 | 0;
   if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) i5 = i1; else _abort();
  } else i5 = i3 + 8 | 0;
  HEAP32[i2 + 12 >> 2] = i3;
  HEAP32[i5 >> 2] = i2;
 } while (0);
 if (i10 >>> 0 < 16) {
  HEAP32[i11 >> 2] = i9 | i12 & 1 | 2;
  i13 = i14 + i9 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  return i14 | 0;
 } else {
  i9 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 3;
  i13 = i9 + i10 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i9, i10);
  return i14 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 HEAP16[i17 >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 HEAPF32[i19 >> 2] = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 HEAPF64[i19 >> 3] = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 HEAPF64[i19 >> 3] = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS5_INS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SP_SN_ST_SU_SV_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS8_T_E4typeERKS17_(i8, i16) {
 i8 = i8 | 0;
 i16 = i16 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i18 + 12 | 0;
 i17 = i18;
 i3 = HEAP32[i16 >> 2] | 0;
 i14 = i16 + 4 | 0;
 i6 = HEAP32[i14 >> 2] | 0;
 i15 = i16 + 8 | 0;
 HEAP32[i17 >> 2] = i3;
 HEAP32[i17 + 4 >> 2] = i6;
 HEAP32[i17 + 8 >> 2] = HEAP32[i15 >> 2];
 i7 = i3 + 12 | 0;
 i4 = i3 + 20 | 0;
 i5 = i3 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i17) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i13, i7, i17, i7, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i14 >> 2] | 0;
 }
 HEAP32[HEAP32[i14 >> 2] >> 2] = i1;
 i1 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i12 = i16 + 8 | 0;
 if ((i2 | 0) == (HEAP32[i12 >> 2] | 0)) {
  STACKTOP = i18;
  return -1;
 }
 i3 = HEAP8[i2 >> 0] | 0;
 if ((HEAP8[i8 >> 0] | 0) > i3 << 24 >> 24) {
  STACKTOP = i18;
  return -1;
 }
 if ((HEAP8[i8 + 1 >> 0] | 0) < i3 << 24 >> 24) {
  STACKTOP = i18;
  return -1;
 }
 HEAP32[i1 >> 2] = i2 + 1;
 i10 = i17 + 4 | 0;
 i11 = i17 + 8 | 0;
 i1 = 0;
 while (1) {
  i3 = HEAP32[i14 >> 2] | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i5 = HEAP32[i16 >> 2] | 0;
  HEAP32[i17 >> 2] = i5;
  HEAP32[i10 >> 2] = i3;
  HEAP32[i11 >> 2] = HEAP32[i15 >> 2];
  i6 = i5 + 12 | 0;
  i7 = i5 + 20 | 0;
  i8 = i5 + 24 | 0;
  i9 = i4;
  i2 = i4;
  while (1) {
   if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i5, i17) | 0) < 0 ? (HEAP32[i3 >> 2] = i9, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i13, i6, i17, i6, i7, i8) | 0) < 0) : 0) break;
   i9 = HEAP32[i3 >> 2] | 0;
   i2 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
  }
  HEAP32[HEAP32[i14 >> 2] >> 2] = i2;
  i3 = HEAP32[i14 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i12 >> 2] | 0)) {
   i2 = 16;
   break;
  }
  if (((HEAPU8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
   i2 = 16;
   break;
  }
  HEAP32[i3 >> 2] = i2 + 1;
  i1 = i1 + 1 | 0;
 }
 if ((i2 | 0) == 16) {
  HEAP32[i3 >> 2] = i4;
  STACKTOP = i18;
  return ((i1 | 0) < 0 ? -1 : i1 + 1 | 0) | 0;
 }
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i20, i21, i3, i22, i16) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i3 = i3 | 0;
 i22 = i22 | 0;
 i16 = i16 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 i15 = i19;
 i10 = i19 + 208 | 0;
 i18 = i19 + 196 | 0;
 i1 = i19 + 180 | 0;
 i17 = i19 + 184 | 0;
 i14 = i19 + 176 | 0;
 i12 = i19 + 16 | 0;
 i13 = i19 + 8 | 0;
 i11 = i19 + 4 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i18 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i9 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i1 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53012) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 7](i1, 47802, 47828, i10) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
 i8 = i17 + 8 | 0;
 i9 = i17 + 1 | 0;
 i1 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i14 >> 2] = i1;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i11 >> 2] = 0;
 i7 = i17 + 4 | 0;
 i3 = HEAP32[i20 >> 2] | 0;
 L12 : while (1) {
  if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[i20 >> 2] = 0;
    i2 = 0;
    i5 = 1;
   } else {
    i2 = i3;
    i5 = 0;
   }
  } else {
   i2 = 0;
   i5 = 1;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i4 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i4 = HEAP32[i4 >> 2] | 0;
   if ((i4 | 0) != -1) if (i5) break; else break L12; else {
    HEAP32[i21 >> 2] = 0;
    i23 = 22;
    break;
   }
  } else i23 = 22; while (0);
  if ((i23 | 0) == 22) {
   i23 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i4 = HEAP8[i17 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i7 >> 2] | 0;
  if ((HEAP32[i14 >> 2] | 0) == (i1 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i4 << 1, 0);
   if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
   i1 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + i4;
  }
  i5 = i2 + 12 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i6 = i2 + 16 | 0;
  if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i4 = HEAP32[i4 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i4, 16, i1, i14, i11, 0, i18, i12, i13, i10) | 0) break;
  i3 = HEAP32[i5 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
   i3 = i2;
   continue;
  } else {
   HEAP32[i5 >> 2] = i3 + 4;
   i3 = i2;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, (HEAP32[i14 >> 2] | 0) - i1 | 0, 0);
 i13 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 i14 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i15 >> 2] = i16;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i13, i14, 47837, i15) | 0) != 1) HEAP32[i22 >> 2] = 4;
 if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i23 = 51;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i23 = 49;
   break;
  }
 } else i23 = 49; while (0);
 if ((i23 | 0) == 49 ? i2 : 0) i23 = 51;
 if ((i23 | 0) == 51) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i23 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i19;
 return i23 | 0;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i16, i15, i17, i19, i18, i1) {
 i14 = i14 | 0;
 i16 = i16 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i21;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53012) | 0;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53020) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 63](i13, i10);
 HEAP32[i18 >> 2] = i17;
 i1 = HEAP8[i14 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, i1) | 0;
   i2 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i2 + 4;
   HEAP32[i2 >> 2] = i11;
   i2 = i14 + 1 | 0;
   break;
  }
 default:
  i2 = i14;
 }
 i11 = i15;
 L4 : do if ((i11 - i2 | 0) > 1 ? (HEAP8[i2 >> 0] | 0) == 48 : 0) {
  i1 = i2 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i1 = i2;
    i20 = 10;
    break L4;
   }
  }
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, 48) | 0;
  i9 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i9 + 4;
  HEAP32[i9 >> 2] = i8;
  i2 = i2 + 2 | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, HEAP8[i1 >> 0] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i1 + 4;
  HEAP32[i1 >> 2] = i9;
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i15 >>> 0) break L4;
   i9 = HEAP8[i1 >> 0] | 0;
   if (!(_isxdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L4;
   i1 = i1 + 1 | 0;
  }
 } else {
  i1 = i2;
  i20 = 10;
 } while (0);
 L12 : do if ((i20 | 0) == 10) while (1) {
  i20 = 0;
  if (i1 >>> 0 >= i15 >>> 0) break L12;
  i9 = HEAP8[i1 >> 0] | 0;
  if (!(_isdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L12;
  i1 = i1 + 1 | 0;
  i20 = 10;
 } while (0);
 i8 = HEAP8[i13 >> 0] | 0;
 i9 = i13 + 4 | 0;
 L18 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  L21 : do if ((i2 | 0) != (i1 | 0)) {
   i3 = i1;
   i4 = i2;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L21;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 127](i10) | 0;
  i6 = i13 + 8 | 0;
  i7 = i13 + 1 | 0;
  i3 = 0;
  i4 = 0;
  i8 = i2;
  while (1) {
   if (i8 >>> 0 >= i1 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i3 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 4;
    HEAP32[i22 >> 2] = i5;
    i22 = HEAP8[i13 >> 0] | 0;
    i3 = 0;
    i4 = (i4 >>> 0 < (((i22 & 1) == 0 ? (i22 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, HEAP8[i8 >> 0] | 0) | 0;
   i22 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i22 + 4;
   HEAP32[i22 >> 2] = i23;
   i3 = i3 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i2 = i17 + (i2 - i14 << 2) | 0;
  i4 = HEAP32[i18 >> 2] | 0;
  if ((i2 | 0) == (i4 | 0)) i3 = i12; else {
   i3 = i4;
   while (1) {
    i3 = i3 + -4 | 0;
    if (i2 >>> 0 >= i3 >>> 0) {
     i3 = i12;
     i2 = i4;
     break L18;
    }
    i23 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i23;
    i2 = i2 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i2, i1, HEAP32[i18 >> 2] | 0) | 0;
  i2 = (HEAP32[i18 >> 2] | 0) + (i1 - i2 << 2) | 0;
  HEAP32[i18 >> 2] = i2;
  i3 = i12;
 } while (0);
 while (1) {
  if (i1 >>> 0 >= i15 >>> 0) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 46) {
   i20 = 29;
   break;
  }
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 44 >> 2] & 31](i12, i2) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  i2 = i23 + 4 | 0;
  HEAP32[i18 >> 2] = i2;
  HEAP32[i23 >> 2] = i22;
  i1 = i1 + 1 | 0;
 }
 if ((i20 | 0) == 29) {
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i10) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  i2 = i23 + 4 | 0;
  HEAP32[i18 >> 2] = i2;
  HEAP32[i23 >> 2] = i22;
  i1 = i1 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i1, i15, i2) | 0;
 i23 = (HEAP32[i18 >> 2] | 0) + (i11 - i1 << 2) | 0;
 HEAP32[i18 >> 2] = i23;
 HEAP32[i19 >> 2] = (i16 | 0) == (i15 | 0) ? i23 : i17 + (i16 - i14 << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 STACKTOP = i21;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i16, i17, i1, i19, i15, i18, i14) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i22;
 i4 = (i19 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i20 = i3;
   i2 = i3;
  }
 } else {
  i20 = 0;
  i2 = i3;
 }
 i7 = i1;
 i3 = 0;
 i6 = i2;
 while (1) {
  if ((i7 | 0) == (i19 | 0)) break;
  i5 = HEAP8[i7 >> 0] | 0;
  if (!(i5 & 1)) i5 = (i5 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
  if (!i5) {
   HEAP8[i6 >> 0] = 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + -1 | 0;
  } else HEAP8[i6 >> 0] = 1;
  i7 = i7 + 12 | 0;
  i6 = i6 + 1 | 0;
 }
 i13 = 0;
 i10 = i3;
 i8 = i4;
 L17 : while (1) {
  i3 = HEAP32[i16 >> 2] | 0;
  do if (i3) {
   if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1) {
    HEAP32[i16 >> 2] = 0;
    i3 = 0;
    break;
   } else {
    i3 = HEAP32[i16 >> 2] | 0;
    break;
   }
  } else i3 = 0; while (0);
  i6 = (i3 | 0) == 0;
  i4 = HEAP32[i17 >> 2] | 0;
  if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
    HEAP32[i17 >> 2] = 0;
    i4 = 0;
   }
  } else i4 = 0;
  i5 = (i4 | 0) == 0;
  i3 = HEAP32[i16 >> 2] | 0;
  if (!((i8 | 0) != 0 & (i6 ^ i5))) break;
  i4 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAPU8[i4 >> 0] | 0;
  i3 = i3 & 255;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 12 >> 2] & 31](i15, i3) | 0;
  i12 = i13 + 1 | 0;
  i7 = 0;
  i9 = i1;
  i11 = i8;
  i8 = i2;
  while (1) {
   if ((i9 | 0) == (i19 | 0)) break;
   do if ((HEAP8[i8 >> 0] | 0) == 1) {
    if (!(HEAP8[i9 >> 0] & 1)) i4 = i9 + 1 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
    i4 = HEAP8[i4 + i13 >> 0] | 0;
    if (!i14) i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 12 >> 2] & 31](i15, i4) | 0;
    if (i3 << 24 >> 24 != i4 << 24 >> 24) {
     HEAP8[i8 >> 0] = 0;
     i4 = i7;
     i5 = i10;
     i6 = i11 + -1 | 0;
     break;
    }
    i4 = HEAP8[i9 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i9 + 4 >> 2] | 0;
    if ((i4 | 0) == (i12 | 0)) {
     HEAP8[i8 >> 0] = 2;
     i4 = 1;
     i5 = i10 + 1 | 0;
     i6 = i11 + -1 | 0;
    } else {
     i4 = 1;
     i5 = i10;
     i6 = i11;
    }
   } else {
    i4 = i7;
    i5 = i10;
    i6 = i11;
   } while (0);
   i7 = i4;
   i9 = i9 + 12 | 0;
   i10 = i5;
   i11 = i6;
   i8 = i8 + 1 | 0;
  }
  if (!i7) {
   i13 = i12;
   i8 = i11;
   continue;
  }
  i3 = HEAP32[i16 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else HEAP32[i4 >> 2] = i5 + 1;
  if ((i10 + i11 | 0) >>> 0 > 1) {
   i6 = i1;
   i3 = i10;
   i5 = i2;
  } else {
   i13 = i12;
   i8 = i11;
   continue;
  }
  while (1) {
   if ((i6 | 0) == (i19 | 0)) {
    i13 = i12;
    i10 = i3;
    i8 = i11;
    continue L17;
   }
   if ((HEAP8[i5 >> 0] | 0) == 2) {
    i4 = HEAP8[i6 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i6 + 4 >> 2] | 0;
    if ((i4 | 0) != (i12 | 0)) {
     HEAP8[i5 >> 0] = 0;
     i3 = i3 + -1 | 0;
    }
   }
   i6 = i6 + 12 | 0;
   i5 = i5 + 1 | 0;
  }
 }
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1) {
   HEAP32[i16 >> 2] = 0;
   i3 = 0;
   break;
  } else {
   i3 = HEAP32[i16 >> 2] | 0;
   break;
  }
 } else i3 = 0; while (0);
 i3 = (i3 | 0) == 0;
 do if (!i5) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i17 >> 2] = 0;
   i21 = 34;
   break;
  }
  if (!i3) i21 = 69;
 } else i21 = 34; while (0);
 if ((i21 | 0) == 34) if (i3) i21 = 69;
 if ((i21 | 0) == 69) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i19 | 0)) {
   i21 = 73;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i21 | 0) == 73) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i19;
 }
 _free(i20);
 STACKTOP = i22;
 return i1 | 0;
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i12, i13, i14, i10, i6) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 i1 = HEAP32[i12 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i12 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i12 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i13 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i11 = 17;
   break;
  } else {
   i11 = 16;
   break;
  } else {
   HEAP32[i13 >> 2] = 0;
   i11 = 14;
   break;
  }
 } else i11 = 14; while (0);
 if ((i11 | 0) == 14) if (i3) i11 = 16; else {
  i2 = 0;
  i11 = 17;
 }
 L22 : do if ((i11 | 0) == 16) {
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 6;
  i1 = 0;
 } else if ((i11 | 0) == 17) {
  i1 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i3 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 31](i10, 2048, i1) | 0)) {
   HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 4;
   i1 = 0;
   break;
  }
  i1 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 52 >> 2] & 31](i10, i1, 0) | 0) << 24 >> 24;
  i3 = HEAP32[i12 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   i8 = i6;
   i7 = i2;
   i4 = i2;
  } else {
   HEAP32[i4 >> 2] = i5 + 4;
   i8 = i6;
   i7 = i2;
   i4 = i2;
  }
  while (1) {
   i1 = i1 + -48 | 0;
   i9 = i8 + -1 | 0;
   i2 = HEAP32[i12 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i12 >> 2] = 0;
     i5 = 1;
     break;
    } else {
     i5 = (HEAP32[i12 >> 2] | 0) == 0;
     break;
    }
   } else i5 = 1; while (0);
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i13 >> 2] = 0;
     i4 = 0;
     i6 = 0;
     i2 = 1;
     break;
    } else {
     i4 = i7;
     i6 = i7;
     i2 = (i7 | 0) == 0;
     break;
    }
   } else {
    i4 = i7;
    i6 = 0;
    i2 = 1;
   } while (0);
   i3 = HEAP32[i12 >> 2] | 0;
   if (!((i8 | 0) > 1 & (i5 ^ i2))) break;
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 31](i10, 2048, i2) | 0)) break L22;
   i1 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 52 >> 2] & 31](i10, i2, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
   i2 = HEAP32[i12 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i5 = HEAP32[i3 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
    i8 = i9;
    i7 = i4;
    i4 = i6;
    continue;
   } else {
    HEAP32[i3 >> 2] = i5 + 4;
    i8 = i9;
    i7 = i4;
    i4 = i6;
    continue;
   }
  }
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[i12 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i12 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  do if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) != -1) if (i3) break L22; else break; else {
    HEAP32[i13 >> 2] = 0;
    i11 = 60;
    break;
   }
  } else i11 = 60; while (0);
  if ((i11 | 0) == 60 ? !i3 : 0) break;
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
 } while (0);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_5chsetIcEENS1_8optionalIS4_EEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSG_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSG_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSI_ISM_SP_SM_ST_SU_SV_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS7_T_E4typeERKS17_(i15, i10) {
 i15 = i15 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i16 + 12 | 0;
 i13 = i16;
 i3 = HEAP32[i10 >> 2] | 0;
 i14 = i10 + 4 | 0;
 i6 = HEAP32[i14 >> 2] | 0;
 i11 = i10 + 8 | 0;
 HEAP32[i13 >> 2] = i3;
 HEAP32[i13 + 4 >> 2] = i6;
 HEAP32[i13 + 8 >> 2] = HEAP32[i11 >> 2];
 i7 = i3 + 12 | 0;
 i4 = i3 + 20 | 0;
 i5 = i3 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i13) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i12, i7, i13, i7, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i14 >> 2] | 0;
 }
 HEAP32[HEAP32[i14 >> 2] >> 2] = i1;
 i1 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i9 = i10 + 8 | 0;
 if ((i2 | 0) == (HEAP32[i9 >> 2] | 0)) {
  i15 = -1;
  STACKTOP = i16;
  return i15 | 0;
 }
 i8 = HEAPU8[i2 >> 0] | 0;
 if (!(1 << (i8 & 31) & HEAP32[(HEAP32[i15 >> 2] | 0) + (i8 >>> 5 << 2) >> 2])) {
  i15 = -1;
  STACKTOP = i16;
  return i15 | 0;
 }
 HEAP32[i1 >> 2] = i2 + 1;
 i7 = HEAP32[i14 >> 2] | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i6 = HEAP32[i10 >> 2] | 0;
 HEAP32[i13 >> 2] = i6;
 HEAP32[i13 + 4 >> 2] = i7;
 HEAP32[i13 + 8 >> 2] = HEAP32[i11 >> 2];
 i2 = i6 + 12 | 0;
 i3 = i6 + 20 | 0;
 i4 = i6 + 24 | 0;
 i5 = i8;
 i1 = i8;
 while (1) {
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i6, i13) | 0) < 0 ? (HEAP32[i7 >> 2] = i5, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i12, i2, i13, i2, i3, i4) | 0) < 0) : 0) break;
  i5 = HEAP32[i7 >> 2] | 0;
  i1 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
 }
 HEAP32[HEAP32[i14 >> 2] >> 2] = i1;
 i1 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i9 >> 2] | 0) ? (i14 = HEAPU8[i2 >> 0] | 0, 1 << (i14 & 31) & HEAP32[(HEAP32[i15 + 8 >> 2] | 0) + (i14 >>> 5 << 2) >> 2] | 0) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  i15 = 2;
  STACKTOP = i16;
  return i15 | 0;
 }
 HEAP32[i1 >> 2] = i8;
 i15 = 1;
 STACKTOP = i16;
 return i15 | 0;
}

function __ZNK5boost6spirit7classic6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEE10a_object_sEE5parseINS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINST_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENST_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSV_ISZ_S12_SZ_S16_S17_S18_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1K_(i13, i15, i14) {
 i13 = i13 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i16 + 12 | 0;
 i10 = i16;
 i3 = HEAP32[i14 >> 2] | 0;
 i11 = i14 + 4 | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 i8 = i14 + 8 | 0;
 HEAP32[i10 >> 2] = i3;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i8 >> 2];
 i7 = i3 + 12 | 0;
 i4 = i3 + 20 | 0;
 i5 = i3 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i9, i7, i10, i7, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[HEAP32[i11 >> 2] >> 2] = i1;
 i7 = HEAP32[i14 >> 2] | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i10 >> 2] = i7;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i9, i3, i10, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[HEAP32[i11 >> 2] >> 2] = i1;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i14 + 8 >> 2] | 0) ? (i12 = HEAP8[i2 >> 0] | 0, (HEAP8[i15 >> 0] | 0) == i12 << 24 >> 24) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  HEAP32[i13 >> 2] = 1;
  HEAP8[i13 + 5 >> 0] = i12;
  HEAP8[i13 + 4 >> 0] = 1;
  __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10a_object_sclEc(i15 + 4 | 0, i12);
  STACKTOP = i16;
  return;
 }
 HEAP32[i13 >> 2] = -1;
 HEAP8[i13 + 4 >> 0] = 0;
 STACKTOP = i16;
 return;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i16, i15, i17, i19, i18, i1) {
 i14 = i14 | 0;
 i16 = i16 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i21;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52992) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 63](i13, i10);
 HEAP32[i18 >> 2] = i17;
 i1 = HEAP8[i14 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, i1) | 0;
   i2 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i2 + 1;
   HEAP8[i2 >> 0] = i11;
   i2 = i14 + 1 | 0;
   break;
  }
 default:
  i2 = i14;
 }
 i11 = i15;
 L4 : do if ((i11 - i2 | 0) > 1 ? (HEAP8[i2 >> 0] | 0) == 48 : 0) {
  i1 = i2 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i1 = i2;
    i20 = 10;
    break L4;
   }
  }
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, 48) | 0;
  i9 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i9 + 1;
  HEAP8[i9 >> 0] = i8;
  i2 = i2 + 2 | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, HEAP8[i1 >> 0] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i1 + 1;
  HEAP8[i1 >> 0] = i9;
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i15 >>> 0) break L4;
   i9 = HEAP8[i1 >> 0] | 0;
   if (!(_isxdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L4;
   i1 = i1 + 1 | 0;
  }
 } else {
  i1 = i2;
  i20 = 10;
 } while (0);
 L12 : do if ((i20 | 0) == 10) while (1) {
  i20 = 0;
  if (i1 >>> 0 >= i15 >>> 0) break L12;
  i9 = HEAP8[i1 >> 0] | 0;
  if (!(_isdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L12;
  i1 = i1 + 1 | 0;
  i20 = 10;
 } while (0);
 i8 = HEAP8[i13 >> 0] | 0;
 i9 = i13 + 4 | 0;
 L18 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  L21 : do if ((i2 | 0) != (i1 | 0)) {
   i3 = i1;
   i4 = i2;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L21;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 127](i10) | 0;
  i6 = i13 + 8 | 0;
  i7 = i13 + 1 | 0;
  i3 = 0;
  i4 = 0;
  i8 = i2;
  while (1) {
   if (i8 >>> 0 >= i1 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i3 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 1;
    HEAP8[i22 >> 0] = i5;
    i22 = HEAP8[i13 >> 0] | 0;
    i3 = 0;
    i4 = (i4 >>> 0 < (((i22 & 1) == 0 ? (i22 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, HEAP8[i8 >> 0] | 0) | 0;
   i22 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i22 + 1;
   HEAP8[i22 >> 0] = i23;
   i3 = i3 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i3 = i17 + (i2 - i14) | 0;
  i2 = HEAP32[i18 >> 2] | 0;
  if ((i3 | 0) == (i2 | 0)) i3 = i12; else while (1) {
   i2 = i2 + -1 | 0;
   if (i3 >>> 0 >= i2 >>> 0) {
    i3 = i12;
    break L18;
   }
   i23 = HEAP8[i3 >> 0] | 0;
   HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
   HEAP8[i2 >> 0] = i23;
   i3 = i3 + 1 | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i2, i1, HEAP32[i18 >> 2] | 0) | 0;
  HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (i1 - i2);
  i3 = i12;
 } while (0);
 while (1) {
  if (i1 >>> 0 >= i15 >>> 0) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 46) {
   i20 = 29;
   break;
  }
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 31](i12, i2) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i23 + 1;
  HEAP8[i23 >> 0] = i22;
  i1 = i1 + 1 | 0;
 }
 if ((i20 | 0) == 29) {
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i10) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i23 + 1;
  HEAP8[i23 >> 0] = i22;
  i1 = i1 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i1, i15, HEAP32[i18 >> 2] | 0) | 0;
 i23 = (HEAP32[i18 >> 2] | 0) + (i11 - i1) | 0;
 HEAP32[i18 >> 2] = i23;
 HEAP32[i19 >> 2] = (i16 | 0) == (i15 | 0) ? i23 : i17 + (i16 - i14) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 STACKTOP = i21;
 return;
}

function __ZNK12mp5_implicit17CrispIntersection13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i7, i8, i9) {
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, d30 = 0.0;
 i29 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i11 = i29 + 184 | 0;
 i15 = i29 + 136 | 0;
 i5 = i29 + 128 | 0;
 i25 = i29 + 64 | 0;
 i26 = i29;
 i6 = i8 + 16 | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 HEAP32[i11 + 4 >> 2] = 0;
 HEAP8[i11 + 8 >> 0] = 1;
 HEAP32[i11 + 20 >> 2] = 0;
 HEAP32[i11 + 12 >> 2] = i2;
 HEAP32[i11 + 32 >> 2] = i2;
 i13 = i11 + 16 | 0;
 HEAP32[i13 >> 2] = 1;
 i10 = i11 + 24 | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i11 + 28 >> 2] = 0;
 i3 = i2 << 2;
 i1 = __Znwj(i3) | 0;
 i28 = i11 + 40 | 0;
 HEAP32[i28 >> 2] = i1;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i11 + 44 >> 2] = i2;
 i4 = (i2 | 0) == 0;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 HEAP32[i15 + 4 >> 2] = 0;
 HEAP8[i15 + 8 >> 0] = 1;
 HEAP32[i15 + 20 >> 2] = 0;
 HEAP32[i15 + 12 >> 2] = i2;
 HEAP32[i15 + 32 >> 2] = i2;
 i14 = i15 + 16 | 0;
 HEAP32[i14 >> 2] = 1;
 i12 = i15 + 24 | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i15 + 28 >> 2] = 0;
 i1 = __Znwj(i3) | 0;
 i27 = i15 + 40 | 0;
 HEAP32[i27 >> 2] = i1;
 HEAP32[i15 >> 2] = i1;
 HEAP32[i15 + 44 >> 2] = i2;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 HEAP32[i5 >> 2] = i2;
 HEAP32[i5 + 4 >> 2] = 3;
 HEAP32[i25 >> 2] = 0;
 HEAP32[i25 + 4 >> 2] = 1;
 HEAP32[i25 + 8 >> 2] = 0;
 HEAP8[i25 + 12 >> 0] = 1;
 HEAP8[i25 + 13 >> 0] = 1;
 HEAP32[i25 + 32 >> 2] = 0;
 HEAP32[i25 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i25, i5);
 i23 = HEAP32[i25 + 48 >> 2] | 0;
 i1 = i23 << 2;
 i2 = __Znwj(i1) | 0;
 i24 = i25 + 56 | 0;
 HEAP32[i24 >> 2] = i2;
 HEAP32[i25 >> 2] = i2;
 HEAP32[i25 + 60 >> 2] = i23;
 if (i23 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 1;
 HEAP32[i26 + 8 >> 2] = 0;
 HEAP8[i26 + 12 >> 0] = 1;
 HEAP8[i26 + 13 >> 0] = 1;
 HEAP32[i26 + 32 >> 2] = 0;
 HEAP32[i26 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i26, i5);
 i22 = HEAP32[i26 + 48 >> 2] | 0;
 i1 = i22 << 2;
 i2 = __Znwj(i1) | 0;
 i23 = i26 + 56 | 0;
 HEAP32[i23 >> 2] = i2;
 HEAP32[i26 >> 2] = i2;
 HEAP32[i26 + 60 >> 2] = i22;
 if (i22 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 i22 = i7 + 4 | 0;
 i19 = HEAP32[i22 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i19 >> 2] >> 2] & 31](i19, i8, i11);
 i19 = i7 + 8 | 0;
 i21 = HEAP32[i19 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i21 >> 2] >> 2] & 31](i21, i8, i15);
 i22 = HEAP32[i22 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i22 >> 2] | 0) + 4 >> 2] & 31](i22, i8, i25);
 i19 = HEAP32[i19 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i19 >> 2] | 0) + 4 >> 2] & 31](i19, i8, i26);
 i19 = HEAP32[i6 >> 2] | 0;
 if ((0 - i19 | 0) < 0) {
  i20 = (HEAP32[i9 >> 2] | 0) + (HEAP32[i9 + 40 >> 2] << 2) | 0;
  i21 = HEAP32[i9 + 24 >> 2] | 0;
  i22 = i9 + 28 | 0;
  i18 = i9 + 36 | 0;
  i17 = (HEAP32[i11 >> 2] | 0) + (HEAP32[i10 >> 2] << 2) | 0;
  i16 = HEAP32[i13 >> 2] | 0;
  i15 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i12 >> 2] << 2) | 0;
  i9 = HEAP32[i14 >> 2] | 0;
  i10 = i26 + 40 | 0;
  i11 = i26 + 24 | 0;
  i12 = i25 + 40 | 0;
  i13 = i25 + 24 | 0;
  i14 = 0;
  do {
   i7 = i20 + ((Math_imul(i21, i14) | 0) << 2) | 0;
   d30 = +HEAPF32[i17 + ((Math_imul(i16, i14) | 0) << 2) >> 2];
   if (d30 > +HEAPF32[i15 + ((Math_imul(i9, i14) | 0) << 2) >> 2]) {
    i1 = i26;
    i6 = (HEAP32[i26 >> 2] | 0) + (HEAP32[i10 >> 2] << 2) + ((Math_imul(HEAP32[i11 >> 2] | 0, i14) | 0) << 2) | 0;
   } else {
    i1 = i25;
    i6 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i12 >> 2] << 2) + ((Math_imul(HEAP32[i13 >> 2] | 0, i14) | 0) << 2) | 0;
   }
   i3 = HEAP32[i1 + 36 >> 2] | 0;
   i5 = HEAP32[i1 + 20 >> 2] | 0;
   i8 = i5 + i3 | 0;
   if (i5 | 0) {
    i4 = HEAP32[i1 + 28 >> 2] | 0;
    i5 = HEAP32[i22 >> 2] | 0;
    i2 = HEAP32[i18 >> 2] | 0;
    i1 = i3;
    while (1) {
     HEAP32[i7 + ((Math_imul(i2, i5) | 0) << 2) >> 2] = HEAP32[i6 + ((Math_imul(i1, i4) | 0) << 2) >> 2];
     i1 = i1 + 1 | 0;
     if ((i1 | 0) == (i8 | 0)) break; else i2 = i2 + 1 | 0;
    }
   }
   i14 = i14 + 1 | 0;
  } while ((i14 | 0) != (i19 | 0));
 }
 i1 = HEAP32[i23 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i24 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i27 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i28 >> 2] | 0;
 if (!i1) {
  STACKTOP = i29;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i29;
 return;
}

function __ZNK5boost6spirit7classic8positiveINS1_12digit_parserEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS4_T_E4typeERKS14_(i1, i17) {
 i1 = i1 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i18 + 12 | 0;
 i16 = i18;
 i3 = HEAP32[i17 >> 2] | 0;
 i14 = i17 + 4 | 0;
 i6 = HEAP32[i14 >> 2] | 0;
 i15 = i17 + 8 | 0;
 HEAP32[i16 >> 2] = i3;
 HEAP32[i16 + 4 >> 2] = i6;
 HEAP32[i16 + 8 >> 2] = HEAP32[i15 >> 2];
 i7 = i3 + 12 | 0;
 i4 = i3 + 20 | 0;
 i5 = i3 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i16) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i13, i7, i16, i7, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i14 >> 2] | 0;
 }
 HEAP32[HEAP32[i14 >> 2] >> 2] = i1;
 i1 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i12 = i17 + 8 | 0;
 if ((i2 | 0) == (HEAP32[i12 >> 2] | 0)) {
  i17 = -1;
  STACKTOP = i18;
  return i17 | 0;
 }
 if (((HEAPU8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
  i17 = -1;
  STACKTOP = i18;
  return i17 | 0;
 }
 HEAP32[i1 >> 2] = i2 + 1;
 i10 = i16 + 4 | 0;
 i11 = i16 + 8 | 0;
 i1 = 1;
 while (1) {
  i4 = HEAP32[i14 >> 2] | 0;
  i3 = HEAP32[i4 >> 2] | 0;
  i5 = HEAP32[i17 >> 2] | 0;
  HEAP32[i16 >> 2] = i5;
  HEAP32[i10 >> 2] = i4;
  HEAP32[i11 >> 2] = HEAP32[i15 >> 2];
  i6 = i5 + 12 | 0;
  i7 = i5 + 20 | 0;
  i8 = i5 + 24 | 0;
  i9 = i3;
  i2 = i3;
  while (1) {
   if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i5, i16) | 0) < 0 ? (HEAP32[i4 >> 2] = i9, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i13, i6, i16, i6, i7, i8) | 0) < 0) : 0) break;
   i9 = HEAP32[i4 >> 2] | 0;
   i2 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
  }
  HEAP32[HEAP32[i14 >> 2] >> 2] = i2;
  i2 = HEAP32[i14 >> 2] | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if ((i4 | 0) == (HEAP32[i12 >> 2] | 0)) break;
  if (((HEAPU8[i4 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break;
  HEAP32[i2 >> 2] = i4 + 1;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i2 >> 2] = i3;
 i17 = i1;
 STACKTOP = i18;
 return i17 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 HEAPF32[i19 >> 2] = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 HEAPF64[i19 >> 3] = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 HEAPF64[i19 >> 3] = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 HEAP16[i17 >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNK5boost6spirit7classic6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEE10a_object_eEE5parseINS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINST_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENST_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSV_ISZ_S12_SZ_S16_S17_S18_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1K_(i13, i15, i14) {
 i13 = i13 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i16 + 12 | 0;
 i10 = i16;
 i3 = HEAP32[i14 >> 2] | 0;
 i11 = i14 + 4 | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 i8 = i14 + 8 | 0;
 HEAP32[i10 >> 2] = i3;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i8 >> 2];
 i7 = i3 + 12 | 0;
 i4 = i3 + 20 | 0;
 i5 = i3 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i9, i7, i10, i7, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[HEAP32[i11 >> 2] >> 2] = i1;
 i7 = HEAP32[i14 >> 2] | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i10 >> 2] = i7;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i9, i3, i10, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[HEAP32[i11 >> 2] >> 2] = i1;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i14 + 8 >> 2] | 0) ? (i12 = HEAP8[i2 >> 0] | 0, (HEAP8[i15 >> 0] | 0) == i12 << 24 >> 24) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  HEAP32[i13 >> 2] = 1;
  HEAP8[i13 + 5 >> 0] = i12;
  HEAP8[i13 + 4 >> 0] = 1;
  i15 = (HEAP32[i15 + 4 >> 2] | 0) + 44 | 0;
  HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -4;
  STACKTOP = i16;
  return;
 }
 HEAP32[i13 >> 2] = -1;
 HEAP8[i13 + 4 >> 0] = 0;
 STACKTOP = i16;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 HEAP32[i17 >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZN13MarchingCubes20flush_geometry_queueERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERiRNS0_6vectorIfNS0_9allocatorIfEEEESB_RNS7_IiNS8_IiEEEERNS0_3mapIiiNS0_4lessIiEENS8_INS0_4pairIKiiEEEEEES6_(i3, i1, i34, i2, i33, i31, i30, i32) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i34 = i34 | 0;
 i2 = i2 | 0;
 i33 = i33 | 0;
 i31 = i31 | 0;
 i30 = i30 | 0;
 i32 = i32 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i29 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i24 = i29 + 12 | 0;
 i25 = i29 + 8 | 0;
 i26 = i29 + 4 | 0;
 i27 = i29;
 i28 = i3 + 312 | 0;
 i1 = HEAP32[i28 >> 2] | 0;
 if ((i1 | 0) <= 0) {
  i33 = i1;
  i33 = (i33 | 0) / 3 | 0;
  i32 = HEAP32[i34 >> 2] | 0;
  i33 = i32 + i33 | 0;
  HEAP32[i34 >> 2] = i33;
  HEAP32[i28 >> 2] = 0;
  STACKTOP = i29;
  return;
 }
 i19 = i3 + 320 | 0;
 i20 = i3 + 344 | 0;
 i21 = i3 + 336 | 0;
 i22 = i3 + 416 | 0;
 i23 = i3 + 440 | 0;
 i16 = i3 + 432 | 0;
 i17 = i30 + 4 | 0;
 i9 = i17;
 i10 = i30 + 4 | 0;
 i11 = i30 + 8 | 0;
 i12 = i33 + 4 | 0;
 i13 = i33 + 8 | 0;
 i14 = i31 + 4 | 0;
 i15 = i31 + 8 | 0;
 i18 = 0;
 do {
  i8 = i18 * 3 | 0;
  i1 = (HEAP32[i19 >> 2] | 0) + (HEAP32[i20 >> 2] << 2) | 0;
  i4 = HEAP32[i21 >> 2] | 0;
  i6 = HEAP32[i1 + ((Math_imul(i4, i8) | 0) << 2) >> 2] | 0;
  HEAP32[i25 >> 2] = i6;
  i7 = HEAP32[i1 + ((Math_imul(i4, i8 + 1 | 0) | 0) << 2) >> 2] | 0;
  HEAP32[i26 >> 2] = i7;
  i8 = HEAP32[i1 + ((Math_imul(i4, i8 + 2 | 0) | 0) << 2) >> 2] | 0;
  HEAP32[i27 >> 2] = i8;
  i4 = HEAP32[(HEAP32[i22 >> 2] | 0) + (HEAP32[i23 >> 2] << 2) + ((Math_imul(HEAP32[i16 >> 2] | 0, i18) | 0) << 2) >> 2] | 0;
  i1 = __Znwj(24) | 0;
  HEAP32[i1 + 16 >> 2] = i4;
  HEAP32[i1 + 20 >> 2] = HEAP32[i32 >> 2];
  i2 = HEAP32[i17 >> 2] | 0;
  do if (i2) {
   i5 = i2;
   while (1) {
    i2 = HEAP32[i5 + 16 >> 2] | 0;
    if ((i4 | 0) < (i2 | 0)) {
     i2 = HEAP32[i5 >> 2] | 0;
     if (!i2) {
      i2 = i5;
      i3 = i5;
      i5 = 7;
      break;
     }
    } else {
     if ((i2 | 0) >= (i4 | 0)) {
      i2 = i5;
      i5 = 12;
      break;
     }
     i3 = i5 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if (!i2) {
      i2 = i3;
      i3 = i5;
      i5 = 11;
      break;
     }
    }
    i5 = i2;
   }
   if ((i5 | 0) == 7) {
    HEAP32[i24 >> 2] = i3;
    i4 = i2;
    break;
   } else if ((i5 | 0) == 11) {
    HEAP32[i24 >> 2] = i3;
    i4 = i2;
    break;
   } else if ((i5 | 0) == 12) {
    HEAP32[i24 >> 2] = i2;
    i4 = i24;
    i3 = i2;
    break;
   }
  } else {
   HEAP32[i24 >> 2] = i17;
   i4 = i17;
   i3 = i9;
  } while (0);
  i2 = HEAP32[i4 >> 2] | 0;
  do if (!i2) {
   HEAP32[i1 >> 2] = 0;
   HEAP32[i1 + 4 >> 2] = 0;
   HEAP32[i1 + 8 >> 2] = i3;
   HEAP32[i4 >> 2] = i1;
   i2 = HEAP32[HEAP32[i30 >> 2] >> 2] | 0;
   if (i2) {
    HEAP32[i30 >> 2] = i2;
    i1 = HEAP32[i4 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i10 >> 2] | 0, i1);
   HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
   i2 = HEAP32[i32 >> 2] | 0;
   HEAP32[i24 >> 2] = i2;
   HEAP32[i32 >> 2] = i2 + 1;
   i3 = HEAP32[i12 >> 2] | 0;
   i1 = HEAP32[i13 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) {
    __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i33, i25);
    i3 = HEAP32[i12 >> 2] | 0;
    i1 = HEAP32[i13 >> 2] | 0;
   } else {
    HEAP32[i3 >> 2] = i6;
    i3 = i3 + 4 | 0;
    HEAP32[i12 >> 2] = i3;
   }
   if ((i3 | 0) == (i1 | 0)) {
    __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i33, i26);
    i3 = HEAP32[i12 >> 2] | 0;
    i1 = HEAP32[i13 >> 2] | 0;
   } else {
    HEAP32[i3 >> 2] = i7;
    i3 = i3 + 4 | 0;
    HEAP32[i12 >> 2] = i3;
   }
   if ((i3 | 0) == (i1 | 0)) {
    __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i33, i27);
    break;
   } else {
    HEAP32[i3 >> 2] = i8;
    HEAP32[i12 >> 2] = i3 + 4;
    break;
   }
  } else {
   __ZdlPv(i1);
   i2 = HEAP32[i2 + 20 >> 2] | 0;
   HEAP32[i24 >> 2] = i2;
  } while (0);
  i1 = HEAP32[i14 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i15 >> 2] | 0)) __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i31, i24); else {
   HEAP32[i1 >> 2] = i2;
   HEAP32[i14 >> 2] = i1 + 4;
  }
  i18 = i18 + 1 | 0;
  i1 = HEAP32[i28 >> 2] | 0;
 } while ((i18 | 0) < (i1 | 0));
 i33 = (i1 | 0) / 3 | 0;
 i32 = HEAP32[i34 >> 2] | 0;
 i33 = i32 + i33 | 0;
 HEAP32[i34 >> 2] = i33;
 HEAP32[i28 >> 2] = 0;
 STACKTOP = i29;
 return;
}

function __ZNK12mp5_implicit15double_mushroom13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i17, i4, i34) {
 i17 = i17 | 0;
 i4 = i4 | 0;
 i34 = i34 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, d35 = 0.0, d36 = 0.0, i37 = 0;
 i30 = HEAP32[i4 + 16 >> 2] | 0;
 i32 = HEAP32[i4 + 24 >> 2] | 0;
 i33 = HEAP32[i4 + 28 >> 2] | 0;
 i29 = HEAP32[i4 + 32 >> 2] | 0;
 i18 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i31 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i31 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i31;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i28 = HEAP32[i17 + 36 >> 2] | 0;
 d5 = +HEAPF32[i28 >> 2];
 d6 = +HEAPF32[i28 + 4 >> 2];
 d7 = +HEAPF32[i28 + 8 >> 2];
 d8 = +HEAPF32[i28 + 12 >> 2];
 d9 = +HEAPF32[i28 + 16 >> 2];
 d10 = +HEAPF32[i28 + 20 >> 2];
 d11 = +HEAPF32[i28 + 24 >> 2];
 d12 = +HEAPF32[i28 + 28 >> 2];
 d13 = +HEAPF32[i28 + 32 >> 2];
 d14 = +HEAPF32[i28 + 36 >> 2];
 d15 = +HEAPF32[i28 + 40 >> 2];
 d16 = +HEAPF32[i28 + 44 >> 2];
 if (i30 | 0) {
  i1 = i33 << 1;
  i2 = i31 + (i18 << 2) | 0;
  i3 = 0;
  do {
   i26 = i2 + ((Math_imul(i3, i32) | 0) << 2) | 0;
   d36 = +HEAPF32[i26 >> 2];
   i27 = i26 + (i33 << 2) | 0;
   d35 = +HEAPF32[i27 >> 2];
   i28 = i26 + (i1 << 2) | 0;
   HEAPF32[i26 >> 2] = d8 + (d5 * d36 + d6 * d35 + d7 * +HEAPF32[i28 >> 2]);
   HEAPF32[i27 >> 2] = d12 + (d9 * d36 + d10 * d35 + d11 * +HEAPF32[i28 >> 2]);
   HEAPF32[i28 >> 2] = d16 + (d13 * d36 + d14 * d35 + d15 * +HEAPF32[i28 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i30 | 0));
 }
 d8 = +HEAPF32[i17 + 8 >> 2];
 d8 = d8 * d8;
 d9 = +HEAPF32[i17 + 12 >> 2];
 d9 = d9 * d9;
 d10 = +HEAPF32[i17 + 16 >> 2];
 d10 = d10 * d10;
 if ((0 - i30 | 0) >= 0) {
  __ZdlPv(i31);
  return;
 }
 i20 = i17 + 20 | 0;
 i21 = i34 + 40 | 0;
 i22 = i34 + 24 | 0;
 i23 = i34 + 28 | 0;
 i24 = i17 + 24 | 0;
 i25 = HEAP32[i23 >> 2] | 0;
 i26 = i33 << 1;
 i27 = i17 + 28 | 0;
 i28 = i25 << 1;
 i19 = i17 + 4 | 0;
 i18 = i31 + (i18 << 2) | 0;
 i4 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i21 >> 2] << 2) | 0;
 i17 = HEAP32[i22 >> 2] | 0;
 i2 = i29;
 i3 = 0;
 while (1) {
  i1 = i18 + ((Math_imul(i2, i32) | 0) << 2) | 0;
  i29 = i4 + ((Math_imul(i17, i3) | 0) << 2) | 0;
  HEAPF32[i29 >> 2] = (+HEAPF32[i1 >> 2] - +HEAPF32[i20 >> 2]) * -2.0 / d8;
  HEAPF32[i29 + (i25 << 2) >> 2] = (+HEAPF32[i1 + (i33 << 2) >> 2] - +HEAPF32[i24 >> 2]) * -2.0 / d9;
  i1 = i1 + (i26 << 2) | 0;
  HEAPF32[i29 + (i28 << 2) >> 2] = (+HEAPF32[i1 >> 2] - +HEAPF32[i27 >> 2]) * 2.0 / d10;
  d7 = +HEAPF32[i1 >> 2];
  d6 = +HEAPF32[i27 >> 2];
  d36 = d7 - d6;
  d5 = +HEAPF32[i19 >> 2];
  if (d36 < d5 ? d36 > d5 + -.05 : 0) {
   i37 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i21 >> 2] << 2) + ((Math_imul(HEAP32[i22 >> 2] | 0, i3) | 0) << 2) | 0;
   HEAPF32[i37 >> 2] = 0.0;
   i29 = HEAP32[i23 >> 2] | 0;
   HEAPF32[i37 + (i29 << 2) >> 2] = 0.0;
   HEAPF32[i37 + (i29 << 1 << 2) >> 2] = -1.0;
   d6 = +HEAPF32[i27 >> 2];
   d7 = +HEAPF32[i1 >> 2];
   d5 = +HEAPF32[i19 >> 2];
  }
  if (d7 - d6 > d5) {
   i29 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i21 >> 2] << 2) + ((Math_imul(HEAP32[i22 >> 2] | 0, i3) | 0) << 2) | 0;
   HEAPF32[i29 >> 2] = 0.0;
   i37 = HEAP32[i23 >> 2] | 0;
   HEAPF32[i29 + (i37 << 2) >> 2] = 0.0;
   HEAPF32[i29 + (i37 << 1 << 2) >> 2] = -1.0;
   d6 = +HEAPF32[i27 >> 2];
   d7 = +HEAPF32[i1 >> 2];
   d5 = +HEAPF32[i19 >> 2];
  }
  d35 = d7 - d6;
  d36 = -d5;
  if (d35 > d36 ? d35 < d36 + .05 : 0) {
   i29 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i21 >> 2] << 2) + ((Math_imul(HEAP32[i22 >> 2] | 0, i3) | 0) << 2) | 0;
   HEAPF32[i29 >> 2] = 0.0;
   i37 = HEAP32[i23 >> 2] | 0;
   HEAPF32[i29 + (i37 << 2) >> 2] = 0.0;
   HEAPF32[i29 + (i37 << 1 << 2) >> 2] = 1.0;
   d6 = +HEAPF32[i27 >> 2];
   d7 = +HEAPF32[i1 >> 2];
   d5 = +HEAPF32[i19 >> 2];
  }
  if (d7 - d6 < -d5) {
   i29 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i21 >> 2] << 2) + ((Math_imul(HEAP32[i22 >> 2] | 0, i3) | 0) << 2) | 0;
   HEAPF32[i29 >> 2] = 0.0;
   i37 = HEAP32[i23 >> 2] | 0;
   HEAPF32[i29 + (i37 << 2) >> 2] = 0.0;
   HEAPF32[i29 + (i37 << 1 << 2) >> 2] = 1.0;
  }
  i3 = i3 + 1 | 0;
  if ((i3 | 0) == (i30 | 0)) break; else i2 = i2 + 1 | 0;
 }
 __ZdlPv(i31);
 return;
}

function __ZNSt3__16locale5__impC2Ej(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 HEAP32[i4 + 4 >> 2] = i1 + -1;
 HEAP32[i4 >> 2] = 28432;
 i1 = i4 + 8 | 0;
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej(i1, 28);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4 + 144 | 0, 47835, 1);
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = i4 + 12 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 HEAP32[12711] = 0;
 HEAP32[12710] = 26096;
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_(i4, 50840);
 HEAP32[12713] = 0;
 HEAP32[12712] = 26128;
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_(i4, 50848);
 __ZNSt3__15ctypeIcEC2EPKtbj(50856, 0, 0, 1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_(i4, 50856);
 HEAP32[12719] = 0;
 HEAP32[12718] = 28648;
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_(i4, 50872);
 HEAP32[12721] = 0;
 HEAP32[12720] = 28716;
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i4, 50880);
 HEAP32[12723] = 0;
 HEAP32[12722] = 28384;
 HEAP32[12724] = __ZNSt3__16__clocEv() | 0;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i4, 50888);
 HEAP32[12727] = 0;
 HEAP32[12726] = 28764;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i4, 50904);
 HEAP32[12729] = 0;
 HEAP32[12728] = 28812;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i4, 50912);
 __ZNSt3__18numpunctIcEC2Ej(50920, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_(i4, 50920);
 __ZNSt3__18numpunctIwEC2Ej(50944, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_(i4, 50944);
 HEAP32[12745] = 0;
 HEAP32[12744] = 26160;
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 50976);
 HEAP32[12747] = 0;
 HEAP32[12746] = 26224;
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 50984);
 HEAP32[12749] = 0;
 HEAP32[12748] = 26288;
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 50992);
 HEAP32[12751] = 0;
 HEAP32[12750] = 26340;
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 51e3);
 HEAP32[12753] = 0;
 HEAP32[12752] = 27888;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i4, 51008);
 HEAP32[12755] = 0;
 HEAP32[12754] = 27944;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i4, 51016);
 HEAP32[12757] = 0;
 HEAP32[12756] = 28e3;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i4, 51024);
 HEAP32[12759] = 0;
 HEAP32[12758] = 28056;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i4, 51032);
 HEAP32[12761] = 0;
 HEAP32[12760] = 28112;
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 51040);
 HEAP32[12763] = 0;
 HEAP32[12762] = 28140;
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 51048);
 HEAP32[12765] = 0;
 HEAP32[12764] = 28168;
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 51056);
 HEAP32[12767] = 0;
 HEAP32[12766] = 28196;
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 51064);
 HEAP32[12769] = 0;
 HEAP32[12768] = 26392;
 HEAP32[12770] = 26440;
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 51072);
 HEAP32[12773] = 0;
 HEAP32[12772] = 26476;
 HEAP32[12774] = 26524;
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 51088);
 HEAP32[12777] = 0;
 HEAP32[12776] = 28628;
 HEAP32[12778] = __ZNSt3__16__clocEv() | 0;
 HEAP32[12776] = 27840;
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 51104);
 HEAP32[12781] = 0;
 HEAP32[12780] = 28628;
 HEAP32[12782] = __ZNSt3__16__clocEv() | 0;
 HEAP32[12780] = 27864;
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 51120);
 HEAP32[12785] = 0;
 HEAP32[12784] = 28224;
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_(i4, 51136);
 HEAP32[12787] = 0;
 HEAP32[12786] = 28256;
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_(i4, 51144);
 return;
}

function __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS6_11basic_ptreeINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_NSA_4lessISG_EEEEE10a_object_eEEENS1_8sequenceINS1_11list_parserINS1_4ruleINS1_7scannerINSA_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSX_IS11_S14_S11_S18_S19_S1A_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1L_EES5_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISG_SM_EEEEE5parseIS1K_EENS1_13parser_resultIS1T_T_E4typeERKS1W_(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i4 = i10 + 16 | 0;
 i9 = i10 + 8 | 0;
 i3 = i10;
 i6 = i7 + 4 | 0;
 i1 = HEAP32[HEAP32[i6 >> 2] >> 2] | 0;
 __ZNK5boost6spirit7classic6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEE10a_object_eEE5parseINS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINST_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENST_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSV_ISZ_S12_SZ_S16_S17_S18_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1K_(i3, i8, i7);
 i2 = HEAP32[i3 >> 2] | 0;
 i3 = i3 + 4 | 0;
 if (HEAP8[i3 >> 0] | 0) HEAP8[i3 >> 0] = 0;
 if ((i2 | 0) >= 0) {
  i9 = i2;
  STACKTOP = i10;
  return i9 | 0;
 }
 HEAP32[HEAP32[i6 >> 2] >> 2] = i1;
 i3 = HEAP32[i8 + 8 >> 2] | 0;
 i5 = HEAP8[i8 + 12 >> 0] | 0;
 HEAP32[i4 >> 2] = i3;
 HEAP8[i4 + 4 >> 0] = i5;
 HEAP8[i4 + 8 >> 0] = i5;
 HEAP32[i4 + 12 >> 2] = i3;
 HEAP8[i4 + 16 >> 0] = i5;
 i5 = __ZNK5boost6spirit7classic10differenceINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS1_5chlitIcEEE5parseIS10_EENS1_13parser_resultIS15_T_E4typeERKS18_(i4, i7) | 0;
 if ((i5 | 0) >= 0) {
  i3 = i4 + 8 | 0;
  i1 = 0;
  while (1) {
   i2 = HEAP32[HEAP32[i6 >> 2] >> 2] | 0;
   i4 = __ZNK5boost6spirit7classic8sequenceINS1_5chlitIcEENS1_10differenceINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSE_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSE_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSG_ISK_SN_SK_SR_SS_ST_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES14_EES4_EEE5parseIS13_EENS1_13parser_resultIS17_T_E4typeERKS1A_(i3, i7) | 0;
   if ((i4 | 0) < 0) break; else i1 = i4 + i1 | 0;
  }
  HEAP32[HEAP32[i6 >> 2] >> 2] = i2;
  i3 = (i1 | 0) < 0 ? -1 : i1 + i5 | 0;
  if ((i3 | 0) >= 0) {
   __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINSD_11basic_ptreeIS9_S9_NS3_4lessIS9_EEEEE10a_object_eEEEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSV_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSV_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSX_IS11_S14_S11_S18_S19_S1A_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISN_T_E4typeERKS1M_(i9, i8 + 16 | 0, i7);
   i2 = HEAP32[i9 >> 2] | 0;
   i1 = i9 + 4 | 0;
   if (HEAP8[i1 >> 0] | 0) HEAP8[i1 >> 0] = 0;
   i9 = (i2 | 0) < 0 ? -1 : i2 + i3 | 0;
   STACKTOP = i10;
   return i9 | 0;
  }
 }
 i9 = -1;
 STACKTOP = i10;
 return i9 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i20, i21, i3, i22, i16) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i3 = i3 | 0;
 i22 = i22 | 0;
 i16 = i16 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i15 = i19;
 i10 = i19 + 208 | 0;
 i18 = i19 + 196 | 0;
 i1 = i19 + 180 | 0;
 i17 = i19 + 184 | 0;
 i14 = i19 + 176 | 0;
 i12 = i19 + 16 | 0;
 i13 = i19 + 8 | 0;
 i11 = i19 + 4 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i18 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i9 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i1 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 7](i1, 47802, 47828, i10) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
 i8 = i17 + 8 | 0;
 i9 = i17 + 1 | 0;
 i2 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i14 >> 2] = i2;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i11 >> 2] = 0;
 i7 = i17 + 4 | 0;
 i1 = HEAP32[i20 >> 2] | 0;
 L12 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i20 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i4 = (i1 | 0) == 0;
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else break L12;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i4) break; else break L12; else {
    HEAP32[i21 >> 2] = 0;
    i23 = 19;
    break;
   }
  } else i23 = 19; while (0);
  if ((i23 | 0) == 19) {
   i23 = 0;
   if (i4) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i4 = HEAP8[i17 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i7 >> 2] | 0;
  if ((HEAP32[i14 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i4 << 1, 0);
   if (!(HEAP8[i17 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i2, 0);
   i2 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i14 >> 2] = i2 + i4;
  }
  i5 = i1 + 12 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAPU8[i4 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, 16, i2, i14, i11, 0, i18, i12, i13, i10) | 0) break;
  i3 = HEAP32[i5 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i3 + 1;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, (HEAP32[i14 >> 2] | 0) - i2 | 0, 0);
 i13 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 i14 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i15 >> 2] = i16;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i13, i14, 47837, i15) | 0) != 1) HEAP32[i22 >> 2] = 4;
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i20 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i23 = 43;
   break;
  }
  if (!i1) i23 = 44;
 } else i23 = 43; while (0);
 if ((i23 | 0) == 43 ? i1 : 0) i23 = 44;
 if ((i23 | 0) == 44) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i23 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i19;
 return i23 | 0;
}

function __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE5copy_ERKS16_RKNS1_8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEESY_EE(i2, i1, i13) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i13 = i13 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i11 = i1 + -8 + 4 | 0;
 i9 = HEAP32[i11 >> 2] | 0;
 i3 = i9 + 28 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 i17 = i1 & -2;
 i12 = i2 + -8 + 4 | 0;
 i10 = HEAP32[i12 >> 2] | 0;
 i8 = i10 + 28 | 0;
 if ((i17 | 0) == 0 | (i17 + -28 | 0) == 0) {
  HEAP32[i8 >> 2] = 0;
  HEAP32[i10 + 32 >> 2] = i8;
  i17 = HEAP32[i12 >> 2] | 0;
  HEAP32[i17 + 36 >> 2] = i17 + 28;
  return;
 }
 i6 = i1 & 1;
 HEAP32[i8 >> 2] = HEAP32[i8 >> 2] & -2 | i6;
 i5 = HEAP32[i3 >> 2] & -2;
 i5 = (i5 | 0) == 0 ? 0 : i5 + -28 | 0;
 i17 = i13 + 24 | 0;
 i7 = HEAP32[i17 >> 2] | 0;
 if ((i7 | 0) == (i5 | 0)) i1 = i13 + 28 | 0; else {
  i1 = HEAP32[i13 + 16 >> 2] | 0;
  i2 = HEAP32[i13 + 20 >> 2] << 3 >> 3;
  L8 : while (1) {
   while (1) {
    if (!i2) break L8;
    i3 = (i2 | 0) / 2 | 0;
    i4 = i1 + (i3 << 3) | 0;
    if ((HEAP32[i4 >> 2] | 0) >>> 0 < i5 >>> 0) {
     i1 = i4;
     break;
    } else i2 = i3;
   }
   i1 = i1 + 8 | 0;
   i2 = i2 + -1 - i3 | 0;
  }
  i1 = i1 + 4 | 0;
 }
 HEAP32[i8 >> 2] = i6 | (HEAP32[i1 >> 2] | 0) + 28;
 i5 = HEAP32[i9 + 32 >> 2] | 0;
 i5 = (i5 | 0) == 0 ? 0 : i5 + -28 | 0;
 if ((i7 | 0) == (i5 | 0)) i1 = i13 + 28 | 0; else {
  i1 = HEAP32[i13 + 16 >> 2] | 0;
  i2 = HEAP32[i13 + 20 >> 2] << 3 >> 3;
  L19 : while (1) {
   while (1) {
    if (!i2) break L19;
    i3 = (i2 | 0) / 2 | 0;
    i4 = i1 + (i3 << 3) | 0;
    if ((HEAP32[i4 >> 2] | 0) >>> 0 < i5 >>> 0) {
     i1 = i4;
     break;
    } else i2 = i3;
   }
   i1 = i1 + 8 | 0;
   i2 = i2 + -1 - i3 | 0;
  }
  i1 = i1 + 4 | 0;
 }
 HEAP32[i10 + 32 >> 2] = (HEAP32[i1 >> 2] | 0) + 28;
 i6 = HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0;
 i6 = (i6 | 0) == 0 ? 0 : i6 + -28 | 0;
 if ((HEAP32[i17 >> 2] | 0) == (i6 | 0)) {
  i2 = i13 + 20 | 0;
  i1 = i13 + 28 | 0;
  i7 = i2;
  i8 = i13 + 16 | 0;
  i2 = HEAP32[i2 >> 2] | 0;
 } else {
  i8 = i13 + 16 | 0;
  i7 = i13 + 20 | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = HEAP32[i8 >> 2] | 0;
  i3 = i2 << 3 >> 3;
  L30 : while (1) {
   while (1) {
    if (!i3) break L30;
    i4 = (i3 | 0) / 2 | 0;
    i5 = i1 + (i4 << 3) | 0;
    if ((HEAP32[i5 >> 2] | 0) >>> 0 < i6 >>> 0) {
     i1 = i5;
     break;
    } else i3 = i4;
   }
   i1 = i1 + 8 | 0;
   i3 = i3 + -1 - i4 | 0;
  }
  i1 = i1 + 4 | 0;
 }
 HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] = (HEAP32[i1 >> 2] | 0) + 28;
 i1 = HEAP32[i8 >> 2] | 0;
 i16 = i1 + (i2 << 3) | 0;
 if (!i2) return;
 i15 = i13 + 28 | 0;
 do {
  i9 = HEAP32[i1 >> 2] | 0;
  i10 = HEAP32[i1 + 4 >> 2] | 0;
  i11 = i10 + 28 | 0;
  i12 = i9 + 28 | 0;
  i13 = HEAP32[i12 >> 2] & 1;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] & -2 | i13;
  i6 = HEAP32[i12 >> 2] & -2;
  i14 = i6;
  do if (i6) {
   i6 = i14 + -28 | 0;
   if ((HEAP32[i17 >> 2] | 0) == (i6 | 0)) i2 = i15; else {
    i2 = HEAP32[i8 >> 2] | 0;
    i3 = HEAP32[i7 >> 2] << 3 >> 3;
    L48 : while (1) {
     while (1) {
      if (!i3) break L48;
      i4 = (i3 | 0) / 2 | 0;
      i5 = i2 + (i4 << 3) | 0;
      if ((HEAP32[i5 >> 2] | 0) >>> 0 < i6 >>> 0) {
       i2 = i5;
       break;
      } else i3 = i4;
     }
     i2 = i2 + 8 | 0;
     i3 = i3 + -1 - i4 | 0;
    }
    i2 = i2 + 4 | 0;
   }
   i2 = HEAP32[i2 >> 2] | 0;
   HEAP32[i11 >> 2] = i13 | i2 + 28;
   if ((HEAP32[i14 + 4 >> 2] | 0) == (i12 | 0)) {
    HEAP32[i2 + 32 >> 2] = i11;
    break;
   }
   if ((HEAP32[i14 + 8 >> 2] | 0) == (i12 | 0)) HEAP32[i2 + 36 >> 2] = i11;
  } else HEAP32[i11 >> 2] = i13; while (0);
  if (!(HEAP32[i9 + 32 >> 2] | 0)) HEAP32[i10 + 32 >> 2] = 0;
  if (!(HEAP32[i9 + 36 >> 2] | 0)) HEAP32[i10 + 36 >> 2] = 0;
  i1 = i1 + 8 | 0;
 } while ((i1 | 0) != (i16 | 0));
 return;
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i12, i14, i15, i11, i6) {
 i12 = i12 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i1 = HEAP32[i12 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i12 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i12 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i14 >> 2] = 0;
   i13 = 11;
   break;
  }
  if (i2) i13 = 13; else i13 = 12;
 } else i13 = 11; while (0);
 if ((i13 | 0) == 11) if (i2) i13 = 12; else {
  i1 = 0;
  i13 = 13;
 }
 L16 : do if ((i13 | 0) == 12) {
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 6;
  i1 = 0;
 } else if ((i13 | 0) == 13) {
  i2 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
  i3 = i2 & 255;
  if (i3 << 24 >> 24 > -1 ? (i10 = i11 + 8 | 0, HEAP16[(HEAP32[i10 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   i5 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 31](i11, i3, 0) | 0) << 24 >> 24;
   i2 = HEAP32[i12 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
    i8 = i6;
    i7 = i1;
    i6 = i1;
    i1 = i5;
   } else {
    HEAP32[i3 >> 2] = i4 + 1;
    i8 = i6;
    i7 = i1;
    i6 = i1;
    i1 = i5;
   }
   while (1) {
    i1 = i1 + -48 | 0;
    i9 = i8 + -1 | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
      HEAP32[i12 >> 2] = 0;
      i2 = 0;
      break;
     } else {
      i2 = HEAP32[i12 >> 2] | 0;
      break;
     }
    } else i2 = 0; while (0);
    i4 = (i2 | 0) == 0;
    if (i6) if ((HEAP32[i6 + 12 >> 2] | 0) == (HEAP32[i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0) == -1) {
     HEAP32[i14 >> 2] = 0;
     i3 = 0;
     i6 = 0;
    } else {
     i3 = i7;
     i6 = i7;
    } else i3 = i7; else {
     i3 = i7;
     i6 = 0;
    }
    i2 = HEAP32[i12 >> 2] | 0;
    if (!((i8 | 0) > 1 & (i4 ^ (i6 | 0) == 0))) break;
    i4 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i4 >> 0] | 0;
    i4 = i2 & 255;
    if (i4 << 24 >> 24 <= -1) break L16;
    if (!(HEAP16[(HEAP32[i10 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break L16;
    i1 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 31](i11, i4, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    i4 = i2 + 12 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i8 = i9;
     i7 = i3;
     continue;
    } else {
     HEAP32[i4 >> 2] = i5 + 1;
     i8 = i9;
     i7 = i3;
     continue;
    }
   }
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
     HEAP32[i12 >> 2] = 0;
     i2 = 0;
     break;
    } else {
     i2 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i2 = 0; while (0);
   i2 = (i2 | 0) == 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
     HEAP32[i14 >> 2] = 0;
     i13 = 50;
     break;
    }
    if (i2) break L16;
   } else i13 = 50; while (0);
   if ((i13 | 0) == 50 ? !i2 : 0) break;
   HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
   break;
  }
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 4;
  i1 = 0;
 } while (0);
 return i1 | 0;
}

function _mbsrtowcs(i5, i10, i1, i3) {
 i5 = i5 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = HEAP32[i10 >> 2] | 0;
 if ((i3 | 0) != 0 ? (i4 = HEAP32[i3 >> 2] | 0, (i4 | 0) != 0) : 0) if (!i5) {
  i3 = i1;
  i6 = i2;
  i9 = 16;
 } else {
  HEAP32[i3 >> 2] = 0;
  i8 = i5;
  i3 = i1;
  i7 = i4;
  i9 = 37;
 } else if (!i5) {
  i3 = i1;
  i9 = 7;
 } else {
  i4 = i5;
  i3 = i1;
  i9 = 6;
 }
 L7 : while (1) if ((i9 | 0) == 6) {
  if (!i3) {
   i9 = 26;
   break;
  } else i5 = i4;
  while (1) {
   i4 = HEAP8[i2 >> 0] | 0;
   do if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? i3 >>> 0 > 4 & (i2 & 3 | 0) == 0 : 0) {
    i6 = i2;
    while (1) {
     i2 = HEAP32[i6 >> 2] | 0;
     if ((i2 + -16843009 | i2) & -2139062144 | 0) {
      i4 = i2;
      i2 = i6;
      i9 = 32;
      break;
     }
     HEAP32[i5 >> 2] = i2 & 255;
     HEAP32[i5 + 4 >> 2] = HEAPU8[i6 + 1 >> 0];
     HEAP32[i5 + 8 >> 2] = HEAPU8[i6 + 2 >> 0];
     i2 = i6 + 4 | 0;
     i4 = i5 + 16 | 0;
     HEAP32[i5 + 12 >> 2] = HEAPU8[i6 + 3 >> 0];
     i3 = i3 + -4 | 0;
     if (i3 >>> 0 > 4) {
      i5 = i4;
      i6 = i2;
     } else {
      i9 = 31;
      break;
     }
    }
    if ((i9 | 0) == 31) {
     i5 = i4;
     i4 = HEAP8[i2 >> 0] | 0;
     break;
    } else if ((i9 | 0) == 32) {
     i4 = i4 & 255;
     break;
    }
   } while (0);
   i4 = i4 & 255;
   if ((i4 + -1 | 0) >>> 0 >= 127) break;
   i2 = i2 + 1 | 0;
   HEAP32[i5 >> 2] = i4;
   i3 = i3 + -1 | 0;
   if (!i3) {
    i9 = 26;
    break L7;
   } else i5 = i5 + 4 | 0;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i9 = 48;
   break;
  }
  i8 = i5;
  i7 = HEAP32[22096 + (i4 << 2) >> 2] | 0;
  i2 = i2 + 1 | 0;
  i9 = 37;
  continue;
 } else if ((i9 | 0) == 7) {
  i4 = HEAP8[i2 >> 0] | 0;
  if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? (i2 & 3 | 0) == 0 : 0) {
   i9 = HEAP32[i2 >> 2] | 0;
   i4 = i9 & 255;
   if (!((i9 + -16843009 | i9) & -2139062144)) {
    do {
     i2 = i2 + 4 | 0;
     i3 = i3 + -4 | 0;
     i4 = HEAP32[i2 >> 2] | 0;
    } while (((i4 + -16843009 | i4) & -2139062144 | 0) == 0);
    i4 = i4 & 255;
   }
  }
  i4 = i4 & 255;
  if ((i4 + -1 | 0) >>> 0 < 127) {
   i3 = i3 + -1 | 0;
   i2 = i2 + 1 | 0;
   i9 = 7;
   continue;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i9 = 48;
   break;
  }
  i4 = HEAP32[22096 + (i4 << 2) >> 2] | 0;
  i6 = i2 + 1 | 0;
  i9 = 16;
  continue;
 } else if ((i9 | 0) == 16) {
  i9 = (HEAPU8[i6 >> 0] | 0) >>> 3;
  if ((i9 + -16 | i9 + (i4 >> 26)) >>> 0 > 7) {
   i9 = 17;
   break;
  }
  i2 = i6 + 1 | 0;
  if (i4 & 33554432) {
   if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
    i9 = 20;
    break;
   }
   i2 = i6 + 2 | 0;
   if (i4 & 524288) {
    if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
     i9 = 23;
     break;
    }
    i2 = i6 + 3 | 0;
   }
  }
  i3 = i3 + -1 | 0;
  i9 = 7;
  continue;
 } else if ((i9 | 0) == 37) {
  i4 = HEAPU8[i2 >> 0] | 0;
  i9 = i4 >>> 3;
  if ((i9 + -16 | i9 + (i7 >> 26)) >>> 0 > 7) {
   i9 = 38;
   break;
  }
  i6 = i2 + 1 | 0;
  i5 = i4 + -128 | i7 << 6;
  if ((i5 | 0) < 0) {
   i4 = HEAPU8[i6 >> 0] | 0;
   if ((i4 & 192 | 0) != 128) {
    i9 = 41;
    break;
   }
   i6 = i2 + 2 | 0;
   i5 = i4 + -128 | i5 << 6;
   if ((i5 | 0) < 0) {
    i4 = HEAPU8[i6 >> 0] | 0;
    if ((i4 & 192 | 0) != 128) {
     i9 = 44;
     break;
    }
    i5 = i4 + -128 | i5 << 6;
    i2 = i2 + 3 | 0;
   } else i2 = i6;
  } else i2 = i6;
  HEAP32[i8 >> 2] = i5;
  i4 = i8 + 4 | 0;
  i3 = i3 + -1 | 0;
  i9 = 6;
  continue;
 }
 if ((i9 | 0) == 17) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 20) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 23) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 26) HEAP32[i10 >> 2] = i2; else if ((i9 | 0) == 38) {
  i5 = i8;
  i4 = i7;
  i2 = i2 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 41) {
  i3 = i8;
  i1 = i2 + -1 | 0;
  i9 = 52;
 } else if ((i9 | 0) == 44) {
  i3 = i8;
  i1 = i2 + -1 | 0;
  i9 = 52;
 }
 if ((i9 | 0) == 47) if (!i4) i9 = 48; else {
  i3 = i5;
  i1 = i2;
  i9 = 52;
 }
 if ((i9 | 0) == 48) if (!(HEAP8[i2 >> 0] | 0)) {
  if (i5 | 0) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i10 >> 2] = 0;
  }
  i1 = i1 - i3 | 0;
 } else {
  i3 = i5;
  i1 = i2;
  i9 = 52;
 }
 if ((i9 | 0) == 52) {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  if (!i3) i1 = -1; else {
   HEAP32[i10 >> 2] = i1;
   i1 = -1;
  }
 }
 return i1 | 0;
}

function __ZNK12mp5_implicit17transformed_union13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i7, i4, i29) {
 i7 = i7 | 0;
 i4 = i4 | 0;
 i29 = i29 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i30 = 0, i31 = 0, d32 = 0.0, d33 = 0.0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i26 = i31 + 96 | 0;
 i27 = i31 + 48 | 0;
 i28 = i31;
 i8 = i4 + 16 | 0;
 i25 = HEAP32[i8 >> 2] | 0;
 i1 = i26;
 i2 = i4;
 i3 = i1 + 52 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 i24 = HEAP32[i26 + 48 >> 2] | 0;
 i2 = i24 << 2;
 i1 = __Znwj(i2) | 0;
 i30 = i26 + 56 | 0;
 HEAP32[i30 >> 2] = i1;
 HEAP32[i26 >> 2] = i1;
 HEAP32[i26 + 60 >> 2] = i24;
 if (i24 | 0) _memset(i1 | 0, 0, i2 | 0) | 0;
 i2 = HEAP32[i4 + 48 >> 2] | 0;
 if (i2 | 0) {
  i3 = HEAP32[i4 + 56 >> 2] | 0;
  while (1) {
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   i2 = i2 + -1 | 0;
   if (!i2) break; else {
    i3 = i3 + 4 | 0;
    i1 = i1 + 4 | 0;
   }
  }
 }
 i2 = HEAP32[i7 + 8 >> 2] | 0;
 d12 = +HEAPF32[i2 >> 2];
 d13 = +HEAPF32[i2 + 4 >> 2];
 d14 = +HEAPF32[i2 + 8 >> 2];
 d15 = +HEAPF32[i2 + 12 >> 2];
 d16 = +HEAPF32[i2 + 16 >> 2];
 d17 = +HEAPF32[i2 + 20 >> 2];
 d18 = +HEAPF32[i2 + 24 >> 2];
 d19 = +HEAPF32[i2 + 28 >> 2];
 d20 = +HEAPF32[i2 + 32 >> 2];
 d21 = +HEAPF32[i2 + 36 >> 2];
 d22 = +HEAPF32[i2 + 40 >> 2];
 d23 = +HEAPF32[i2 + 44 >> 2];
 i2 = HEAP32[i26 + 16 >> 2] | 0;
 if (i2 | 0) {
  i3 = HEAP32[i26 + 28 >> 2] | 0;
  i4 = i3 << 1;
  i1 = HEAP32[i26 + 24 >> 2] | 0;
  i5 = (HEAP32[i26 >> 2] | 0) + (HEAP32[i26 + 40 >> 2] << 2) | 0;
  i6 = 0;
  do {
   i10 = i5 + ((Math_imul(i6, i1) | 0) << 2) | 0;
   d33 = +HEAPF32[i10 >> 2];
   i11 = i10 + (i3 << 2) | 0;
   d32 = +HEAPF32[i11 >> 2];
   i24 = i10 + (i4 << 2) | 0;
   HEAPF32[i10 >> 2] = d15 + (d12 * d33 + d13 * d32 + d14 * +HEAPF32[i24 >> 2]);
   HEAPF32[i11 >> 2] = d19 + (d16 * d33 + d17 * d32 + d18 * +HEAPF32[i24 >> 2]);
   HEAPF32[i24 >> 2] = d23 + (d20 * d33 + d21 * d32 + d22 * +HEAPF32[i24 >> 2]);
   i6 = i6 + 1 | 0;
  } while ((i6 | 0) != (i2 | 0));
 }
 HEAP32[i27 + 4 >> 2] = 0;
 HEAP8[i27 + 8 >> 0] = 1;
 HEAP32[i27 + 20 >> 2] = 0;
 HEAP32[i27 + 12 >> 2] = i25;
 HEAP32[i27 + 32 >> 2] = i25;
 i10 = i27 + 16 | 0;
 HEAP32[i10 >> 2] = 1;
 i6 = i27 + 24 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i27 + 28 >> 2] = 0;
 i3 = i25 << 2;
 i1 = __Znwj(i3) | 0;
 i24 = i27 + 40 | 0;
 HEAP32[i24 >> 2] = i1;
 HEAP32[i27 >> 2] = i1;
 HEAP32[i27 + 44 >> 2] = i25;
 i4 = (i25 | 0) == 0;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 i2 = i7 + 12 | 0;
 i9 = HEAP32[HEAP32[i2 >> 2] >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i9 >> 2] >> 2] & 31](i9, i26, i27);
 HEAP32[i28 + 4 >> 2] = 0;
 HEAP8[i28 + 8 >> 0] = 1;
 HEAP32[i28 + 20 >> 2] = 0;
 HEAP32[i28 + 12 >> 2] = i25;
 HEAP32[i28 + 32 >> 2] = i25;
 i9 = i28 + 16 | 0;
 HEAP32[i9 >> 2] = 1;
 i5 = i28 + 24 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i28 + 28 >> 2] = 0;
 i1 = __Znwj(i3) | 0;
 i11 = i28 + 40 | 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i28 >> 2] = i1;
 HEAP32[i28 + 44 >> 2] = i25;
 if (!i4) _memset(i1 | 0, 0, i3 | 0) | 0;
 i25 = HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i25 >> 2] >> 2] & 31](i25, i26, i28);
 i8 = HEAP32[i8 >> 2] | 0;
 if ((0 - i8 | 0) < 0) {
  i7 = (HEAP32[i27 >> 2] | 0) + (HEAP32[i6 >> 2] << 2) | 0;
  i6 = HEAP32[i10 >> 2] | 0;
  i5 = (HEAP32[i28 >> 2] | 0) + (HEAP32[i5 >> 2] << 2) | 0;
  i3 = HEAP32[i9 >> 2] | 0;
  i4 = (HEAP32[i29 >> 2] | 0) + (HEAP32[i29 + 24 >> 2] << 2) | 0;
  i1 = HEAP32[i29 + 16 >> 2] | 0;
  i2 = 0;
  do {
   i28 = i7 + ((Math_imul(i6, i2) | 0) << 2) | 0;
   i29 = i5 + ((Math_imul(i3, i2) | 0) << 2) | 0;
   HEAP32[i4 + ((Math_imul(i1, i2) | 0) << 2) >> 2] = HEAP32[(+HEAPF32[i28 >> 2] > +HEAPF32[i29 >> 2] ? i28 : i29) >> 2];
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != (i8 | 0));
 }
 i1 = HEAP32[i11 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i24 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i30 >> 2] | 0;
 if (!i1) {
  STACKTOP = i31;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i31;
 return;
}

function __ZNK12mp5_implicit4cube13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i17, i4, i37) {
 i17 = i17 | 0;
 i4 = i4 | 0;
 i37 = i37 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, d44 = 0.0, d45 = 0.0;
 i40 = HEAP32[i4 + 16 >> 2] | 0;
 i42 = HEAP32[i4 + 24 >> 2] | 0;
 i43 = HEAP32[i4 + 28 >> 2] | 0;
 i39 = HEAP32[i4 + 32 >> 2] | 0;
 i38 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i41 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i41 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i41;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i36 = HEAP32[i17 + 92 >> 2] | 0;
 d5 = +HEAPF32[i36 >> 2];
 d6 = +HEAPF32[i36 + 4 >> 2];
 d7 = +HEAPF32[i36 + 8 >> 2];
 d8 = +HEAPF32[i36 + 12 >> 2];
 d9 = +HEAPF32[i36 + 16 >> 2];
 d10 = +HEAPF32[i36 + 20 >> 2];
 d11 = +HEAPF32[i36 + 24 >> 2];
 d12 = +HEAPF32[i36 + 28 >> 2];
 d13 = +HEAPF32[i36 + 32 >> 2];
 d14 = +HEAPF32[i36 + 36 >> 2];
 d15 = +HEAPF32[i36 + 40 >> 2];
 d16 = +HEAPF32[i36 + 44 >> 2];
 if (i40 | 0) {
  i1 = i43 << 1;
  i2 = i41 + (i38 << 2) | 0;
  i3 = 0;
  do {
   i34 = i2 + ((Math_imul(i3, i42) | 0) << 2) | 0;
   d45 = +HEAPF32[i34 >> 2];
   i35 = i34 + (i43 << 2) | 0;
   d44 = +HEAPF32[i35 >> 2];
   i36 = i34 + (i1 << 2) | 0;
   HEAPF32[i34 >> 2] = d8 + (d5 * d45 + d6 * d44 + d7 * +HEAPF32[i36 >> 2]);
   HEAPF32[i35 >> 2] = d12 + (d9 * d45 + d10 * d44 + d11 * +HEAPF32[i36 >> 2]);
   HEAPF32[i36 >> 2] = d16 + (d13 * d45 + d14 * d44 + d15 * +HEAPF32[i36 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i40 | 0));
 }
 d5 = +HEAPF32[i17 + 76 >> 2];
 d6 = +HEAPF32[i17 + 80 >> 2];
 d7 = +HEAPF32[i17 + 84 >> 2];
 if ((0 - i40 | 0) >= 0) {
  __ZdlPv(i41);
  return;
 }
 i22 = i43 << 1;
 i23 = i17 + 4 | 0;
 i24 = i17 + 8 | 0;
 i25 = i17 + 12 | 0;
 i26 = i17 + 16 | 0;
 i27 = i17 + 20 | 0;
 i28 = i17 + 24 | 0;
 i29 = i17 + 28 | 0;
 i30 = i17 + 32 | 0;
 i31 = i17 + 36 | 0;
 i32 = i17 + 40 | 0;
 i33 = i17 + 44 | 0;
 i34 = i17 + 48 | 0;
 i35 = i17 + 52 | 0;
 i36 = i17 + 56 | 0;
 i19 = i17 + 60 | 0;
 i20 = i17 + 64 | 0;
 i21 = i17 + 68 | 0;
 i17 = i17 + 72 | 0;
 i18 = (HEAP32[i37 >> 2] | 0) + (HEAP32[i37 + 24 >> 2] << 2) | 0;
 i4 = HEAP32[i37 + 16 >> 2] | 0;
 i3 = i41 + (i38 << 2) | 0;
 i1 = i39;
 i2 = 0;
 while (1) {
  i39 = i3 + ((Math_imul(i1, i42) | 0) << 2) | 0;
  d10 = +HEAPF32[i39 >> 2] - d5;
  d11 = +HEAPF32[i23 >> 2];
  d8 = +HEAPF32[i39 + (i43 << 2) >> 2] - d6;
  d9 = +HEAPF32[i24 >> 2];
  d12 = +HEAPF32[i39 + (i22 << 2) >> 2] - d7;
  d45 = +HEAPF32[i25 >> 2];
  d45 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d45 * (d12 - d45) * 2.0;
  d11 = +HEAPF32[i26 >> 2];
  d9 = +HEAPF32[i27 >> 2];
  d44 = +HEAPF32[i28 >> 2];
  d44 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d44 * (d12 - d44) * 2.0;
  d11 = +HEAPF32[i29 >> 2];
  d9 = +HEAPF32[i30 >> 2];
  d16 = +HEAPF32[i31 >> 2];
  d16 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d16 * (d12 - d16) * 2.0;
  d11 = +HEAPF32[i32 >> 2];
  d9 = +HEAPF32[i33 >> 2];
  d15 = +HEAPF32[i34 >> 2];
  d15 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d15 * (d12 - d15) * 2.0;
  d11 = +HEAPF32[i35 >> 2];
  d9 = +HEAPF32[i36 >> 2];
  d14 = +HEAPF32[i19 >> 2];
  d14 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d14 * (d12 - d14) * 2.0;
  d11 = +HEAPF32[i20 >> 2];
  d9 = +HEAPF32[i21 >> 2];
  d13 = +HEAPF32[i17 >> 2];
  d13 = d9 * (d8 - d9) * -2.0 - d11 * (d10 - d11) * 2.0 - d13 * (d12 - d13) * 2.0;
  d14 = d13 < d14 ? d13 : d14;
  d15 = d14 < d15 ? d14 : d15;
  d16 = d15 < d16 ? d15 : d16;
  d44 = d16 < d44 ? d16 : d44;
  HEAPF32[i18 + ((Math_imul(i4, i2) | 0) << 2) >> 2] = d44 < d45 ? d44 : d45;
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i40 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i41);
 return;
}

function __ZN13MarchingCubesC2EtN12mp5_implicit12bounding_boxEbb(i9, i1, i5, i8, i7) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i10;
 i2 = (i1 & 65535) + 5 | 0;
 HEAP32[i9 + 4 >> 2] = i2;
 i2 = Math_imul(Math_imul(i2, i2) | 0, i2) | 0;
 HEAP32[i9 + 72 >> 2] = 0;
 HEAP8[i9 + 76 >> 0] = 1;
 HEAP32[i9 + 88 >> 2] = 0;
 HEAP32[i9 + 80 >> 2] = i2;
 HEAP32[i9 + 100 >> 2] = i2;
 HEAP32[i9 + 84 >> 2] = 1;
 HEAP32[i9 + 92 >> 2] = 0;
 HEAP32[i9 + 96 >> 2] = 0;
 i3 = i2 << 2;
 i4 = __Znwj(i3) | 0;
 HEAP32[i9 + 108 >> 2] = i4;
 HEAP32[i9 + 68 >> 2] = i4;
 HEAP32[i9 + 112 >> 2] = i2;
 _memset(i4 | 0, 0, i3 | 0) | 0;
 HEAP32[i9 + 120 >> 2] = 0;
 HEAP8[i9 + 124 >> 0] = 1;
 HEAP32[i9 + 136 >> 2] = 0;
 HEAP32[i9 + 128 >> 2] = 0;
 HEAP32[i9 + 148 >> 2] = 0;
 HEAP32[i9 + 132 >> 2] = 1;
 HEAP32[i9 + 140 >> 2] = 0;
 HEAP32[i9 + 144 >> 2] = 0;
 i3 = __Znwj(0) | 0;
 HEAP32[i9 + 156 >> 2] = i3;
 HEAP32[i9 + 116 >> 2] = i3;
 HEAP32[i9 + 160 >> 2] = 0;
 HEAP32[i9 + 164 >> 2] = 12;
 HEAP32[i9 + 172 >> 2] = 0;
 HEAP8[i9 + 176 >> 0] = 1;
 HEAP32[i9 + 188 >> 2] = 0;
 HEAP32[i9 + 180 >> 2] = 36;
 HEAP32[i9 + 200 >> 2] = 36;
 HEAP32[i9 + 184 >> 2] = 1;
 HEAP32[i9 + 192 >> 2] = 0;
 HEAP32[i9 + 196 >> 2] = 0;
 i3 = __Znwj(144) | 0;
 HEAP32[i9 + 208 >> 2] = i3;
 HEAP32[i9 + 168 >> 2] = i3;
 HEAP32[i9 + 212 >> 2] = 36;
 _memset(i3 | 0, 0, 144) | 0;
 HEAP32[i9 + 220 >> 2] = 0;
 HEAP8[i9 + 224 >> 0] = 1;
 HEAP32[i9 + 236 >> 2] = 0;
 HEAP32[i9 + 228 >> 2] = 0;
 HEAP32[i9 + 248 >> 2] = 0;
 HEAP32[i9 + 232 >> 2] = 1;
 HEAP32[i9 + 240 >> 2] = 0;
 HEAP32[i9 + 244 >> 2] = 0;
 i3 = __Znwj(0) | 0;
 HEAP32[i9 + 256 >> 2] = i3;
 HEAP32[i9 + 216 >> 2] = i3;
 HEAP32[i9 + 260 >> 2] = 0;
 HEAP32[i9 + 268 >> 2] = 0;
 HEAP8[i9 + 272 >> 0] = 1;
 HEAP32[i9 + 284 >> 2] = 0;
 HEAP32[i9 + 276 >> 2] = 12;
 HEAP32[i9 + 296 >> 2] = 12;
 HEAP32[i9 + 280 >> 2] = 1;
 HEAP32[i9 + 288 >> 2] = 0;
 HEAP32[i9 + 292 >> 2] = 0;
 i3 = __Znwj(48) | 0;
 HEAP32[i9 + 304 >> 2] = i3;
 HEAP32[i9 + 264 >> 2] = i3;
 HEAP32[i9 + 308 >> 2] = 12;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 i4 = i9 + 312 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = 12288 | 0;
 HEAP32[i9 + 324 >> 2] = 0;
 HEAP8[i9 + 328 >> 0] = 1;
 HEAP32[i9 + 340 >> 2] = 0;
 HEAP32[i9 + 332 >> 2] = i4;
 HEAP32[i9 + 352 >> 2] = i4;
 HEAP32[i9 + 336 >> 2] = 1;
 HEAP32[i9 + 344 >> 2] = 0;
 HEAP32[i9 + 348 >> 2] = 0;
 i1 = i4 << 2;
 i2 = __Znwj(i1) | 0;
 HEAP32[i9 + 360 >> 2] = i2;
 HEAP32[i9 + 320 >> 2] = i2;
 HEAP32[i9 + 364 >> 2] = i4;
 if (i4 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[i9 + 372 >> 2] = 0;
 HEAP8[i9 + 376 >> 0] = 1;
 HEAP32[i9 + 388 >> 2] = 0;
 HEAP32[i9 + 380 >> 2] = 0;
 HEAP32[i9 + 400 >> 2] = 0;
 HEAP32[i9 + 384 >> 2] = 1;
 HEAP32[i9 + 392 >> 2] = 0;
 HEAP32[i9 + 396 >> 2] = 0;
 i1 = 0 << 2;
 i2 = __Znwj(i1) | 0;
 HEAP32[i9 + 408 >> 2] = i2;
 HEAP32[i9 + 368 >> 2] = i2;
 HEAP32[i9 + 412 >> 2] = 0;
 if (0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[i9 + 420 >> 2] = 0;
 HEAP8[i9 + 424 >> 0] = 1;
 HEAP32[i9 + 436 >> 2] = 0;
 HEAP32[i9 + 428 >> 2] = 4096;
 HEAP32[i9 + 448 >> 2] = 4096;
 HEAP32[i9 + 432 >> 2] = 1;
 HEAP32[i9 + 440 >> 2] = 0;
 HEAP32[i9 + 444 >> 2] = 0;
 i1 = __Znwj(16384) | 0;
 HEAP32[i9 + 456 >> 2] = i1;
 HEAP32[i9 + 416 >> 2] = i1;
 HEAP32[i9 + 460 >> 2] = 4096;
 _memset(i1 | 0, 0, 16384) | 0;
 HEAP32[i9 + 464 >> 2] = 0;
 HEAP32[i9 + 468 >> 2] = 0;
 i1 = i9 + 516 | 0;
 HEAP32[i9 + 520 >> 2] = 0;
 HEAP32[i9 + 524 >> 2] = 0;
 i2 = i9 + 520 | 0;
 i3 = i9 + 476 | 0;
 i4 = i3 + 40 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 HEAP32[i1 >> 2] = i2;
 HEAP32[i9 + 528 >> 2] = 0;
 HEAP8[i9 >> 0] = i8 & 1;
 HEAP8[i9 + 1 >> 0] = i7 & 1;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i6 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i6 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i6 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
 HEAP32[i6 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
 HEAP32[i6 + 20 >> 2] = HEAP32[i5 + 20 >> 2];
 __ZN13MarchingCubes4initEN12mp5_implicit12bounding_boxE(i9, i6);
 STACKTOP = i10;
 return;
}

function ___udivmoddi4(i5, i6, i8, i11, i13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, i15 = 0;
 i9 = i5;
 i4 = i6;
 i7 = i4;
 i2 = i8;
 i12 = i11;
 i3 = i12;
 if (!i7) {
  i1 = (i13 | 0) != 0;
  if (!i3) {
   if (i1) {
    HEAP32[i13 >> 2] = (i9 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i12 = 0;
   i13 = (i9 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i12, i13) | 0;
  } else {
   if (!i1) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
 }
 i1 = (i3 | 0) == 0;
 do if (i2) {
  if (!i1) {
   i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
   if (i1 >>> 0 <= 31) {
    i10 = i1 + 1 | 0;
    i3 = 31 - i1 | 0;
    i6 = i1 - 31 >> 31;
    i2 = i10;
    i5 = i9 >>> (i10 >>> 0) & i6 | i7 << i3;
    i6 = i7 >>> (i10 >>> 0) & i6;
    i1 = 0;
    i3 = i9 << i3;
    break;
   }
   if (!i13) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
  i1 = i2 - 1 | 0;
  if (i1 & i2 | 0) {
   i3 = (Math_clz32(i2 | 0) | 0) + 33 - (Math_clz32(i7 | 0) | 0) | 0;
   i15 = 64 - i3 | 0;
   i10 = 32 - i3 | 0;
   i4 = i10 >> 31;
   i14 = i3 - 32 | 0;
   i6 = i14 >> 31;
   i2 = i3;
   i5 = i10 - 1 >> 31 & i7 >>> (i14 >>> 0) | (i7 << i10 | i9 >>> (i3 >>> 0)) & i6;
   i6 = i6 & i7 >>> (i3 >>> 0);
   i1 = i9 << i15 & i4;
   i3 = (i7 << i15 | i9 >>> (i14 >>> 0)) & i4 | i9 << i10 & i3 - 33 >> 31;
   break;
  }
  if (i13 | 0) {
   HEAP32[i13 >> 2] = i1 & i9;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  if ((i2 | 0) == 1) {
   i14 = i4 | i6 & 0;
   i15 = i5 | 0 | 0;
   return (tempRet0 = i14, i15) | 0;
  } else {
   i15 = _llvm_cttz_i32(i2 | 0) | 0;
   i14 = i7 >>> (i15 >>> 0) | 0;
   i15 = i7 << 32 - i15 | i9 >>> (i15 >>> 0) | 0;
   return (tempRet0 = i14, i15) | 0;
  }
 } else {
  if (i1) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = (i7 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  if (!i9) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = (i7 >>> 0) % (i3 >>> 0);
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i3 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = i3 - 1 | 0;
  if (!(i1 & i3)) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = i5 | 0;
    HEAP32[i13 + 4 >> 2] = i1 & i7 | i6 & 0;
   }
   i14 = 0;
   i15 = i7 >>> ((_llvm_cttz_i32(i3 | 0) | 0) >>> 0);
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
  if (i1 >>> 0 <= 30) {
   i6 = i1 + 1 | 0;
   i3 = 31 - i1 | 0;
   i2 = i6;
   i5 = i7 << i3 | i9 >>> (i6 >>> 0);
   i6 = i7 >>> (i6 >>> 0);
   i1 = 0;
   i3 = i9 << i3;
   break;
  }
  if (!i13) {
   i14 = 0;
   i15 = 0;
   return (tempRet0 = i14, i15) | 0;
  }
  HEAP32[i13 >> 2] = i5 | 0;
  HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
  i14 = 0;
  i15 = 0;
  return (tempRet0 = i14, i15) | 0;
 } while (0);
 if (!i2) {
  i7 = i3;
  i4 = 0;
  i3 = 0;
 } else {
  i10 = i8 | 0 | 0;
  i9 = i12 | i11 & 0;
  i7 = _i64Add(i10 | 0, i9 | 0, -1, -1) | 0;
  i8 = tempRet0;
  i4 = i3;
  i3 = 0;
  do {
   i11 = i4;
   i4 = i1 >>> 31 | i4 << 1;
   i1 = i3 | i1 << 1;
   i11 = i5 << 1 | i11 >>> 31 | 0;
   i12 = i5 >>> 31 | i6 << 1 | 0;
   _i64Subtract(i7 | 0, i8 | 0, i11 | 0, i12 | 0) | 0;
   i15 = tempRet0;
   i14 = i15 >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1;
   i3 = i14 & 1;
   i5 = _i64Subtract(i11 | 0, i12 | 0, i14 & i10 | 0, (((i15 | 0) < 0 ? -1 : 0) >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1) & i9 | 0) | 0;
   i6 = tempRet0;
   i2 = i2 - 1 | 0;
  } while ((i2 | 0) != 0);
  i7 = i4;
  i4 = 0;
 }
 i2 = 0;
 if (i13 | 0) {
  HEAP32[i13 >> 2] = i5;
  HEAP32[i13 + 4 >> 2] = i6;
 }
 i14 = (i1 | 0) >>> 31 | (i7 | i2) << 1 | (i2 << 1 | i1 >>> 31) & 0 | i4;
 i15 = (i1 << 1 | 0 >>> 31) & -2 | i3;
 return (tempRet0 = i14, i15) | 0;
}
function __ZN5boost6spirit7classic4impl13phrase_parserINS1_11alternativeINS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISA_SD_SA_SH_SI_SJ_EEEEE5parseINSt3__111__wrap_iterIPcEENS_13property_tree11json_parser12json_grammarINSU_11basic_ptreeINSQ_12basic_stringIcNSQ_11char_traitsIcEENSQ_9allocatorIcEEEES13_NSQ_4lessIS13_EEEEEEEENS1_10parse_infoIT_EERKS19_S1C_RKT0_RKSN_(i10, i1, i12, i8, i7) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i12 = i12 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i13 + 28 | 0;
 i6 = i13 + 16 | 0;
 i11 = i13 + 12 | 0;
 i9 = i13;
 i2 = i7;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i9 + 4 >> 2] = i11;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i9 + 8 >> 2] = i4;
 HEAP32[i6 >> 2] = i2;
 HEAP32[i6 + 4 >> 2] = i11;
 HEAP32[i6 + 8 >> 2] = i4;
 i4 = i7 + 12 | 0;
 i2 = i7 + 20 | 0;
 i3 = i7 + 24 | 0;
 while (1) {
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i6) | 0) < 0 ? (HEAP32[i11 >> 2] = i1, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i5, i4, i6, i4, i2, i3) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[i11 >> 2] = i1;
 i1 = HEAP32[(__ZN5boost6spirit7classic4impl14get_definitionINS_13property_tree11json_parser12json_grammarINS4_11basic_ptreeINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_NS8_4lessISE_EEEEEENS1_14parser_contextINS1_5nil_tEEENS1_7scannerINS8_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSS_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSS_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSU_ISY_S11_SY_S15_S16_S17_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEERNT_10definitionIT1_EEPKNS1_7grammarIS1I_T0_EE(i8) | 0) >> 2] | 0;
 if (!i1) {
  i9 = -1;
  i7 = 0;
  i8 = 0;
  i12 = HEAP32[i11 >> 2] | 0;
  HEAP32[i10 >> 2] = i12;
  i12 = i10 + 4 | 0;
  i11 = i7 & 1;
  HEAP8[i12 >> 0] = i11;
  i12 = i10 + 5 | 0;
  HEAP8[i12 >> 0] = i8;
  i12 = i10 + 8 | 0;
  HEAP32[i12 >> 2] = i9;
  STACKTOP = i13;
  return;
 }
 i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i9) | 0;
 i1 = i2 >> 31;
 if ((i1 | 0) == -1) {
  i9 = i2;
  i7 = (i1 | 0) != -1;
  i8 = 0;
  i12 = HEAP32[i11 >> 2] | 0;
  HEAP32[i10 >> 2] = i12;
  i12 = i10 + 4 | 0;
  i11 = i7 & 1;
  HEAP8[i12 >> 0] = i11;
  i12 = i10 + 5 | 0;
  HEAP8[i12 >> 0] = i8;
  i12 = i10 + 8 | 0;
  HEAP32[i12 >> 2] = i9;
  STACKTOP = i13;
  return;
 }
 i9 = i2;
 i7 = 1;
 i8 = (HEAP32[i11 >> 2] | 0) == (HEAP32[i12 >> 2] | 0) & 1;
 i12 = HEAP32[i11 >> 2] | 0;
 HEAP32[i10 >> 2] = i12;
 i12 = i10 + 4 | 0;
 i11 = i7 & 1;
 HEAP8[i12 >> 0] = i11;
 i12 = i10 + 5 | 0;
 HEAP8[i12 >> 0] = i8;
 i12 = i10 + 8 | 0;
 HEAP32[i12 >> 2] = i9;
 STACKTOP = i13;
 return;
}

function __ZNK12mp5_implicit9scylinder13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i32, i4, i34) {
 i32 = i32 | 0;
 i4 = i4 | 0;
 i34 = i34 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, d27 = 0.0, d28 = 0.0, d29 = 0.0, i30 = 0, i31 = 0, i33 = 0, i35 = 0, d36 = 0.0, d37 = 0.0, d38 = 0.0;
 i35 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i10 = i35;
 i1 = i10;
 i2 = i4;
 i3 = i1 + 52 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 i31 = HEAP32[i10 + 48 >> 2] | 0;
 i1 = i31 << 2;
 i33 = __Znwj(i1) | 0;
 HEAP32[i10 + 56 >> 2] = i33;
 HEAP32[i10 >> 2] = i33;
 HEAP32[i10 + 60 >> 2] = i31;
 if (i31 | 0) _memset(i33 | 0, 0, i1 | 0) | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 if (i1 | 0) {
  i2 = HEAP32[i4 + 56 >> 2] | 0;
  i3 = i33;
  while (1) {
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   i1 = i1 + -1 | 0;
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 i8 = HEAP32[i32 + 36 >> 2] | 0;
 d18 = +HEAPF32[i8 >> 2];
 d19 = +HEAPF32[i8 + 4 >> 2];
 d20 = +HEAPF32[i8 + 8 >> 2];
 d21 = +HEAPF32[i8 + 12 >> 2];
 d22 = +HEAPF32[i8 + 16 >> 2];
 d23 = +HEAPF32[i8 + 20 >> 2];
 d24 = +HEAPF32[i8 + 24 >> 2];
 d25 = +HEAPF32[i8 + 28 >> 2];
 d26 = +HEAPF32[i8 + 32 >> 2];
 d27 = +HEAPF32[i8 + 36 >> 2];
 d28 = +HEAPF32[i8 + 40 >> 2];
 d29 = +HEAPF32[i8 + 44 >> 2];
 i8 = HEAP32[i10 + 16 >> 2] | 0;
 i9 = (i8 | 0) == 0;
 if (i9) {
  __ZdlPv(i33);
  STACKTOP = i35;
  return;
 }
 i2 = HEAP32[i10 + 28 >> 2] | 0;
 i3 = i2 << 1;
 i6 = HEAP32[i10 >> 2] | 0;
 i7 = HEAP32[i10 + 40 >> 2] | 0;
 i1 = HEAP32[i10 + 24 >> 2] | 0;
 i4 = i6 + (i7 << 2) | 0;
 i5 = 0;
 do {
  i17 = i4 + ((Math_imul(i5, i1) | 0) << 2) | 0;
  d37 = +HEAPF32[i17 >> 2];
  i30 = i17 + (i2 << 2) | 0;
  d36 = +HEAPF32[i30 >> 2];
  i31 = i17 + (i3 << 2) | 0;
  HEAPF32[i17 >> 2] = d21 + (d18 * d37 + d19 * d36 + d20 * +HEAPF32[i31 >> 2]);
  HEAPF32[i30 >> 2] = d25 + (d22 * d37 + d23 * d36 + d24 * +HEAPF32[i31 >> 2]);
  HEAPF32[i31 >> 2] = d29 + (d26 * d37 + d27 * d36 + d28 * +HEAPF32[i31 >> 2]);
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != (i8 | 0));
 i1 = HEAP32[i10 + 32 >> 2] | 0;
 i31 = i6 + (i7 << 2) | 0;
 i30 = i8 + i1 | 0;
 if (i9) {
  __ZdlPv(i33);
  STACKTOP = i35;
  return;
 }
 i17 = HEAP32[i10 + 24 >> 2] | 0;
 i8 = HEAP32[i10 + 28 >> 2] | 0;
 i9 = i8 << 1;
 i10 = HEAP32[i32 + 16 >> 2] | 0;
 i11 = i10 + 4 | 0;
 i12 = i10 + 8 | 0;
 i13 = i32 + 4 | 0;
 i14 = i32 + 8 | 0;
 i15 = i32 + 12 | 0;
 i16 = i32 + 20 | 0;
 i7 = i32 + 24 | 0;
 i4 = HEAP32[i34 + 28 >> 2] | 0;
 i5 = i4 << 1;
 i6 = (HEAP32[i34 >> 2] | 0) + (HEAP32[i34 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i34 + 24 >> 2] | 0;
 i2 = 0;
 while (1) {
  i34 = i31 + ((Math_imul(i17, i1) | 0) << 2) | 0;
  d21 = +HEAPF32[i34 >> 2];
  d25 = +HEAPF32[i34 + (i8 << 2) >> 2];
  d37 = +HEAPF32[i34 + (i9 << 2) >> 2];
  d22 = +HEAPF32[i10 >> 2];
  d23 = +HEAPF32[i11 >> 2];
  d27 = +HEAPF32[i12 >> 2];
  d19 = +HEAPF32[i13 >> 2];
  d18 = +HEAPF32[i14 >> 2];
  d28 = +HEAPF32[i15 >> 2];
  d38 = d22 * (d21 - d19) + d23 * (d25 - d18) + d27 * (d37 - d28);
  d29 = +HEAPF32[i16 >> 2] - d38;
  d20 = d22 * d38;
  d26 = d21 - d20 - d19;
  d24 = d23 * d38;
  d18 = d25 - d24 - d18;
  d36 = d27 * d38;
  d28 = d37 - d36 - d28;
  d18 = +HEAPF32[i7 >> 2] - +Math_sqrt(+(d28 * d28 + (d26 * d26 + d18 * d18)));
  d26 = !(d38 <= d29) | !(d38 <= d18) ? 0.0 : 1.0;
  d28 = !(d29 <= d38) | !(d29 <= d18) ? 0.0 : 1.0;
  d29 = !(d18 <= d38) | !(d18 <= d29) ? 0.0 : 1.0;
  i34 = i6 + ((Math_imul(i3, i2) | 0) << 2) | 0;
  HEAPF32[i34 >> 2] = (d19 + d20 - d21) * d29 + (d22 * d26 - d22 * d28);
  HEAPF32[i34 + (i4 << 2) >> 2] = d23 * d26 - d23 * d28 + d29 * (d24 + +HEAPF32[i14 >> 2] - d25);
  HEAPF32[i34 + (i5 << 2) >> 2] = d27 * d26 - d27 * d28 + d29 * (d36 + +HEAPF32[i15 >> 2] - d37);
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == (i30 | 0)) break; else i2 = i2 + 1 | 0;
 }
 __ZdlPv(i33);
 STACKTOP = i35;
 return;
}

function __ZN5boost13property_tree11json_parser18read_json_internalINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEEEvRNS4_13basic_istreamINT_8key_type10value_typeENS6_ISG_EEEERSF_RKSA_(i4, i12, i3) {
 i4 = i4 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i6 = i14;
 i5 = i14 + 156 | 0;
 i13 = i14 + 140 | 0;
 i16 = i14 + 152 | 0;
 i15 = i14 + 136 | 0;
 i1 = i14 + 100 | 0;
 i2 = i14 + 88 | 0;
 i7 = i14 + 84 | 0;
 i8 = i14 + 80 | 0;
 i9 = i14 + 48 | 0;
 i10 = i14 + 24 | 0;
 i11 = i14 + 12 | 0;
 HEAP32[i16 >> 2] = HEAP32[i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2];
 HEAP32[i15 >> 2] = 0;
 HEAP32[i5 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i15 >> 2];
 __ZNSt3__16vectorIcNS_9allocatorIcEEEC2INS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEET_NS_9enable_ifIXaaaasr19__is_input_iteratorIS9_EE5valuentsr21__is_forward_iteratorIS9_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS9_E9referenceEEE5valueES9_E4typeE(i13, i5, i6);
 if (HEAP32[i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 31394, 10);
  __ZN5boost13property_tree17file_parser_errorC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_m(i1, i2, i3, 0);
  HEAP32[i1 >> 2] = 20840;
  __ZN5boost16exception_detail16throw_exception_INS_13property_tree11json_parser17json_parser_errorEEEvRKT_PKcS9_i(i1, 31405, 31706, 307);
 }
 __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEEC2Ev(i5);
 HEAP32[i7 >> 2] = HEAP32[i13 >> 2];
 i2 = i13 + 4 | 0;
 HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = 31955;
 HEAP32[i9 + 4 >> 2] = 31957;
 HEAP32[i9 + 12 >> 2] = 31958;
 HEAP32[i9 + 16 >> 2] = 31960;
 HEAP32[i9 + 24 >> 2] = 31961;
 HEAP32[i9 + 28 >> 2] = 31963;
 __ZN5boost6spirit7classic4impl13phrase_parserINS1_11alternativeINS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISA_SD_SA_SH_SI_SJ_EEEEE5parseINSt3__111__wrap_iterIPcEENS_13property_tree11json_parser12json_grammarINSU_11basic_ptreeINSQ_12basic_stringIcNSQ_11char_traitsIcEENSQ_9allocatorIcEEEES13_NSQ_4lessIS13_EEEEEEEENS1_10parse_infoIT_EERKS19_S1C_RKT0_RKSN_(i6, i7, i8, i5, i9);
 i16 = HEAP16[i6 + 4 >> 1] | 0;
 if ((i16 & 255) << 24 >> 24 == 0 | (i16 & 65535) < 256) {
  i16 = HEAP32[i13 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i11, 31964, 12);
  HEAP32[i10 >> 2] = 21124;
  HEAP32[i10 + 4 >> 2] = i16;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i10 + 8 | 0, i11);
  __ZN5boost16exception_detail16throw_exception_INS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEEEvRKT_PKcSK_i(i10, 31405, 31706, 318);
 }
 i15 = i5 + 48 | 0;
 HEAP32[i6 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i6 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
 HEAP32[i6 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 HEAP32[i12 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i12 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
 HEAP32[i12 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
 HEAP32[i15 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i15 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 i15 = i12 + 12 | 0;
 i1 = i5 + 60 | 0;
 i16 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i1 >> 2] = i16;
 __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEED2Ev(i5);
 i1 = HEAP32[i13 >> 2] | 0;
 if (!i1) {
  STACKTOP = i14;
  return;
 }
 if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) HEAP32[i2 >> 2] = i1;
 __ZdlPv(i1);
 STACKTOP = i14;
 return;
}

function __Z21object_factory_simplefNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(d2, i3) {
 d2 = +d2;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i4;
 if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i3, 30100) | 0)) {
  d2 = +Math_sin(+(d2 * .33 * 3.1415 * 2.0)) * .33 + .3;
  i3 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30111, 16) | 0, d2) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i5) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  i3 = __Znwj(28) | 0;
  HEAP32[i3 >> 2] = 20276;
  HEAPF32[i3 + 4 >> 2] = d2;
  HEAPF32[i3 + 8 >> 2] = 0.0;
  HEAPF32[i3 + 12 >> 2] = 0.0;
  HEAPF32[i3 + 16 >> 2] = 0.0;
  i5 = __Znaj(48) | 0;
  HEAP32[i3 + 20 >> 2] = i5;
  i1 = __Znaj(48) | 0;
  HEAP32[i3 + 24 >> 2] = i1;
  HEAPF32[i5 >> 2] = 1.0;
  HEAPF32[i1 >> 2] = 1.0;
  HEAPF32[i5 + 4 >> 2] = 0.0;
  HEAPF32[i1 + 4 >> 2] = 0.0;
  HEAPF32[i5 + 8 >> 2] = 0.0;
  HEAPF32[i1 + 8 >> 2] = 0.0;
  HEAPF32[i5 + 12 >> 2] = 0.0;
  HEAPF32[i1 + 12 >> 2] = 0.0;
  HEAPF32[i5 + 16 >> 2] = 0.0;
  HEAPF32[i1 + 16 >> 2] = 0.0;
  HEAPF32[i5 + 20 >> 2] = 1.0;
  HEAPF32[i1 + 20 >> 2] = 1.0;
  HEAPF32[i5 + 24 >> 2] = 0.0;
  HEAPF32[i1 + 24 >> 2] = 0.0;
  HEAPF32[i5 + 28 >> 2] = 0.0;
  HEAPF32[i1 + 28 >> 2] = 0.0;
  HEAPF32[i5 + 32 >> 2] = 0.0;
  HEAPF32[i1 + 32 >> 2] = 0.0;
  HEAPF32[i5 + 36 >> 2] = 0.0;
  HEAPF32[i1 + 36 >> 2] = 0.0;
  HEAPF32[i5 + 40 >> 2] = 1.0;
  HEAPF32[i1 + 40 >> 2] = 1.0;
  HEAPF32[i5 + 44 >> 2] = 0.0;
  HEAPF32[i1 + 44 >> 2] = 0.0;
  STACKTOP = i4;
  return i3 | 0;
 } else {
  i7 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30128, 35) | 0;
  i5 = HEAP8[i3 >> 0] | 0;
  i6 = (i5 & 1) == 0;
  i5 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i7, i6 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, i6 ? (i5 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0) | 0, 30164, 21) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 31](i3, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i5, i3) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i5) | 0;
  i5 = __Znwj(28) | 0;
  HEAP32[i5 >> 2] = 20276;
  HEAPF32[i5 + 4 >> 2] = 1.0e3;
  HEAPF32[i5 + 8 >> 2] = 0.0;
  HEAPF32[i5 + 12 >> 2] = 0.0;
  HEAPF32[i5 + 16 >> 2] = 0.0;
  i1 = __Znaj(48) | 0;
  HEAP32[i5 + 20 >> 2] = i1;
  i3 = __Znaj(48) | 0;
  HEAP32[i5 + 24 >> 2] = i3;
  HEAPF32[i1 >> 2] = 1.0;
  HEAPF32[i3 >> 2] = 1.0;
  HEAPF32[i1 + 4 >> 2] = 0.0;
  HEAPF32[i3 + 4 >> 2] = 0.0;
  HEAPF32[i1 + 8 >> 2] = 0.0;
  HEAPF32[i3 + 8 >> 2] = 0.0;
  HEAPF32[i1 + 12 >> 2] = 0.0;
  HEAPF32[i3 + 12 >> 2] = 0.0;
  HEAPF32[i1 + 16 >> 2] = 0.0;
  HEAPF32[i3 + 16 >> 2] = 0.0;
  HEAPF32[i1 + 20 >> 2] = 1.0;
  HEAPF32[i3 + 20 >> 2] = 1.0;
  HEAPF32[i1 + 24 >> 2] = 0.0;
  HEAPF32[i3 + 24 >> 2] = 0.0;
  HEAPF32[i1 + 28 >> 2] = 0.0;
  HEAPF32[i3 + 28 >> 2] = 0.0;
  HEAPF32[i1 + 32 >> 2] = 0.0;
  HEAPF32[i3 + 32 >> 2] = 0.0;
  HEAPF32[i1 + 36 >> 2] = 0.0;
  HEAPF32[i3 + 36 >> 2] = 0.0;
  HEAPF32[i1 + 40 >> 2] = 1.0;
  HEAPF32[i3 + 40 >> 2] = 1.0;
  HEAPF32[i1 + 44 >> 2] = 0.0;
  HEAPF32[i3 + 44 >> 2] = 0.0;
  STACKTOP = i4;
  return i5 | 0;
 }
 return 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(i1, i23, i8, i19, i18, d4) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i8 = i8 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d4 = +d4;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 i10 = i28 + 8 | 0;
 i3 = i28;
 i1 = i28 + 896 | 0;
 i5 = i28 + 888 | 0;
 i2 = i28 + 488 | 0;
 i20 = i28 + 480 | 0;
 i15 = i28 + 892 | 0;
 i12 = i28 + 476 | 0;
 i16 = i28 + 472 | 0;
 i24 = i28 + 460 | 0;
 i27 = i28 + 448 | 0;
 i26 = i28 + 436 | 0;
 i7 = i28 + 432 | 0;
 i9 = i28 + 32 | 0;
 i14 = i28 + 24 | 0;
 i13 = i28 + 16 | 0;
 i11 = i28 + 20 | 0;
 HEAP32[i5 >> 2] = i1;
 HEAPF64[i10 >> 3] = d4;
 i1 = _snprintf(i1, 100, 49302, i10) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[i3 >> 3] = d4;
  i1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i5, i1, 49302, i3) | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1 << 2) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i17 = i3;
   i29 = i3;
   i30 = i2;
   i22 = i1;
  }
 } else {
  i17 = i2;
  i29 = 0;
  i30 = 0;
  i22 = i1;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i6 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 53012) | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 48 >> 2] & 7](i6, i3, i3 + i22 | 0, i17) | 0;
 if (!i22) i5 = 0; else i5 = (HEAP8[HEAP32[i5 >> 2] >> 0] | 0) == 45;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i8, i5, i20, i15, i12, i16, i24, i27, i26, i7);
 i3 = HEAP32[i7 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = (i22 - i3 << 1 | 1) + i3 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2 << 2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i21 = i2;
  }
 } else {
  i25 = 0;
  i21 = i9;
 }
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i17, i17 + (i22 << 2) | 0, i6, i5, i15, HEAP32[i12 >> 2] | 0, HEAP32[i16 >> 2] | 0, i24, i27, i26, i3);
 HEAP32[i11 >> 2] = HEAP32[i23 >> 2];
 i23 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i21, i23, i2, i19, i18) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 if (i29 | 0) _free(i29);
 if (i30 | 0) _free(i30);
 STACKTOP = i28;
 return i2 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(i1, i23, i8, i19, i18, d4) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i8 = i8 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d4 = +d4;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 i10 = i28 + 8 | 0;
 i3 = i28;
 i1 = i28 + 284 | 0;
 i5 = i28 + 72 | 0;
 i2 = i28 + 184 | 0;
 i20 = i28 + 68 | 0;
 i15 = i28 + 180 | 0;
 i12 = i28 + 177 | 0;
 i16 = i28 + 176 | 0;
 i24 = i28 + 56 | 0;
 i27 = i28 + 44 | 0;
 i26 = i28 + 32 | 0;
 i7 = i28 + 28 | 0;
 i9 = i28 + 76 | 0;
 i14 = i28 + 24 | 0;
 i13 = i28 + 16 | 0;
 i11 = i28 + 20 | 0;
 HEAP32[i5 >> 2] = i1;
 HEAPF64[i10 >> 3] = d4;
 i1 = _snprintf(i1, 100, 49302, i10) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[i3 >> 3] = d4;
  i1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i5, i1, 49302, i3) | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i17 = i3;
   i29 = i3;
   i30 = i2;
   i22 = i1;
  }
 } else {
  i17 = i2;
  i29 = 0;
  i30 = 0;
  i22 = i1;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i6 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 52980) | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 7](i6, i3, i3 + i22 | 0, i17) | 0;
 if (!i22) i5 = 0; else i5 = (HEAP8[HEAP32[i5 >> 2] >> 0] | 0) == 45;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i8, i5, i20, i15, i12, i16, i24, i27, i26, i7);
 i3 = HEAP32[i7 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = (i22 - i3 << 1 | 1) + i3 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i21 = i2;
  }
 } else {
  i25 = 0;
  i21 = i9;
 }
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i17, i17 + i22 | 0, i6, i5, i15, HEAP8[i12 >> 0] | 0, HEAP8[i16 >> 0] | 0, i24, i27, i26, i3);
 HEAP32[i11 >> 2] = HEAP32[i23 >> 2];
 i23 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i21, i23, i2, i19, i18) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 if (i29 | 0) _free(i29);
 if (i30 | 0) _free(i30);
 STACKTOP = i28;
 return i2 | 0;
}

function __ZNK12mp5_implicit5scone13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i21, i4, i29) {
 i21 = i21 | 0;
 i4 = i4 | 0;
 i29 = i29 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i30 = 0, d31 = 0.0, d32 = 0.0;
 i30 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i27 = i30;
 i1 = i27;
 i2 = i4;
 i3 = i1 + 52 | 0;
 do {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 } while ((i1 | 0) < (i3 | 0));
 i26 = HEAP32[i27 + 48 >> 2] | 0;
 i1 = i26 << 2;
 i28 = __Znwj(i1) | 0;
 HEAP32[i27 + 56 >> 2] = i28;
 HEAP32[i27 >> 2] = i28;
 HEAP32[i27 + 60 >> 2] = i26;
 if (i26 | 0) _memset(i28 | 0, 0, i1 | 0) | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 if (i1 | 0) {
  i2 = HEAP32[i4 + 56 >> 2] | 0;
  i3 = i28;
  while (1) {
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   i1 = i1 + -1 | 0;
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 i20 = HEAP32[i21 + 36 >> 2] | 0;
 d5 = +HEAPF32[i20 >> 2];
 d6 = +HEAPF32[i20 + 4 >> 2];
 d7 = +HEAPF32[i20 + 8 >> 2];
 d8 = +HEAPF32[i20 + 12 >> 2];
 d9 = +HEAPF32[i20 + 16 >> 2];
 d10 = +HEAPF32[i20 + 20 >> 2];
 d11 = +HEAPF32[i20 + 24 >> 2];
 d12 = +HEAPF32[i20 + 28 >> 2];
 d13 = +HEAPF32[i20 + 32 >> 2];
 d14 = +HEAPF32[i20 + 36 >> 2];
 d15 = +HEAPF32[i20 + 40 >> 2];
 d16 = +HEAPF32[i20 + 44 >> 2];
 i20 = HEAP32[i27 + 16 >> 2] | 0;
 i26 = (i20 | 0) == 0;
 if (i26) {
  i2 = i28;
  i1 = HEAP32[i27 + 40 >> 2] | 0;
 } else {
  i4 = HEAP32[i27 + 28 >> 2] | 0;
  i17 = i4 << 1;
  i2 = HEAP32[i27 >> 2] | 0;
  i1 = HEAP32[i27 + 40 >> 2] | 0;
  i3 = HEAP32[i27 + 24 >> 2] | 0;
  i18 = i2 + (i1 << 2) | 0;
  i19 = 0;
  do {
   i23 = i18 + ((Math_imul(i19, i3) | 0) << 2) | 0;
   d32 = +HEAPF32[i23 >> 2];
   i24 = i23 + (i4 << 2) | 0;
   d31 = +HEAPF32[i24 >> 2];
   i25 = i23 + (i17 << 2) | 0;
   HEAPF32[i23 >> 2] = d8 + (d5 * d32 + d6 * d31 + d7 * +HEAPF32[i25 >> 2]);
   HEAPF32[i24 >> 2] = d12 + (d9 * d32 + d10 * d31 + d11 * +HEAPF32[i25 >> 2]);
   HEAPF32[i25 >> 2] = d16 + (d13 * d32 + d14 * d31 + d15 * +HEAPF32[i25 >> 2]);
   i19 = i19 + 1 | 0;
  } while ((i19 | 0) != (i20 | 0));
 }
 d5 = +HEAPF32[i21 + 8 >> 2];
 d6 = +HEAPF32[i21 + 12 >> 2];
 d9 = +HEAPF32[i21 + 16 >> 2];
 d10 = +HEAPF32[i21 + 20 >> 2];
 d11 = +HEAPF32[i21 + 24 >> 2];
 i25 = i21 + 28 | 0;
 d12 = +HEAPF32[i25 >> 2];
 i22 = HEAP32[i27 + 32 >> 2] | 0;
 i24 = i2 + (i1 << 2) | 0;
 i23 = i20 + i22 | 0;
 i21 = i21 + 4 | 0;
 if (i26) {
  __ZdlPv(i28);
  STACKTOP = i30;
  return;
 }
 i17 = i29 + 40 | 0;
 i18 = i29 + 24 | 0;
 i19 = i29 + 28 | 0;
 i20 = HEAP32[i27 + 24 >> 2] | 0;
 i3 = HEAP32[i27 + 28 >> 2] | 0;
 i4 = i3 << 1;
 d8 = d5 * d5;
 d7 = d6 * d6;
 d5 = d9 * d9;
 d6 = d12;
 i1 = i22;
 i2 = 0;
 while (1) {
  if (!(d6 - d12 <= +HEAPF32[i21 >> 2])) {
   i26 = (HEAP32[i29 >> 2] | 0) + (HEAP32[i17 >> 2] << 2) + ((Math_imul(HEAP32[i18 >> 2] | 0, i2) | 0) << 2) | 0;
   HEAPF32[i26 >> 2] = 0.0;
   i27 = HEAP32[i19 >> 2] | 0;
   HEAPF32[i26 + (i27 << 2) >> 2] = 0.0;
   HEAPF32[i26 + (i27 << 1 << 2) >> 2] = -1.0;
  } else {
   i27 = i24 + ((Math_imul(i20, i1) | 0) << 2) | 0;
   d31 = +HEAPF32[i27 + (i3 << 2) >> 2];
   d32 = +HEAPF32[i27 + (i4 << 2) >> 2];
   i26 = (HEAP32[i29 >> 2] | 0) + (HEAP32[i17 >> 2] << 2) + ((Math_imul(HEAP32[i18 >> 2] | 0, i2) | 0) << 2) | 0;
   HEAPF32[i26 >> 2] = (+HEAPF32[i27 >> 2] - d10) * -2.0 / d8;
   i27 = HEAP32[i19 >> 2] | 0;
   HEAPF32[i26 + (i27 << 2) >> 2] = (d31 - d11) * -2.0 / d7;
   HEAPF32[i26 + (i27 << 1 << 2) >> 2] = (d32 - d12) * 2.0 / d5;
  }
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == (i23 | 0)) break;
  d6 = +HEAPF32[i25 >> 2];
  i2 = i2 + 1 | 0;
 }
 __ZdlPv(i28);
 STACKTOP = i30;
 return;
}

function __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i17 = i18;
 i6 = i1 + 4 | 0;
 i5 = __Znwj(48) | 0;
 HEAP32[i6 >> 2] = i5;
 i15 = i1 + 8 | 0;
 i16 = i2 + 8 | 0;
 i13 = i1 + 12 | 0;
 HEAP32[i13 >> 2] = 0;
 i14 = i2 + 12 | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 i12 = i2 + 4 | 0;
 i3 = HEAP32[i12 >> 2] | 0;
 HEAP32[i17 + 4 >> 2] = i1;
 HEAP32[i17 + 12 >> 2] = i1;
 i11 = i17 + 16 | 0;
 i2 = i3;
 if (!i1) i1 = 0; else i1 = __Znwj(i1 << 3) | 0;
 HEAP32[i11 >> 2] = i1;
 i4 = i17 + 20 | 0;
 HEAP32[i4 >> 2] = 0;
 i10 = i17 + 24 | 0;
 HEAP32[i10 >> 2] = i3;
 i8 = i17 + 28 | 0;
 HEAP32[i8 >> 2] = i5;
 i9 = i17 + 32 | 0;
 HEAP8[i9 >> 0] = 0;
 i1 = HEAP32[i2 + 44 >> 2] | 0;
 i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
 if ((i1 | 0) == (i2 | 0)) {
  i7 = 0;
  i1 = i5;
 } else {
  do {
   __ZN5boost11multi_index6detail8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_13property_tree11basic_ptreeISD_SD_NS6_4lessISD_EEEEEENSB_ISK_EEEEEEEESL_E5cloneEPSO_(i17, i1);
   i7 = HEAP32[i1 + 44 >> 2] | 0;
   i1 = (i7 | 0) == 0 ? 0 : i7 + -40 | 0;
  } while ((i1 | 0) != (i2 | 0));
  i7 = HEAP32[i4 >> 2] << 3 >> 3;
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i12 >> 2] | 0;
 }
 i6 = i1;
 do {
  i5 = HEAP32[i2 + 44 >> 2] | 0;
  i2 = (i5 | 0) == 0 ? 0 : i5 + -40 | 0;
  if ((HEAP32[i10 >> 2] | 0) == (i2 | 0)) i1 = i8; else {
   i1 = HEAP32[i11 >> 2] | 0;
   i3 = i7;
   L13 : while (1) {
    while (1) {
     if (!i3) break L13;
     i4 = (i3 | 0) / 2 | 0;
     i5 = i1 + (i4 << 3) | 0;
     if ((HEAP32[i5 >> 2] | 0) >>> 0 < i2 >>> 0) {
      i1 = i5;
      break;
     } else i3 = i4;
    }
    i1 = i1 + 8 | 0;
    i3 = i3 + -1 - i4 | 0;
   }
   i1 = i1 + 4 | 0;
  }
  i4 = i6;
  i6 = HEAP32[i1 >> 2] | 0;
  i5 = i6 + 40 | 0;
  HEAP32[i4 + 44 >> 2] = i5;
  HEAP32[i5 >> 2] = i4 + 40;
 } while ((i2 | 0) != (HEAP32[i12 >> 2] | 0));
 __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE5copy_ERKS16_RKNS1_8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEESY_EE(i15, i16, i17);
 HEAP8[i9 >> 0] = 1;
 HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
 __ZN5boost11multi_index6detail8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_13property_tree11basic_ptreeISD_SD_NS6_4lessISD_EEEEEENSB_ISK_EEEEEEEESL_ED2Ev(i17);
 STACKTOP = i18;
 return;
}

function __ZNK5boost6spirit7classic6actionINS1_11alternativeINS3_INS3_INS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS3_INS3_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS3_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EESH_EESH_EESH_EENS_13property_tree11json_parser7contextINS16_11basic_ptreeINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEES1F_NS6_4lessIS1F_EEEEE13a_literal_valEE5parseIS10_EENS1_13parser_resultIS1L_T_E4typeERKS1O_(i14, i8) {
 i14 = i14 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i15 + 20 | 0;
 i9 = i15 + 8 | 0;
 i11 = i15 + 4 | 0;
 i12 = i15;
 i7 = HEAP32[i8 >> 2] | 0;
 i13 = i8 + 4 | 0;
 i6 = HEAP32[i13 >> 2] | 0;
 HEAP32[i9 >> 2] = i7;
 HEAP32[i9 + 4 >> 2] = i6;
 HEAP32[i9 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i9) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i10, i3, i9, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i13 >> 2] | 0;
 }
 HEAP32[HEAP32[i13 >> 2] >> 2] = i1;
 i2 = HEAP32[HEAP32[i13 >> 2] >> 2] | 0;
 i1 = __ZNK5boost6spirit7classic11alternativeINS2_INS2_INS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSC_ISG_SJ_SG_SN_SO_SP_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES10_EESG_EESG_EESG_E5parseISZ_EENS1_13parser_resultIS14_T_E4typeERKS17_(i14, i8) | 0;
 if ((i1 | 0) < 0) {
  STACKTOP = i15;
  return i1 | 0;
 }
 i13 = HEAP32[i13 >> 2] | 0;
 HEAP32[i11 >> 2] = i2;
 HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE13a_literal_valclENS4_11__wrap_iterIPcEESI_(i14 + 28 | 0, i9, i10);
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_10differenceINS4_INS1_14anychar_parserENS1_6strlitIPKcEEEES9_EENS_13property_tree11json_parser7contextINSC_11basic_ptreeINSt3__112basic_stringIcNSG_11char_traitsIcEENSG_9allocatorIcEEEESM_NSG_4lessISM_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISM_NS1_4ruleINS1_7scannerINSG_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserIS9_NS1_11kleene_starIS5_EENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS9_S18_S9_S1C_S1D_S1E_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1Q_EEEEEEE5parseIS1P_EENS1_13parser_resultIS1U_T_E4typeERKS1X_(i13, i11) {
 i13 = i13 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i7 = i11 + 4 | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 i8 = HEAP32[i1 >> 2] | 0;
 i9 = i8;
 i10 = i11 + 8 | 0;
 do if ((i9 | 0) != (HEAP32[i10 >> 2] | 0)) {
  HEAP32[i1 >> 2] = i9 + 1;
  i1 = HEAP32[i7 >> 2] | 0;
  i6 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i8;
  i1 = HEAP32[i13 >> 2] | 0;
  i4 = HEAP32[i13 + 4 >> 2] | 0;
  i5 = i4 - i1 | 0;
  L3 : do if ((i1 | 0) == (i4 | 0)) i12 = 6; else {
   i2 = i1;
   while (1) {
    i1 = HEAP32[i7 >> 2] | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i10 >> 2] | 0)) break;
    if ((HEAP8[i2 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) break;
    i2 = i2 + 1 | 0;
    HEAP32[i1 >> 2] = i3 + 1;
    if ((i2 | 0) == (i4 | 0)) {
     i12 = 6;
     break L3;
    }
   }
  } while (0);
  if ((i12 | 0) == 6) {
   if ((i5 | 0) >= 1) break;
   i1 = HEAP32[i7 >> 2] | 0;
  }
  HEAP32[i1 >> 2] = i6;
  i1 = HEAP32[i7 >> 2] | 0;
  i6 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 >> 2] = i8;
  i1 = HEAP32[i13 + 8 >> 2] | 0;
  i4 = HEAP32[i13 + 12 >> 2] | 0;
  i5 = i4 - i1 | 0;
  L13 : do if ((i1 | 0) == (i4 | 0)) i12 = 13; else {
   i2 = i1;
   while (1) {
    i1 = HEAP32[i7 >> 2] | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i10 >> 2] | 0)) break;
    if ((HEAP8[i2 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) break;
    i2 = i2 + 1 | 0;
    HEAP32[i1 >> 2] = i3 + 1;
    if ((i2 | 0) == (i4 | 0)) {
     i12 = 13;
     break L13;
    }
   }
  } while (0);
  if ((i12 | 0) == 13) {
   if ((i5 | 0) >= 1) break;
   i1 = HEAP32[i7 >> 2] | 0;
  }
  HEAP32[i1 >> 2] = i6;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i13 + 16 >> 2] | 0, HEAP8[i9 >> 0] | 0);
  i13 = 1;
  return i13 | 0;
 } while (0);
 HEAP32[HEAP32[i7 >> 2] >> 2] = i8;
 i1 = HEAP32[i7 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i10 >> 2] | 0)) {
  i13 = -1;
  return i13 | 0;
 }
 if ((HEAP8[i13 + 20 >> 0] | 0) != (HEAP8[i2 >> 0] | 0)) {
  i13 = -1;
  return i13 | 0;
 }
 HEAP32[i1 >> 2] = i2 + 1;
 i13 = __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSI_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSI_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSK_ISO_SR_SO_SV_SW_SX_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEE5parseIS18_EENS1_13parser_resultIS1B_T_E4typeERKS1E_(i13 + 24 | 0, i11) | 0;
 i13 = (i13 | 0) < 0 ? -1 : i13 + 1 | 0;
 return i13 | 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i23, i3, i20, i19, i18) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i3 = i3 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 i9 = i28 + 468 | 0;
 i21 = i28 + 464 | 0;
 i16 = i28 + 472 | 0;
 i13 = i28 + 460 | 0;
 i17 = i28 + 456 | 0;
 i24 = i28 + 444 | 0;
 i27 = i28 + 432 | 0;
 i26 = i28 + 420 | 0;
 i6 = i28 + 416 | 0;
 i8 = i28 + 16 | 0;
 i15 = i28 + 8 | 0;
 i14 = i28 + 4 | 0;
 i10 = i28;
 i1 = __ZNKSt3__18ios_base6getlocEv(i20) | 0;
 HEAP32[i21 >> 2] = i1;
 i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i21, 53012) | 0;
 i7 = HEAP8[i18 >> 0] | 0;
 i2 = (i7 & 1) == 0;
 i12 = i18 + 4 | 0;
 if (!((i2 ? (i7 & 255) >>> 1 : HEAP32[i12 >> 2] | 0) | 0)) i7 = 0; else {
  i7 = HEAP32[(i2 ? i12 : HEAP32[i18 + 8 >> 2] | 0) >> 2] | 0;
  i7 = (i7 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] & 31](i11, 45) | 0);
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i3, i7, i21, i16, i13, i17, i24, i27, i26, i6);
 i4 = HEAP8[i18 >> 0] | 0;
 i5 = HEAP32[i12 >> 2] | 0;
 i2 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : i5;
 i3 = HEAP32[i6 >> 2] | 0;
 if ((i2 | 0) > (i3 | 0)) {
  i29 = HEAP8[i26 >> 0] | 0;
  i6 = HEAP8[i27 >> 0] | 0;
  i2 = (i2 - i3 << 1 | 1) + i3 + ((i29 & 1) == 0 ? (i29 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i29 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i29 & 1) == 0 ? (i29 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2 << 2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i22 = i2;
  }
 } else {
  i25 = 0;
  i22 = i8;
 }
 i29 = (i4 & 1) == 0;
 i2 = i29 ? i12 : HEAP32[i18 + 8 >> 2] | 0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i22, i15, i14, HEAP32[i20 + 4 >> 2] | 0, i2, i2 + ((i29 ? (i4 & 255) >>> 1 : i5) << 2) | 0, i11, i7, i16, HEAP32[i13 >> 2] | 0, HEAP32[i17 >> 2] | 0, i24, i27, i26, i3);
 HEAP32[i10 >> 2] = HEAP32[i23 >> 2];
 i29 = HEAP32[i15 >> 2] | 0;
 i2 = HEAP32[i14 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i22, i29, i2, i20, i19) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i21 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 STACKTOP = i28;
 return i2 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i22, i4, i19, i18, i17) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i4 = i4 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i20 = 0, i21 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i9 = i27 + 56 | 0;
 i20 = i27 + 52 | 0;
 i15 = i27 + 164 | 0;
 i12 = i27 + 161 | 0;
 i16 = i27 + 160 | 0;
 i23 = i27 + 40 | 0;
 i26 = i27 + 28 | 0;
 i25 = i27 + 16 | 0;
 i6 = i27 + 12 | 0;
 i8 = i27 + 60 | 0;
 i14 = i27 + 8 | 0;
 i13 = i27 + 4 | 0;
 i10 = i27;
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 52980) | 0;
 i7 = HEAP8[i17 >> 0] | 0;
 i2 = (i7 & 1) == 0;
 i3 = i17 + 4 | 0;
 if (!((i2 ? (i7 & 255) >>> 1 : HEAP32[i3 >> 2] | 0) | 0)) i7 = 0; else {
  i7 = HEAP8[(i2 ? i17 + 1 | 0 : HEAP32[i17 + 8 >> 2] | 0) >> 0] | 0;
  i7 = i7 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 31](i11, 45) | 0) << 24 >> 24;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i23 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i25 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i4, i7, i20, i15, i12, i16, i23, i26, i25, i6);
 i5 = HEAP8[i17 >> 0] | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i2 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : i4;
 i3 = HEAP32[i6 >> 2] | 0;
 if ((i2 | 0) > (i3 | 0)) {
  i28 = HEAP8[i25 >> 0] | 0;
  i6 = HEAP8[i26 >> 0] | 0;
  i2 = (i2 - i3 << 1 | 1) + i3 + ((i28 & 1) == 0 ? (i28 & 255) >>> 1 : HEAP32[i25 + 4 >> 2] | 0) + ((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) | 0;
 } else {
  i28 = HEAP8[i25 >> 0] | 0;
  i2 = HEAP8[i26 >> 0] | 0;
  i2 = i3 + 2 + ((i28 & 1) == 0 ? (i28 & 255) >>> 1 : HEAP32[i25 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i24 = i2;
   i21 = i2;
  }
 } else {
  i24 = 0;
  i21 = i8;
 }
 i28 = (i5 & 1) == 0;
 i2 = i28 ? i17 + 1 | 0 : HEAP32[i17 + 8 >> 2] | 0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i2, i2 + (i28 ? (i5 & 255) >>> 1 : i4) | 0, i11, i7, i15, HEAP8[i12 >> 0] | 0, HEAP8[i16 >> 0] | 0, i23, i26, i25, i3);
 HEAP32[i10 >> 2] = HEAP32[i22 >> 2];
 i28 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i21, i28, i2, i19, i18) | 0;
 if (i24) {
  _free(i24);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 STACKTOP = i27;
 return i2 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE16do_parse_virtualERKS1O_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = __ZNK5boost6spirit7classic8sequenceINS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS5_NS2_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS7_INS7_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSA_INS1_14anychar_parserEEENS7_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSP_IST_SV_ST_SZ_S10_S11_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISF_T_E4typeERKS1D_(i7 + 4 | 0, i6) | 0;
 if ((i4 | 0) < 0) {
  i7 = -1;
  return i7 | 0;
 }
 i5 = i6 + 4 | 0;
 i3 = HEAP32[HEAP32[i5 >> 2] >> 2] | 0;
 i2 = __ZNK5boost6spirit7classic8sequenceINS1_5chlitIcEENS1_8positiveINS1_12digit_parserEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS8_T_E4typeERKS18_(i7 + 9 | 0, i6) | 0;
 if ((i2 | 0) < 0) {
  HEAP32[HEAP32[i5 >> 2] >> 2] = i3;
  i2 = 0;
 }
 i4 = i2 + i4 | 0;
 if ((i4 | 0) < 0) {
  i7 = -1;
  return i7 | 0;
 }
 i2 = HEAP32[HEAP32[i5 >> 2] >> 2] | 0;
 i3 = __ZNK5boost6spirit7classic8sequenceINS1_5chsetIcEENS1_8optionalIS4_EEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSG_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSG_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSI_ISM_SP_SM_ST_SU_SV_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS7_T_E4typeERKS17_(i7 + 12 | 0, i6) | 0;
 if (!((i3 | 0) >= 0 ? (i1 = __ZNK5boost6spirit7classic8positiveINS1_12digit_parserEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS4_T_E4typeERKS14_(i7 + 28 | 0, i6) | 0, i1 = (i1 | 0) < 0 ? -1 : i1 + i3 | 0, (i1 | 0) >= 0) : 0)) {
  HEAP32[HEAP32[i5 >> 2] >> 2] = i2;
  i1 = 0;
 }
 i7 = i1 + i4 | 0;
 return i7 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i14, i13, i6, i12) {
 i3 = i3 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i6 = i6 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 L1 : do if ((i3 | 0) == (HEAP32[i14 + 8 >> 2] | 0)) {
  if ((HEAP32[i14 + 4 >> 2] | 0) == (i13 | 0) ? (i1 = i14 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i6;
 } else {
  if ((i3 | 0) != (HEAP32[i14 >> 2] | 0)) {
   i11 = HEAP32[i3 + 12 >> 2] | 0;
   i4 = i3 + 16 + (i11 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3 + 16 | 0, i14, i13, i6, i12);
   i1 = i3 + 24 | 0;
   if ((i11 | 0) <= 1) break;
   i2 = HEAP32[i3 + 8 >> 2] | 0;
   if ((i2 & 2 | 0) == 0 ? (i5 = i14 + 36 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
    if (!(i2 & 1)) {
     i2 = i14 + 54 | 0;
     while (1) {
      if (HEAP8[i2 >> 0] | 0) break L1;
      if ((HEAP32[i5 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
      i1 = i1 + 8 | 0;
      if (i1 >>> 0 >= i4 >>> 0) break L1;
     }
    }
    i2 = i14 + 24 | 0;
    i3 = i14 + 54 | 0;
    while (1) {
     if (HEAP8[i3 >> 0] | 0) break L1;
     if ((HEAP32[i5 >> 2] | 0) == 1 ? (HEAP32[i2 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
     i1 = i1 + 8 | 0;
     if (i1 >>> 0 >= i4 >>> 0) break L1;
    }
   }
   i2 = i14 + 54 | 0;
   while (1) {
    if (HEAP8[i2 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
    i1 = i1 + 8 | 0;
    if (i1 >>> 0 >= i4 >>> 0) break L1;
   }
  }
  if ((HEAP32[i14 + 16 >> 2] | 0) != (i13 | 0) ? (i11 = i14 + 20 | 0, (HEAP32[i11 >> 2] | 0) != (i13 | 0)) : 0) {
   HEAP32[i14 + 32 >> 2] = i6;
   i10 = i14 + 44 | 0;
   if ((HEAP32[i10 >> 2] | 0) == 4) break;
   i4 = i3 + 16 + (HEAP32[i3 + 12 >> 2] << 3) | 0;
   i5 = i14 + 52 | 0;
   i6 = i14 + 53 | 0;
   i8 = i14 + 54 | 0;
   i7 = i3 + 8 | 0;
   i9 = i14 + 24 | 0;
   i2 = 0;
   i1 = 0;
   i3 = i3 + 16 | 0;
   L34 : while (1) {
    if (i3 >>> 0 >= i4 >>> 0) {
     i3 = 20;
     break;
    }
    HEAP8[i5 >> 0] = 0;
    HEAP8[i6 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i3, i14, i13, i13, 1, i12);
    if (HEAP8[i8 >> 0] | 0) {
     i3 = 20;
     break;
    }
    do if (HEAP8[i6 >> 0] | 0) {
     if (!(HEAP8[i5 >> 0] | 0)) if (!(HEAP32[i7 >> 2] & 1)) {
      i1 = 1;
      i3 = 20;
      break L34;
     } else {
      i1 = 1;
      break;
     }
     if ((HEAP32[i9 >> 2] | 0) == 1) {
      i3 = 25;
      break L34;
     }
     if (!(HEAP32[i7 >> 2] & 2)) {
      i3 = 25;
      break L34;
     } else {
      i2 = 1;
      i1 = 1;
     }
    } while (0);
    i3 = i3 + 8 | 0;
   }
   do if ((i3 | 0) == 20) {
    if ((!i2 ? (HEAP32[i11 >> 2] = i13, i13 = i14 + 40 | 0, HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 1, (HEAP32[i14 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i9 >> 2] | 0) == 2 : 0) {
     HEAP8[i8 >> 0] = 1;
     if (i1) {
      i3 = 25;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i3 = 25; else i1 = 4;
   } while (0);
   if ((i3 | 0) == 25) i1 = 3;
   HEAP32[i10 >> 2] = i1;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i14 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i1, i11, i12, i3, i13, i14, i10, i2) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0;
 HEAP32[i12 >> 2] = i1;
 HEAP32[i14 >> 2] = i3;
 if (i2 & 4) {
  i1 = HEAP32[i12 >> 2] | 0;
  i2 = i11;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i12 >> 2] = i1 + 3;
 } else i2 = i11;
 i8 = i13;
 L9 : while (1) {
  i5 = HEAP32[i12 >> 2] | 0;
  i1 = i5 >>> 0 < i11 >>> 0;
  if (!i1) {
   i15 = 41;
   break;
  }
  i9 = HEAP32[i14 >> 2] | 0;
  if (i9 >>> 0 >= i13 >>> 0) {
   i15 = 41;
   break;
  }
  i1 = HEAP8[i5 >> 0] | 0;
  i7 = i1 & 255;
  if (i7 >>> 0 > i10 >>> 0) {
   i1 = 2;
   break;
  }
  do if (i1 << 24 >> 24 > -1) {
   HEAP16[i9 >> 1] = i1 & 255;
   HEAP32[i12 >> 2] = i5 + 1;
  } else {
   if ((i1 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i1 & 255) < 224) {
    if ((i2 - i5 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i5 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i7 << 6 & 1984;
    if (i1 >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 2;
    break;
   }
   if ((i1 & 255) < 240) {
    if ((i2 - i5 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i5 + 1 >> 0] | 0;
    i1 = HEAP8[i5 + 2 >> 0] | 0;
    switch (i7 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i7 << 12 | i1 & 63;
    if ((i1 & 65535) >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 3;
    break;
   }
   if ((i1 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i5 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i4 = HEAP8[i5 + 1 >> 0] | 0;
   i1 = HEAP8[i5 + 2 >> 0] | 0;
   i3 = HEAP8[i5 + 3 >> 0] | 0;
   switch (i7 | 0) {
   case 240:
    {
     if ((i4 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case 244:
    {
     if ((i4 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i4 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i6 = i1 & 255;
   if ((i6 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   if ((i8 - i9 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = i7 & 7;
   i4 = i4 & 255;
   i3 = i6 << 6;
   i1 = i1 & 63;
   if ((i4 << 12 & 258048 | i5 << 18 | i3 & 4032 | i1) >>> 0 > i10 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP16[i9 >> 1] = i4 << 2 & 60 | i6 >>> 4 & 3 | ((i4 >>> 4 & 3 | i5 << 2) << 6) + 16320 | 55296;
   i9 = i9 + 2 | 0;
   HEAP32[i14 >> 2] = i9;
   HEAP16[i9 >> 1] = i1 | i3 & 960 | 56320;
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 4;
  } while (0);
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 2;
 }
 if ((i15 | 0) == 41) i1 = i1 & 1;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS_13property_tree11json_parser7contextINS13_11basic_ptreeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEES1C_NS5_4lessIS1C_EEEEE6a_nameEE5parseIS10_EENS1_13parser_resultIS1I_T_E4typeERKS1L_(i12, i10) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i13;
 i8 = i13 + 12 | 0;
 i3 = HEAP32[i10 >> 2] | 0;
 i9 = i10 + 4 | 0;
 i5 = HEAP32[i9 >> 2] | 0;
 HEAP32[i8 >> 2] = i3;
 HEAP32[i8 + 4 >> 2] = i5;
 HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
 i6 = i3 + 12 | 0;
 i7 = i3 + 20 | 0;
 i4 = i3 + 24 | 0;
 i1 = i5;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i8) | 0) < 0 ? (HEAP32[i5 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i11, i6, i8, i6, i7, i4) | 0) < 0) : 0) break;
  i1 = HEAP32[i9 >> 2] | 0;
 }
 HEAP32[HEAP32[i9 >> 2] >> 2] = i1;
 i1 = HEAP32[HEAP32[i12 >> 2] >> 2] | 0;
 if (!i1) {
  i12 = -1;
  STACKTOP = i13;
  return i12 | 0;
 }
 i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i10) | 0;
 if ((i2 | 0) < 0) {
  i12 = i2;
  STACKTOP = i13;
  return i12 | 0;
 }
 i1 = i12 + 4 | 0;
 i12 = HEAP32[i1 >> 2] | 0;
 i10 = i12 + 12 | 0;
 HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i11 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
 HEAP32[i11 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i10 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
 HEAP32[i10 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 HEAP32[i12 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i12 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
 HEAP32[i12 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
 i1 = HEAP32[i1 >> 2] | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP8[i1 + 1 >> 0] = 0;
  HEAP8[i1 >> 0] = 0;
  i12 = i2;
  STACKTOP = i13;
  return i12 | 0;
 } else {
  HEAP8[HEAP32[i1 + 8 >> 2] >> 0] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i12 = i2;
  STACKTOP = i13;
  return i12 | 0;
 }
 return 0;
}

function __Z21Matrix_Matrix_ProductPfPKf(i18, i1) {
 i18 = i18 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, i25 = 0, d26 = 0.0, i27 = 0, i28 = 0;
 i16 = __Znwj(64) | 0;
 i17 = __Znwj(64) | 0;
 HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i16 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
 HEAP32[i16 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
 HEAP32[i16 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
 HEAP32[i17 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i17 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i17 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i17 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 i14 = i17 + 16 | 0;
 i20 = i1 + 16 | 0;
 i15 = i16 + 16 | 0;
 i19 = i18 + 16 | 0;
 HEAP32[i15 >> 2] = HEAP32[i19 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
 HEAP32[i15 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
 HEAP32[i15 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
 HEAP32[i14 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i14 + 4 >> 2] = HEAP32[i20 + 4 >> 2];
 HEAP32[i14 + 8 >> 2] = HEAP32[i20 + 8 >> 2];
 HEAP32[i14 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
 i14 = i17 + 32 | 0;
 i1 = i1 + 32 | 0;
 i20 = i16 + 32 | 0;
 i15 = i18 + 32 | 0;
 HEAP32[i20 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i20 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
 HEAP32[i20 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
 HEAP32[i20 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
 HEAP32[i14 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i14 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i14 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i14 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAPF32[i16 + 60 >> 2] = 1.0;
 HEAPF32[i16 + 48 >> 2] = 0.0;
 HEAPF32[i16 + 52 >> 2] = 0.0;
 HEAPF32[i16 + 56 >> 2] = 0.0;
 HEAPF32[i17 + 60 >> 2] = 1.0;
 HEAPF32[i17 + 48 >> 2] = 0.0;
 HEAPF32[i17 + 52 >> 2] = 0.0;
 HEAPF32[i17 + 56 >> 2] = 0.0;
 i1 = __Znwj(64) | 0;
 d2 = +HEAPF32[i17 + 4 >> 2];
 d3 = +HEAPF32[i17 + 20 >> 2];
 d4 = +HEAPF32[i17 + 36 >> 2];
 d5 = +HEAPF32[i17 + 8 >> 2];
 d6 = +HEAPF32[i17 + 24 >> 2];
 d7 = +HEAPF32[i17 + 40 >> 2];
 d8 = +HEAPF32[i17 + 12 >> 2];
 d9 = +HEAPF32[i17 + 28 >> 2];
 d10 = +HEAPF32[i17 + 44 >> 2];
 d11 = +HEAPF32[i17 >> 2];
 d12 = +HEAPF32[i17 + 16 >> 2];
 d13 = +HEAPF32[i17 + 32 >> 2];
 i14 = 0;
 do {
  i28 = i14 << 2;
  d24 = +HEAPF32[i16 + (i28 << 2) >> 2];
  i27 = i28 | 1;
  d23 = +HEAPF32[i16 + (i27 << 2) >> 2];
  i25 = i28 | 2;
  d22 = +HEAPF32[i16 + (i25 << 2) >> 2];
  i20 = i28 | 3;
  d21 = +HEAPF32[i16 + (i20 << 2) >> 2];
  d26 = d21 * 0.0;
  HEAPF32[i1 + (i28 << 2) >> 2] = d24 * d11 + 0.0 + d23 * d12 + d22 * d13 + d26;
  HEAPF32[i1 + (i27 << 2) >> 2] = d24 * d2 + 0.0 + d23 * d3 + d22 * d4 + d26;
  HEAPF32[i1 + (i25 << 2) >> 2] = d24 * d5 + 0.0 + d23 * d6 + d22 * d7 + d26;
  HEAPF32[i1 + (i20 << 2) >> 2] = d24 * d8 + 0.0 + d23 * d9 + d22 * d10 + d21;
  i14 = i14 + 1 | 0;
 } while ((i14 | 0) != 4);
 HEAP32[i18 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i18 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i18 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i18 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 i28 = i1 + 16 | 0;
 HEAP32[i19 >> 2] = HEAP32[i28 >> 2];
 HEAP32[i19 + 4 >> 2] = HEAP32[i28 + 4 >> 2];
 HEAP32[i19 + 8 >> 2] = HEAP32[i28 + 8 >> 2];
 HEAP32[i19 + 12 >> 2] = HEAP32[i28 + 12 >> 2];
 i28 = i1 + 32 | 0;
 HEAP32[i15 >> 2] = HEAP32[i28 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i28 + 4 >> 2];
 HEAP32[i15 + 8 >> 2] = HEAP32[i28 + 8 >> 2];
 HEAP32[i15 + 12 >> 2] = HEAP32[i28 + 12 >> 2];
 __ZdlPv(i1);
 __ZdlPv(i17);
 __ZdlPv(i16);
 return 1;
}

function _fmod(d12, d1) {
 d12 = +d12;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, d15 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d12;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i9 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i10 = HEAP32[tempDoublePtr >> 2] | 0;
 i11 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = _bitshift64Lshr(i2 | 0, i9 | 0, 52) | 0;
 i3 = i3 & 2047;
 i7 = _bitshift64Lshr(i10 | 0, i11 | 0, 52) | 0;
 i7 = i7 & 2047;
 i13 = i9 & -2147483648;
 i6 = _bitshift64Shl(i10 | 0, i11 | 0, 1) | 0;
 i8 = tempRet0;
 L1 : do if (!((i6 | 0) == 0 & (i8 | 0) == 0) ? (d15 = +Math_abs(+d1), HEAPF64[tempDoublePtr >> 3] = d15, i5 = HEAP32[tempDoublePtr + 4 >> 2] | 0, !(i5 >>> 0 > 2146435072 | (i5 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0 | (i3 | 0) == 2047)) : 0) {
  i4 = _bitshift64Shl(i2 | 0, i9 | 0, 1) | 0;
  i5 = tempRet0;
  if (!(i5 >>> 0 > i8 >>> 0 | (i5 | 0) == (i8 | 0) & i4 >>> 0 > i6 >>> 0)) return +((i4 | 0) == (i6 | 0) & (i5 | 0) == (i8 | 0) ? d12 * 0.0 : d12);
  if (!i3) {
   i3 = _bitshift64Shl(i2 | 0, i9 | 0, 12) | 0;
   i4 = tempRet0;
   if ((i4 | 0) > -1 | (i4 | 0) == -1 & i3 >>> 0 > 4294967295) {
    i5 = i3;
    i3 = 0;
    do {
     i3 = i3 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i4 | 0, 1) | 0;
     i4 = tempRet0;
    } while ((i4 | 0) > -1 | (i4 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i3 = 0;
   i2 = _bitshift64Shl(i2 | 0, i9 | 0, 1 - i3 | 0) | 0;
   i4 = tempRet0;
  } else i4 = i9 & 1048575 | 1048576;
  if (!i7) {
   i5 = _bitshift64Shl(i10 | 0, i11 | 0, 12) | 0;
   i6 = tempRet0;
   if ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295) {
    i7 = 0;
    do {
     i7 = i7 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i6 | 0, 1) | 0;
     i6 = tempRet0;
    } while ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i7 = 0;
   i10 = _bitshift64Shl(i10 | 0, i11 | 0, 1 - i7 | 0) | 0;
   i9 = tempRet0;
  } else i9 = i11 & 1048575 | 1048576;
  i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
  i6 = tempRet0;
  i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
  L23 : do if ((i3 | 0) > (i7 | 0)) {
   while (1) {
    if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) break; else {
     i2 = i8;
     i4 = i6;
    }
    i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
    i4 = tempRet0;
    i3 = i3 + -1 | 0;
    i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
    i6 = tempRet0;
    i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
    if ((i3 | 0) <= (i7 | 0)) break L23;
   }
   d1 = d12 * 0.0;
   break L1;
  } while (0);
  if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) {
   d1 = d12 * 0.0;
   break;
  } else {
   i4 = i6;
   i2 = i8;
  }
  if (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0) do {
   i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
   i4 = tempRet0;
   i3 = i3 + -1 | 0;
  } while (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0);
  if ((i3 | 0) > 0) {
   i11 = _i64Add(i2 | 0, i4 | 0, 0, -1048576) | 0;
   i2 = tempRet0;
   i3 = _bitshift64Shl(i3 | 0, 0, 52) | 0;
   i2 = i2 | tempRet0;
   i3 = i11 | i3;
  } else {
   i3 = _bitshift64Lshr(i2 | 0, i4 | 0, 1 - i3 | 0) | 0;
   i2 = tempRet0;
  }
  HEAP32[tempDoublePtr >> 2] = i3;
  HEAP32[tempDoublePtr + 4 >> 2] = i2 | i13;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 } else i14 = 3; while (0);
 if ((i14 | 0) == 3) {
  d1 = d12 * d1;
  d1 = d1 / d1;
 }
 return +d1;
}

function _set_x(i6, i8) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i9 + 16 | 0;
 i2 = i9 + 8 | 0;
 i7 = i9;
 if (HEAP32[12835] | 0) {
  i8 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30617, 54) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 31](i7, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  STACKTOP = i9;
  return;
 }
 if (i8 >>> 0 > 9999) {
  i8 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30672, 31) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 28 >> 2] & 31](i7, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i7) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
  STACKTOP = i9;
  return;
 }
 i3 = __Znwj(64) | 0;
 HEAP32[i2 >> 2] = i8;
 HEAP32[i2 + 4 >> 2] = 3;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 1;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP8[i3 + 12 >> 0] = 1;
 HEAP8[i3 + 13 >> 0] = 1;
 HEAP32[i3 + 32 >> 2] = 0;
 HEAP32[i3 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i3, i2);
 i5 = HEAP32[i3 + 48 >> 2] | 0;
 i1 = i5 << 2;
 i2 = __Znwj(i1) | 0;
 HEAP32[i3 + 56 >> 2] = i2;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 60 >> 2] = i5;
 if (i5 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[12835] = i3;
 if ((i8 | 0) > 0) {
  i4 = (HEAP32[i3 >> 2] | 0) + (HEAP32[i3 + 40 >> 2] << 2) | 0;
  i5 = HEAP32[i3 + 24 >> 2] | 0;
  i1 = HEAP32[i3 + 28 >> 2] | 0;
  i2 = i1 << 1;
  i3 = 0;
  do {
   i11 = i3 * 3 | 0;
   i10 = i4 + ((Math_imul(i5, i3) | 0) << 2) | 0;
   HEAP32[i10 >> 2] = HEAP32[i6 + (i11 << 2) >> 2];
   HEAP32[i10 + (i1 << 2) >> 2] = HEAP32[i6 + (i11 + 1 << 2) >> 2];
   HEAP32[i10 + (i2 << 2) >> 2] = HEAP32[i6 + (i11 + 2 << 2) >> 2];
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i8 | 0));
 }
 i1 = __Znwj(48) | 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP8[i1 + 8 >> 0] = 1;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = i8;
 HEAP32[i1 + 32 >> 2] = i8;
 HEAP32[i1 + 16 >> 2] = 1;
 HEAP32[i1 + 24 >> 2] = 0;
 HEAP32[i1 + 28 >> 2] = 0;
 i2 = i8 << 2;
 i3 = __Znwj(i2) | 0;
 HEAP32[i1 + 40 >> 2] = i3;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 44 >> 2] = i8;
 if (i8 | 0) _memset(i3 | 0, 0, i2 | 0) | 0;
 HEAP32[12837] = i1;
 i3 = __Znwj(64) | 0;
 HEAP32[i7 >> 2] = i8;
 HEAP32[i7 + 4 >> 2] = 3;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 1;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP8[i3 + 12 >> 0] = 1;
 HEAP8[i3 + 13 >> 0] = 1;
 HEAP32[i3 + 32 >> 2] = 0;
 HEAP32[i3 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i3, i7);
 i11 = HEAP32[i3 + 48 >> 2] | 0;
 i1 = i11 << 2;
 i2 = __Znwj(i1) | 0;
 HEAP32[i3 + 56 >> 2] = i2;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 60 >> 2] = i11;
 if (i11 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 HEAP32[12836] = i3;
 STACKTOP = i9;
 return;
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i2, i14, i13, i15, i16, i11, i1) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i17;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53012) | 0;
 i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53020) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 63](i12, i5);
 i8 = HEAP8[i12 >> 0] | 0;
 i9 = i12 + 4 | 0;
 L1 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  HEAP32[i11 >> 2] = i15;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, i1) | 0;
    i3 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i3 + 4;
    HEAP32[i3 >> 2] = i8;
    i3 = i2 + 1 | 0;
    break;
   }
  default:
   i3 = i2;
  }
  L7 : do if ((i13 - i3 | 0) > 1 ? (HEAP8[i3 >> 0] | 0) == 48 : 0) {
   i1 = i3 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, 48) | 0;
   i7 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i7 + 4;
   HEAP32[i7 >> 2] = i8;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, HEAP8[i1 >> 0] | 0) | 0;
   i8 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i8 + 4;
   HEAP32[i8 >> 2] = i7;
   i3 = i3 + 2 | 0;
  } while (0);
  L12 : do if ((i3 | 0) != (i13 | 0)) {
   i1 = i13;
   i4 = i3;
   while (1) {
    i1 = i1 + -1 | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L12;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i6 = i12 + 8 | 0;
  i7 = i12 + 1 | 0;
  i1 = 0;
  i4 = 0;
  i8 = i3;
  while (1) {
   if (i8 >>> 0 >= i13 >>> 0) break;
   i18 = HEAP8[((HEAP8[i12 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i18 << 24 >> 24 != 0 & (i1 | 0) == (i18 << 24 >> 24 | 0)) {
    i18 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i18 + 4;
    HEAP32[i18 >> 2] = i5;
    i18 = HEAP8[i12 >> 0] | 0;
    i1 = 0;
    i4 = (i4 >>> 0 < (((i18 & 1) == 0 ? (i18 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, HEAP8[i8 >> 0] | 0) | 0;
   i18 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i18 + 4;
   HEAP32[i18 >> 2] = i19;
   i1 = i1 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = i15 + (i3 - i2 << 2) | 0;
  i4 = HEAP32[i11 >> 2] | 0;
  if ((i1 | 0) != (i4 | 0)) {
   i3 = i4;
   while (1) {
    i3 = i3 + -4 | 0;
    if (i1 >>> 0 >= i3 >>> 0) {
     i1 = i4;
     break L1;
    }
    i19 = HEAP32[i1 >> 2] | 0;
    HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i19;
    i1 = i1 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 48 >> 2] & 7](i10, i2, i13, i15) | 0;
  i1 = i15 + (i13 - i2 << 2) | 0;
  HEAP32[i11 >> 2] = i1;
 } while (0);
 HEAP32[i16 >> 2] = (i14 | 0) == (i13 | 0) ? i1 : i15 + (i14 - i2 << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 STACKTOP = i17;
 return;
}

function __ZNK12mp5_implicit4cube13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i32, i4, i18) {
 i32 = i32 | 0;
 i4 = i4 | 0;
 i18 = i18 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d33 = 0.0, d34 = 0.0;
 i28 = HEAP32[i4 + 16 >> 2] | 0;
 i30 = HEAP32[i4 + 24 >> 2] | 0;
 i31 = HEAP32[i4 + 28 >> 2] | 0;
 i27 = HEAP32[i4 + 32 >> 2] | 0;
 i17 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i29 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i29 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i29;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i26 = HEAP32[i32 + 92 >> 2] | 0;
 d5 = +HEAPF32[i26 >> 2];
 d6 = +HEAPF32[i26 + 4 >> 2];
 d7 = +HEAPF32[i26 + 8 >> 2];
 d8 = +HEAPF32[i26 + 12 >> 2];
 d9 = +HEAPF32[i26 + 16 >> 2];
 d10 = +HEAPF32[i26 + 20 >> 2];
 d11 = +HEAPF32[i26 + 24 >> 2];
 d12 = +HEAPF32[i26 + 28 >> 2];
 d13 = +HEAPF32[i26 + 32 >> 2];
 d14 = +HEAPF32[i26 + 36 >> 2];
 d15 = +HEAPF32[i26 + 40 >> 2];
 d16 = +HEAPF32[i26 + 44 >> 2];
 if (i28 | 0) {
  i1 = i31 << 1;
  i2 = i29 + (i17 << 2) | 0;
  i3 = 0;
  do {
   i24 = i2 + ((Math_imul(i3, i30) | 0) << 2) | 0;
   d34 = +HEAPF32[i24 >> 2];
   i25 = i24 + (i31 << 2) | 0;
   d33 = +HEAPF32[i25 >> 2];
   i26 = i24 + (i1 << 2) | 0;
   HEAPF32[i24 >> 2] = d8 + (d5 * d34 + d6 * d33 + d7 * +HEAPF32[i26 >> 2]);
   HEAPF32[i25 >> 2] = d12 + (d9 * d34 + d10 * d33 + d11 * +HEAPF32[i26 >> 2]);
   HEAPF32[i26 >> 2] = d16 + (d13 * d34 + d14 * d33 + d15 * +HEAPF32[i26 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i28 | 0));
 }
 d10 = +HEAPF32[i32 + 76 >> 2];
 d11 = +HEAPF32[i32 + 80 >> 2];
 d12 = +HEAPF32[i32 + 84 >> 2];
 if ((0 - i28 | 0) >= 0) {
  __ZdlPv(i29);
  return;
 }
 i21 = i31 << 1;
 i22 = i32 + 4 | 0;
 i23 = i32 + 8 | 0;
 i24 = i32 + 12 | 0;
 i25 = HEAP32[i18 + 28 >> 2] | 0;
 i26 = i25 << 1;
 i19 = i29 + (i17 << 2) | 0;
 i20 = (HEAP32[i18 >> 2] | 0) + (HEAP32[i18 + 40 >> 2] << 2) | 0;
 i18 = HEAP32[i18 + 24 >> 2] | 0;
 i4 = i27;
 i17 = 0;
 while (1) {
  i3 = i19 + ((Math_imul(i4, i30) | 0) << 2) | 0;
  d5 = +HEAPF32[i3 >> 2] - d10;
  d34 = +HEAPF32[i22 >> 2];
  d6 = +HEAPF32[i3 + (i31 << 2) >> 2] - d11;
  d33 = +HEAPF32[i23 >> 2];
  d7 = +HEAPF32[i3 + (i21 << 2) >> 2] - d12;
  d9 = +HEAPF32[i24 >> 2];
  i3 = 0;
  i1 = 0;
  d9 = d33 * (d6 - d33) * -2.0 - d34 * (d5 - d34) * 2.0 - d9 * (d7 - d9) * 2.0;
  while (1) {
   i2 = i3 * 3 | 0;
   d34 = +HEAPF32[i32 + 4 + (i2 << 2) >> 2];
   d33 = +HEAPF32[i32 + 4 + (i2 + 1 << 2) >> 2];
   d8 = +HEAPF32[i32 + 4 + (i2 + 2 << 2) >> 2];
   d8 = d33 * (d6 - d33) * -2.0 - d34 * (d5 - d34) * 2.0 - d8 * (d7 - d8) * 2.0;
   i2 = d8 < d9;
   i1 = i2 ? i3 : i1;
   i3 = i3 + 1 | 0;
   if ((i3 | 0) == 6) break; else d9 = i2 ? d8 : d9;
  }
  i3 = i1 * 3 | 0;
  i27 = i20 + ((Math_imul(i18, i17) | 0) << 2) | 0;
  HEAP32[i27 >> 2] = HEAP32[i32 + 4 + (i3 << 2) >> 2];
  HEAP32[i27 + (i25 << 2) >> 2] = HEAP32[i32 + 4 + (i3 + 1 << 2) >> 2];
  HEAP32[i27 + (i26 << 2) >> 2] = HEAP32[i32 + 4 + (i3 + 2 << 2) >> 2];
  i17 = i17 + 1 | 0;
  if ((i17 | 0) == (i28 | 0)) break; else i4 = i4 + 1 | 0;
 }
 __ZdlPv(i29);
 return;
}

function __ZNK12mp5_implicit9scylinder13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i5, i4, i27) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i27 = i27 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, d25 = 0.0, d26 = 0.0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, d38 = 0.0, d39 = 0.0;
 i37 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i35 = i37 + 8 | 0;
 i36 = i37 + 4 | 0;
 i34 = i37;
 i30 = HEAP32[i4 + 16 >> 2] | 0;
 i32 = HEAP32[i4 + 24 >> 2] | 0;
 i33 = HEAP32[i4 + 28 >> 2] | 0;
 i29 = HEAP32[i4 + 32 >> 2] | 0;
 i28 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i31 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i31 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i31;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i14 = HEAP32[i5 + 36 >> 2] | 0;
 d15 = +HEAPF32[i14 >> 2];
 d16 = +HEAPF32[i14 + 4 >> 2];
 d17 = +HEAPF32[i14 + 8 >> 2];
 d18 = +HEAPF32[i14 + 12 >> 2];
 d19 = +HEAPF32[i14 + 16 >> 2];
 d20 = +HEAPF32[i14 + 20 >> 2];
 d21 = +HEAPF32[i14 + 24 >> 2];
 d22 = +HEAPF32[i14 + 28 >> 2];
 d23 = +HEAPF32[i14 + 32 >> 2];
 d24 = +HEAPF32[i14 + 36 >> 2];
 d25 = +HEAPF32[i14 + 40 >> 2];
 d26 = +HEAPF32[i14 + 44 >> 2];
 if (i30 | 0) {
  i1 = i33 << 1;
  i2 = i31 + (i28 << 2) | 0;
  i3 = 0;
  do {
   i12 = i2 + ((Math_imul(i3, i32) | 0) << 2) | 0;
   d39 = +HEAPF32[i12 >> 2];
   i13 = i12 + (i33 << 2) | 0;
   d38 = +HEAPF32[i13 >> 2];
   i14 = i12 + (i1 << 2) | 0;
   HEAPF32[i12 >> 2] = d18 + (d15 * d39 + d16 * d38 + d17 * +HEAPF32[i14 >> 2]);
   HEAPF32[i13 >> 2] = d22 + (d19 * d39 + d20 * d38 + d21 * +HEAPF32[i14 >> 2]);
   HEAPF32[i14 >> 2] = d26 + (d23 * d39 + d24 * d38 + d25 * +HEAPF32[i14 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i30 | 0));
 }
 if ((0 - i30 | 0) >= 0) {
  __ZdlPv(i31);
  STACKTOP = i37;
  return;
 }
 i7 = i33 << 1;
 i8 = HEAP32[i5 + 16 >> 2] | 0;
 i9 = i8 + 4 | 0;
 i10 = i8 + 8 | 0;
 i11 = i5 + 4 | 0;
 i12 = i5 + 8 | 0;
 i13 = i5 + 12 | 0;
 i14 = i5 + 20 | 0;
 i5 = i5 + 24 | 0;
 i6 = (HEAP32[i27 >> 2] | 0) + (HEAP32[i27 + 24 >> 2] << 2) | 0;
 i4 = HEAP32[i27 + 16 >> 2] | 0;
 i3 = i31 + (i28 << 2) | 0;
 i1 = i29;
 i2 = 0;
 while (1) {
  i29 = i3 + ((Math_imul(i1, i32) | 0) << 2) | 0;
  d18 = +HEAPF32[i29 >> 2];
  d20 = +HEAPF32[i29 + (i33 << 2) >> 2];
  d22 = +HEAPF32[i29 + (i7 << 2) >> 2];
  d19 = +HEAPF32[i8 >> 2];
  d21 = +HEAPF32[i9 >> 2];
  d23 = +HEAPF32[i10 >> 2];
  d24 = +HEAPF32[i11 >> 2];
  d25 = +HEAPF32[i12 >> 2];
  d26 = +HEAPF32[i13 >> 2];
  d39 = d19 * (d18 - d24) + d21 * (d20 - d25) + d23 * (d22 - d26);
  HEAPF32[i35 >> 2] = d39;
  d38 = +HEAPF32[i14 >> 2] - d39;
  HEAPF32[i36 >> 2] = d38;
  d24 = d18 - d19 * d39 - d24;
  d25 = d20 - d21 * d39 - d25;
  d26 = d22 - d23 * d39 - d26;
  d26 = +HEAPF32[i5 >> 2] - +Math_sqrt(+(d24 * d24 + d25 * d25 + d26 * d26));
  HEAPF32[i34 >> 2] = d26;
  i29 = d26 < d38 ? i34 : i36;
  HEAP32[i6 + ((Math_imul(i4, i2) | 0) << 2) >> 2] = HEAP32[(+HEAPF32[i29 >> 2] < d39 ? i29 : i35) >> 2];
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i30 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i31);
 STACKTOP = i37;
 return;
}

function __ZN5boost11multi_index6detail13ordered_indexINS0_6memberINSt3__14pairIKNS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13property_tree11basic_ptreeISB_SB_NS4_4lessISB_EEEEEESC_XadL_ZNSI_5firstEEEEESG_NS1_9nth_layerILi2ESI_NS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EEEENS0_18ordered_non_uniqueINSN_INSH_4subs7by_nameESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EESJ_SG_EESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_EENS9_ISI_EEEENS_3mpl6v_itemISU_NS10_7vector0ISP_EELi0EEENS1_22ordered_non_unique_tagEE7insert_INS1_10lvalue_tagEEEPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISI_SY_EEEEEERKSI_RS1F_T_(i9, i10, i12, i1) {
 i9 = i9 | 0;
 i10 = i10 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i15 + 4 | 0;
 i14 = i15;
 i8 = i15 + 8 | 0;
 i11 = i9 + -8 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i7 = HEAP32[i1 + 28 >> 2] & -2;
 i2 = i7 + -28 | 0;
 if ((i7 | 0) == 0 | (i2 | 0) == 0) {
  i7 = 1;
  i2 = i1;
 } else {
  i4 = HEAP8[i10 >> 0] | 0;
  i5 = (i4 & 1) == 0;
  i4 = i5 ? (i4 & 255) >>> 1 : HEAP32[i10 + 4 >> 2] | 0;
  i5 = i5 ? i10 + 1 | 0 : HEAP32[i10 + 8 >> 2] | 0;
  while (1) {
   i1 = HEAP8[i2 >> 0] | 0;
   i3 = (i1 & 1) == 0;
   i1 = i3 ? (i1 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0;
   i3 = _memcmp(i5, i3 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, i1 >>> 0 < i4 >>> 0 ? i1 : i4) | 0;
   i3 = (((i3 | 0) == 0 ? (i4 >>> 0 < i1 >>> 0 ? -2147483648 : 0) : i3) | 0) < 0;
   i1 = HEAP32[(i3 ? i2 + 32 | 0 : i2 + 36 | 0) >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -28 | 0;
   if (!i1) {
    i7 = i3;
    break;
   } else i2 = i1;
  }
 }
 i6 = i2 + 28 | 0;
 HEAP8[i13 >> 0] = HEAP8[i8 >> 0] | 0;
 i5 = __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE7insert_ERKSH_RPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISH_SX_EEEEEENS1_10lvalue_tagE(i9, i10, i12, i13) | 0;
 if ((i5 | 0) != (HEAP32[i12 >> 2] | 0)) {
  STACKTOP = i15;
  return i5 | 0;
 }
 i4 = i5 + 28 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i3 = i1 + 28 | 0;
 do if (i7) {
  HEAP32[i2 + 32 >> 2] = i4;
  if ((i6 | 0) == (i3 | 0)) {
   HEAP32[i6 >> 2] = HEAP32[i6 >> 2] & 1 | i4;
   HEAP32[i2 + 36 >> 2] = i4;
   break;
  }
  i1 = i1 + 32 | 0;
  if ((HEAP32[i1 >> 2] | 0) == (i6 | 0)) HEAP32[i1 >> 2] = i4;
 } else {
  HEAP32[i2 + 36 >> 2] = i4;
  i1 = i1 + 36 | 0;
  if ((HEAP32[i1 >> 2] | 0) == (i6 | 0)) HEAP32[i1 >> 2] = i4;
 } while (0);
 HEAP32[i4 >> 2] = HEAP32[i4 >> 2] & 1 | i6;
 HEAP32[i5 + 32 >> 2] = 0;
 HEAP32[i5 + 36 >> 2] = 0;
 HEAP32[i14 >> 2] = i3;
 HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
 __ZN5boost11multi_index6detail23ordered_index_node_implINSt3__19allocatorIcEEE9rebalanceEPS6_NS1_34ordered_index_node_compressed_baseIS5_E10parent_refE(i4, i13);
 STACKTOP = i15;
 return i5 | 0;
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i2, i14, i13, i15, i16, i11, i1) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i17;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
 i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52992) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 63](i12, i5);
 i8 = HEAP8[i12 >> 0] | 0;
 i9 = i12 + 4 | 0;
 if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  HEAP32[i11 >> 2] = i15;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, i1) | 0;
    i3 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i3 + 1;
    HEAP8[i3 >> 0] = i8;
    i3 = i2 + 1 | 0;
    break;
   }
  default:
   i3 = i2;
  }
  L7 : do if ((i13 - i3 | 0) > 1 ? (HEAP8[i3 >> 0] | 0) == 48 : 0) {
   i1 = i3 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, 48) | 0;
   i7 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i7 + 1;
   HEAP8[i7 >> 0] = i8;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, HEAP8[i1 >> 0] | 0) | 0;
   i8 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i8 + 1;
   HEAP8[i8 >> 0] = i7;
   i3 = i3 + 2 | 0;
  } while (0);
  L12 : do if ((i3 | 0) != (i13 | 0)) {
   i1 = i13;
   i4 = i3;
   while (1) {
    i1 = i1 + -1 | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L12;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i6 = i12 + 8 | 0;
  i7 = i12 + 1 | 0;
  i1 = 0;
  i4 = 0;
  i8 = i3;
  while (1) {
   if (i8 >>> 0 >= i13 >>> 0) break;
   i18 = HEAP8[((HEAP8[i12 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i18 << 24 >> 24 != 0 & (i1 | 0) == (i18 << 24 >> 24 | 0)) {
    i18 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i18 + 1;
    HEAP8[i18 >> 0] = i5;
    i18 = HEAP8[i12 >> 0] | 0;
    i1 = 0;
    i4 = (i4 >>> 0 < (((i18 & 1) == 0 ? (i18 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, HEAP8[i8 >> 0] | 0) | 0;
   i18 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i18 + 1;
   HEAP8[i18 >> 0] = i19;
   i1 = i1 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = i15 + (i3 - i2) | 0;
  i3 = HEAP32[i11 >> 2] | 0;
  if ((i1 | 0) != (i3 | 0)) {
   while (1) {
    i3 = i3 + -1 | 0;
    if (i1 >>> 0 >= i3 >>> 0) break;
    i19 = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i19;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i11 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] & 7](i10, i2, i13, i15) | 0;
  i1 = i15 + (i13 - i2) | 0;
  HEAP32[i11 >> 2] = i1;
 }
 HEAP32[i16 >> 2] = (i14 | 0) == (i13 | 0) ? i1 : i15 + (i14 - i2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 STACKTOP = i17;
 return;
}

function __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEE6defineEPKSN_(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i12;
 i8 = HEAP32[i10 + 8 >> 2] | 0;
 i9 = i11 + 4 | 0;
 i5 = i11 + 8 | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i6 = i2 - i1 >> 2;
 do if (i6 >>> 0 <= i8 >>> 0) {
  i3 = ((i8 * 3 | 0) >>> 1) + 1 | 0;
  if (i3 >>> 0 > i6 >>> 0) {
   __ZNSt3__16vectorIPN5boost13property_tree11json_parser12json_grammarINS2_11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EEEEE10definitionINS1_6spirit7classic7scannerINS_11__wrap_iterIPcEENSI_16scanner_policiesINSI_28skip_parser_iteration_policyINSI_11alternativeINSP_INSI_12space_parserENSI_13confix_parserINSI_6strlitIPKcEENSI_11kleene_starINSI_14anychar_parserEEENSP_INSI_10eol_parserENSI_10end_parserEEENSI_21unary_parser_categoryENSI_10non_nestedENSI_9is_lexemeEEEEENSR_ISV_SY_SV_S12_S13_S14_EEEENSI_16iteration_policyEEENSI_12match_policyENSI_13action_policyEEEEEEENS9_IS1G_EEE8__appendEj(i9, i3 - i6 | 0);
   i1 = HEAP32[i9 >> 2] | 0;
   break;
  }
  if (i3 >>> 0 < i6 >>> 0 ? (i4 = i1 + (i3 << 2) | 0, (i2 | 0) != (i4 | 0)) : 0) HEAP32[i5 >> 2] = i2 + (~((i2 + -4 - i4 | 0) >>> 2) << 2);
 } while (0);
 i1 = HEAP32[i1 + (i8 << 2) >> 2] | 0;
 if (i1 | 0) {
  i11 = i1;
  STACKTOP = i12;
  return i11 | 0;
 }
 i1 = __Znwj(40) | 0;
 __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10definitionINS_6spirit7classic7scannerINS4_11__wrap_iterIPcEENSH_16scanner_policiesINSH_28skip_parser_iteration_policyINSH_11alternativeINSO_INSH_12space_parserENSH_13confix_parserINSH_6strlitIPKcEENSH_11kleene_starINSH_14anychar_parserEEENSO_INSH_10eol_parserENSH_10end_parserEEENSH_21unary_parser_categoryENSH_10non_nestedENSH_9is_lexemeEEEEENSQ_ISU_SX_SU_S11_S12_S13_EEEENSH_16iteration_policyEEENSH_12match_policyENSH_13action_policyEEEEEEC2ERKSE_(i1, i10);
 HEAP32[i7 >> 2] = i11;
 i2 = i10 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) == (HEAP32[i10 + 20 >> 2] | 0)) __ZNSt3__16vectorIPN5boost6spirit7classic4impl19grammar_helper_baseINS3_7grammarINS1_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESG_NS_4lessISG_EEEEEENS3_14parser_contextINS3_5nil_tEEEEEEENSE_ISQ_EEE21__push_back_slow_pathIRKSQ_EEvOT_(i10 + 12 | 0, i7); else {
  HEAP32[i3 >> 2] = i11;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
 }
 i11 = i11 + 16 | 0;
 HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
 HEAP32[(HEAP32[i9 >> 2] | 0) + (i8 << 2) >> 2] = i1;
 i11 = i1;
 STACKTOP = i12;
 return i11 | 0;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i12, i10, i11, i9, i1) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i8 - i12 | 0) > 2 : 0) ? (HEAP8[i12 >> 0] | 0) == -17 : 0) ? (HEAP8[i12 + 1 >> 0] | 0) == -69 : 0) {
  i7 = (HEAP8[i12 + 2 >> 0] | 0) == -65 ? i12 + 3 | 0 : i12;
  i2 = 0;
 } else {
  i7 = i12;
  i2 = 0;
 }
 L6 : while (1) {
  if (!(i2 >>> 0 < i11 >>> 0 & i7 >>> 0 < i10 >>> 0)) {
   i1 = i7;
   i2 = 40;
   break;
  }
  i1 = HEAP8[i7 >> 0] | 0;
  i6 = i1 & 255;
  if (i6 >>> 0 > i9 >>> 0) {
   i1 = i7;
   i2 = 40;
   break;
  }
  do if (i1 << 24 >> 24 > -1) i1 = i7 + 1 | 0; else {
   if ((i1 & 255) < 194) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   if ((i1 & 255) < 224) {
    if ((i8 - i7 | 0) < 2) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    i1 = HEAPU8[i7 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    if ((i1 & 63 | i6 << 6 & 1984) >>> 0 > i9 >>> 0) {
     i1 = i7;
     i2 = 40;
     break L6;
    } else {
     i1 = i7 + 2 | 0;
     break;
    }
   }
   if ((i1 & 255) < 240) {
    i1 = i7;
    if ((i8 - i1 | 0) < 3) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    i4 = HEAP8[i7 + 1 >> 0] | 0;
    i3 = HEAP8[i7 + 2 >> 0] | 0;
    switch (i6 | 0) {
    case 224:
     {
      if ((i4 & -32) << 24 >> 24 != -96) {
       i2 = 19;
       break L6;
      }
      break;
     }
    case 237:
     {
      if ((i4 & -32) << 24 >> 24 != -128) {
       i2 = 21;
       break L6;
      }
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) {
      i2 = 23;
      break L6;
     }
    }
    i1 = i3 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    if (((i4 & 255) << 6 & 4032 | i6 << 12 & 61440 | i1 & 63) >>> 0 > i9 >>> 0) {
     i1 = i7;
     i2 = 40;
     break L6;
    } else {
     i1 = i7 + 3 | 0;
     break;
    }
   }
   if ((i1 & 255) >= 245) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i7;
   if ((i11 - i2 | 0) >>> 0 < 2 | (i8 - i1 | 0) < 4) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i5 = HEAP8[i7 + 1 >> 0] | 0;
   i3 = HEAP8[i7 + 2 >> 0] | 0;
   i4 = HEAP8[i7 + 3 >> 0] | 0;
   switch (i6 | 0) {
   case 240:
    {
     if ((i5 + 112 & 255) >= 48) {
      i2 = 30;
      break L6;
     }
     break;
    }
   case 244:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i2 = 32;
      break L6;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i2 = 34;
     break L6;
    }
   }
   i3 = i3 & 255;
   if ((i3 & 192 | 0) != 128) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i4 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   if (((i5 & 255) << 12 & 258048 | i6 << 18 & 1835008 | i3 << 6 & 4032 | i1 & 63) >>> 0 > i9 >>> 0) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i7 + 4 | 0;
   i2 = i2 + 1 | 0;
  } while (0);
  i7 = i1;
  i2 = i2 + 1 | 0;
 }
 if ((i2 | 0) == 19) i1 = i1 - i12 | 0; else if ((i2 | 0) == 21) i1 = i1 - i12 | 0; else if ((i2 | 0) == 23) i1 = i1 - i12 | 0; else if ((i2 | 0) == 30) i1 = i1 - i12 | 0; else if ((i2 | 0) == 32) i1 = i1 - i12 | 0; else if ((i2 | 0) == 34) i1 = i1 - i12 | 0; else if ((i2 | 0) == 40) i1 = i1 - i12 | 0;
 return i1 | 0;
}

function __ZNK12mp5_implicit15double_mushroom13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i26, i4, i32) {
 i26 = i26 | 0;
 i4 = i4 | 0;
 i32 = i32 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d33 = 0.0, d34 = 0.0;
 i28 = HEAP32[i4 + 16 >> 2] | 0;
 i30 = HEAP32[i4 + 24 >> 2] | 0;
 i31 = HEAP32[i4 + 28 >> 2] | 0;
 i27 = HEAP32[i4 + 32 >> 2] | 0;
 i17 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i29 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i29 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i29;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i25 = HEAP32[i26 + 36 >> 2] | 0;
 d5 = +HEAPF32[i25 >> 2];
 d6 = +HEAPF32[i25 + 4 >> 2];
 d7 = +HEAPF32[i25 + 8 >> 2];
 d8 = +HEAPF32[i25 + 12 >> 2];
 d9 = +HEAPF32[i25 + 16 >> 2];
 d10 = +HEAPF32[i25 + 20 >> 2];
 d11 = +HEAPF32[i25 + 24 >> 2];
 d12 = +HEAPF32[i25 + 28 >> 2];
 d13 = +HEAPF32[i25 + 32 >> 2];
 d14 = +HEAPF32[i25 + 36 >> 2];
 d15 = +HEAPF32[i25 + 40 >> 2];
 d16 = +HEAPF32[i25 + 44 >> 2];
 if (i28 | 0) {
  i1 = i31 << 1;
  i2 = i29 + (i17 << 2) | 0;
  i3 = 0;
  do {
   i23 = i2 + ((Math_imul(i3, i30) | 0) << 2) | 0;
   d34 = +HEAPF32[i23 >> 2];
   i24 = i23 + (i31 << 2) | 0;
   d33 = +HEAPF32[i24 >> 2];
   i25 = i23 + (i1 << 2) | 0;
   HEAPF32[i23 >> 2] = d8 + (d5 * d34 + d6 * d33 + d7 * +HEAPF32[i25 >> 2]);
   HEAPF32[i24 >> 2] = d12 + (d9 * d34 + d10 * d33 + d11 * +HEAPF32[i25 >> 2]);
   HEAPF32[i25 >> 2] = d16 + (d13 * d34 + d14 * d33 + d15 * +HEAPF32[i25 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i28 | 0));
 }
 d5 = +HEAPF32[i26 + 8 >> 2];
 d6 = +HEAPF32[i26 + 12 >> 2];
 d7 = +HEAPF32[i26 + 16 >> 2];
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i26 >> 2] | 0) + 8 >> 2] & 127](i26) | 0;
 i19 = i29 + (i17 << 2) | 0;
 if ((0 - i28 | 0) >= 0) {
  __ZdlPv(i29);
  return;
 }
 i20 = i26 + 20 | 0;
 i21 = i26 + 24 | 0;
 i22 = i31 << 1;
 i23 = i26 + 28 | 0;
 i24 = i32 + 24 | 0;
 i25 = (HEAP32[i32 >> 2] | 0) + (HEAP32[i24 >> 2] << 2) | 0;
 i17 = i32 + 16 | 0;
 i18 = HEAP32[i17 >> 2] | 0;
 d10 = d5 * d5;
 d9 = d6 * d6;
 d8 = d7 * d7;
 i4 = i26 + 4 | 0;
 i2 = i27;
 i3 = 0;
 while (1) {
  i1 = i19 + ((Math_imul(i2, i30) | 0) << 2) | 0;
  d5 = +HEAPF32[i1 >> 2] - +HEAPF32[i20 >> 2];
  d6 = +HEAPF32[i1 + (i31 << 2) >> 2] - +HEAPF32[i21 >> 2];
  i1 = i1 + (i22 << 2) | 0;
  d7 = +HEAPF32[i1 >> 2] - +HEAPF32[i23 >> 2];
  HEAPF32[i25 + ((Math_imul(i18, i3) | 0) << 2) >> 2] = -(d5 * d5 / d10 + d6 * d6 / d9 - d7 * d7 / d8 + -1.0);
  d7 = +HEAPF32[i1 >> 2];
  d6 = +HEAPF32[i23 >> 2];
  d5 = +HEAPF32[i4 >> 2];
  if (d7 - d6 > d5) {
   HEAPF32[(HEAP32[i32 >> 2] | 0) + (HEAP32[i24 >> 2] << 2) + ((Math_imul(HEAP32[i17 >> 2] | 0, i3) | 0) << 2) >> 2] = -1.0;
   d6 = +HEAPF32[i23 >> 2];
   d7 = +HEAPF32[i1 >> 2];
   d5 = +HEAPF32[i4 >> 2];
  }
  if (d7 - d6 < -d5) HEAPF32[(HEAP32[i32 >> 2] | 0) + (HEAP32[i24 >> 2] << 2) + ((Math_imul(HEAP32[i17 >> 2] | 0, i3) | 0) << 2) >> 2] = -1.0;
  i3 = i3 + 1 | 0;
  if ((i3 | 0) == (i28 | 0)) break; else i2 = i2 + 1 | 0;
 }
 __ZdlPv(i29);
 return;
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i12, i10, i11, i9, i1) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i8 - i12 | 0) > 2 : 0) ? (HEAP8[i12 >> 0] | 0) == -17 : 0) ? (HEAP8[i12 + 1 >> 0] | 0) == -69 : 0) {
  i6 = (HEAP8[i12 + 2 >> 0] | 0) == -65 ? i12 + 3 | 0 : i12;
  i7 = 0;
 } else {
  i6 = i12;
  i7 = 0;
 }
 L6 : while (1) {
  if (!(i7 >>> 0 < i11 >>> 0 & i6 >>> 0 < i10 >>> 0)) {
   i1 = i6;
   i2 = 40;
   break;
  }
  i1 = HEAP8[i6 >> 0] | 0;
  i5 = i1 & 255;
  do if (i1 << 24 >> 24 <= -1) {
   if ((i1 & 255) < 194) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   if ((i1 & 255) < 224) {
    if ((i8 - i6 | 0) < 2) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i1 = HEAPU8[i6 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    if ((i1 & 63 | i5 << 6 & 1984) >>> 0 > i9 >>> 0) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i1 = i6 + 2 | 0;
    break;
   }
   if ((i1 & 255) < 240) {
    i1 = i6;
    if ((i8 - i1 | 0) < 3) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i3 = HEAP8[i6 + 1 >> 0] | 0;
    i2 = HEAP8[i6 + 2 >> 0] | 0;
    switch (i5 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i2 = 20;
       break L6;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i2 = 22;
       break L6;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i2 = 24;
      break L6;
     }
    }
    i1 = i2 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    if (((i3 & 255) << 6 & 4032 | i5 << 12 & 61440 | i1 & 63) >>> 0 > i9 >>> 0) {
     i1 = i6;
     i2 = 40;
     break L6;
    } else {
     i1 = i6 + 3 | 0;
     break;
    }
   }
   if ((i1 & 255) >= 245) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i6;
   if ((i8 - i1 | 0) < 4) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i4 = HEAP8[i6 + 1 >> 0] | 0;
   i2 = HEAP8[i6 + 2 >> 0] | 0;
   i3 = HEAP8[i6 + 3 >> 0] | 0;
   switch (i5 | 0) {
   case 240:
    {
     if ((i4 + 112 & 255) >= 48) {
      i2 = 31;
      break L6;
     }
     break;
    }
   case 244:
    {
     if ((i4 & -16) << 24 >> 24 != -128) {
      i2 = 33;
      break L6;
     }
     break;
    }
   default:
    if ((i4 & -64) << 24 >> 24 != -128) {
     i2 = 35;
     break L6;
    }
   }
   i2 = i2 & 255;
   if ((i2 & 192 | 0) != 128) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   if (((i4 & 255) << 12 & 258048 | i5 << 18 & 1835008 | i2 << 6 & 4032 | i1 & 63) >>> 0 > i9 >>> 0) {
    i1 = i6;
    i2 = 40;
    break L6;
   } else i1 = i6 + 4 | 0;
  } else {
   if (i5 >>> 0 > i9 >>> 0) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i6 + 1 | 0;
  } while (0);
  i6 = i1;
  i7 = i7 + 1 | 0;
 }
 if ((i2 | 0) == 20) i1 = i1 - i12 | 0; else if ((i2 | 0) == 22) i1 = i1 - i12 | 0; else if ((i2 | 0) == 24) i1 = i1 - i12 | 0; else if ((i2 | 0) == 31) i1 = i1 - i12 | 0; else if ((i2 | 0) == 33) i1 = i1 - i12 | 0; else if ((i2 | 0) == 35) i1 = i1 - i12 | 0; else if ((i2 | 0) == 40) i1 = i1 - i12 | 0;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_5chlitIcEEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSK_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSK_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISC_T_E4typeERKS1B_(i12, i15, i13) {
 i12 = i12 | 0;
 i15 = i15 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i8 = i16 + 24 | 0;
 i14 = i16 + 12 | 0;
 i9 = i16;
 i7 = HEAP32[i13 >> 2] | 0;
 i11 = i13 + 4 | 0;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i14 >> 2] = i7;
 HEAP32[i14 + 4 >> 2] = i6;
 HEAP32[i14 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i14) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i8, i3, i14, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i11 >> 2] | 0;
 }
 HEAP32[HEAP32[i11 >> 2] >> 2] = i1;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i13 + 8 >> 2] | 0) ? (i10 = HEAP8[i2 >> 0] | 0, (HEAP8[i15 >> 0] | 0) == i10 << 24 >> 24) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  HEAP32[i12 >> 2] = 1;
  HEAP8[i12 + 5 >> 0] = i10;
  HEAP8[i12 + 4 >> 0] = 1;
  STACKTOP = i16;
  return;
 }
 HEAP32[i12 >> 2] = -1;
 HEAP8[i12 + 4 >> 0] = 0;
 i16 = HEAP32[HEAP32[i11 >> 2] >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i9, i15 + 4 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i14, i9);
 HEAP32[i8 >> 2] = 21124;
 HEAP32[i8 + 4 >> 2] = i16;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i8 + 8 | 0, i14);
 __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i8);
}

function __ZN13MarchingCubes4initEN12mp5_implicit12bounding_boxE(i7, i1) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0;
 HEAPF32[i7 + 472 >> 2] = 80.0;
 i4 = HEAP32[i7 + 4 >> 2] | 0;
 i5 = Math_imul(i4, i4) | 0;
 HEAP32[i7 + 8 >> 2] = i5;
 i6 = Math_imul(i5, i4) | 0;
 HEAP32[i7 + 12 >> 2] = i6;
 d10 = +HEAPF32[i1 + 12 >> 2] - +HEAPF32[i1 + 8 >> 2];
 d9 = +HEAPF32[i1 + 20 >> 2] - +HEAPF32[i1 + 16 >> 2];
 d8 = +(i4 + -5 | 0);
 HEAPF32[i7 + 32 >> 2] = (+HEAPF32[i1 + 4 >> 2] - +HEAPF32[i1 >> 2]) / d8;
 HEAPF32[i7 + 36 >> 2] = d10 / d8;
 HEAPF32[i7 + 40 >> 2] = d9 / d8;
 i3 = i7 + 44 | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i3 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i3 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i7 + 16 >> 2] = i4;
 HEAP32[i7 + 20 >> 2] = i5;
 HEAP32[i7 + 24 >> 2] = i4;
 HEAP32[i7 + 28 >> 2] = i5;
 i1 = i6 << 2;
 i5 = __Znwj(i1) | 0;
 if (i6 | 0) {
  _memset(i5 | 0, 0, i1 | 0) | 0;
  i2 = (HEAP32[i7 + 68 >> 2] | 0) + (HEAP32[i7 + 92 >> 2] << 2) | 0;
  i3 = HEAP32[i7 + 84 >> 2] | 0;
  i1 = HEAP32[i7 + 88 >> 2] | 0;
  i4 = 0;
  while (1) {
   HEAP32[i2 + ((Math_imul(i1, i3) | 0) << 2) >> 2] = HEAP32[i5 + (i4 << 2) >> 2];
   i4 = i4 + 1 | 0;
   if ((i4 | 0) == (i6 | 0)) break; else i1 = i1 + 1 | 0;
  }
 }
 __ZdlPv(i5);
 i2 = i7 + 312 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 i2 = __Znwj(49152) | 0;
 _memset(i2 | 0, 0, 49152) | 0;
 i3 = (HEAP32[i7 + 320 >> 2] | 0) + (HEAP32[i7 + 344 >> 2] << 2) | 0;
 i4 = HEAP32[i7 + 336 >> 2] | 0;
 i1 = HEAP32[i7 + 340 >> 2] | 0;
 i5 = 0;
 while (1) {
  HEAP32[i3 + ((Math_imul(i1, i4) | 0) << 2) >> 2] = HEAP32[i2 + (i5 << 2) >> 2];
  i5 = i5 + 1 | 0;
  if ((i5 | 0) == 12288) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i2);
 i2 = __Znwj(16384) | 0;
 _memset(i2 | 0, 0, 16384) | 0;
 i3 = (HEAP32[i7 + 416 >> 2] | 0) + (HEAP32[i7 + 440 >> 2] << 2) | 0;
 i4 = i7 + 432 | 0;
 i1 = HEAP32[i7 + 436 >> 2] | 0;
 HEAP32[i3 + ((Math_imul(HEAP32[i4 >> 2] | 0, i1) | 0) << 2) >> 2] = 0;
 i5 = 1;
 do {
  i1 = i1 + 1 | 0;
  HEAP32[i3 + ((Math_imul(HEAP32[i4 >> 2] | 0, i1) | 0) << 2) >> 2] = HEAP32[i2 + (i5 << 2) >> 2];
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != 4096);
 __ZdlPv(i2);
 i1 = HEAP16[i7 >> 1] | 0;
 if ((i1 & 255) << 24 >> 24) {
  i6 = i7 + 468 | 0;
  HEAP32[i6 >> 2] = 0;
  i5 = __Znwj(48) | 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP8[i5 + 8 >> 0] = 1;
  HEAP32[i5 + 20 >> 2] = 0;
  HEAP32[i5 + 12 >> 2] = 8192;
  HEAP32[i5 + 32 >> 2] = 8192;
  HEAP32[i5 + 16 >> 2] = 1;
  HEAP32[i5 + 24 >> 2] = 0;
  HEAP32[i5 + 28 >> 2] = 0;
  i4 = __Znwj(32768) | 0;
  HEAP32[i5 + 40 >> 2] = i4;
  HEAP32[i5 >> 2] = i4;
  HEAP32[i5 + 44 >> 2] = 8192;
  _memset(i4 | 0, 0, 32768) | 0;
  HEAP32[i6 >> 2] = i5;
 }
 if ((i1 & 65535) < 256) return;
 i7 = i7 + 464 | 0;
 HEAP32[i7 >> 2] = 0;
 i6 = __Znwj(48) | 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP8[i6 + 8 >> 0] = 1;
 HEAP32[i6 + 20 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 12288;
 HEAP32[i6 + 32 >> 2] = 12288;
 HEAP32[i6 + 16 >> 2] = 1;
 HEAP32[i6 + 24 >> 2] = 0;
 HEAP32[i6 + 28 >> 2] = 0;
 i5 = __Znwj(49152) | 0;
 HEAP32[i6 + 40 >> 2] = i5;
 HEAP32[i6 >> 2] = i5;
 HEAP32[i6 + 44 >> 2] = 12288;
 _memset(i5 | 0, 0, 49152) | 0;
 HEAP32[i7 >> 2] = i6;
 return;
}

function __ZN5boost6spirit7classic4impl25refactor_unary_non_nestedINS1_21unary_parser_categoryEE5parseINS1_21refactor_unary_parserINS1_10differenceINS1_11kleene_starINS1_14anychar_parserEEENS1_6strlitIPKcEEEENS1_22non_nested_refactoringEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSR_INS1_12space_parserENS1_13confix_parserISF_SB_NSR_INS1_10eol_parserENS1_10end_parserEEES4_NS1_10non_nestedENS1_9is_lexemeEEEEENST_ISF_SB_SF_S4_SX_SY_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESG_EENS1_13parser_resultIT_T0_E4typeERKS1B_RKS1C_RKT1_(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i5 = i2 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i5 = HEAP32[i5 + 4 >> 2] | 0;
 i11 = i4 + 4 | 0;
 i2 = HEAP32[i11 >> 2] | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i6 = i3;
 i10 = i4 + 8 | 0;
 if ((i6 | 0) == (HEAP32[i10 >> 2] | 0)) {
  i9 = i3;
  i11 = 0;
  i10 = i2;
  HEAP32[i10 >> 2] = i9;
  return i11 | 0;
 }
 i8 = i1;
 i9 = i5;
 i1 = (i5 - i1 | 0) < 1;
 if ((i8 | 0) == (i9 | 0)) if (i1) {
  i4 = i6;
  i1 = 0;
  do {
   HEAP32[i2 >> 2] = i4 + 1;
   i9 = HEAP32[i11 >> 2] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   HEAP32[i9 >> 2] = i3;
   HEAP32[HEAP32[i11 >> 2] >> 2] = i2;
   i1 = i1 + 1 | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i4 = i3;
  } while ((i4 | 0) != (HEAP32[i10 >> 2] | 0));
  HEAP32[i2 >> 2] = i3;
  return i1 | 0;
 } else {
  HEAP32[i2 >> 2] = i6 + 1;
  HEAP32[HEAP32[i11 >> 2] >> 2] = i3;
  i9 = i3;
  i10 = 0;
  i11 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  return i10 | 0;
 }
 if (i1) {
  i1 = 0;
  do {
   HEAP32[i2 >> 2] = i6 + 1;
   i7 = HEAP32[i11 >> 2] | 0;
   i5 = HEAP32[i7 >> 2] | 0;
   HEAP32[i7 >> 2] = i3;
   i3 = i8;
   while (1) {
    i2 = HEAP32[i11 >> 2] | 0;
    i4 = HEAP32[i2 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i10 >> 2] | 0)) {
     i7 = 11;
     break;
    }
    if ((HEAP8[i3 >> 0] | 0) != (HEAP8[i4 >> 0] | 0)) {
     i7 = 11;
     break;
    }
    i3 = i3 + 1 | 0;
    HEAP32[i2 >> 2] = i4 + 1;
    if ((i3 | 0) == (i9 | 0)) {
     i7 = 13;
     break;
    }
   }
   if ((i7 | 0) != 11) if ((i7 | 0) == 13) i2 = HEAP32[i11 >> 2] | 0;
   HEAP32[i2 >> 2] = i5;
   i1 = i1 + 1 | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i6 = i3;
  } while ((i6 | 0) != (HEAP32[i10 >> 2] | 0));
  HEAP32[i2 >> 2] = i3;
  return i1 | 0;
 } else {
  i1 = 0;
  L25 : while (1) {
   HEAP32[i2 >> 2] = i6 + 1;
   i4 = HEAP32[i11 >> 2] | 0;
   i6 = HEAP32[i4 >> 2] | 0;
   HEAP32[i4 >> 2] = i3;
   i4 = i8;
   while (1) {
    i2 = HEAP32[i11 >> 2] | 0;
    i5 = HEAP32[i2 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i10 >> 2] | 0)) break;
    if ((HEAP8[i4 >> 0] | 0) != (HEAP8[i5 >> 0] | 0)) break;
    i4 = i4 + 1 | 0;
    HEAP32[i2 >> 2] = i5 + 1;
    if ((i4 | 0) == (i9 | 0)) {
     i2 = i3;
     break L25;
    }
   }
   HEAP32[i2 >> 2] = i6;
   i1 = i1 + 1 | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i6 = i3;
   if ((i6 | 0) == (HEAP32[i10 >> 2] | 0)) {
    i7 = 20;
    break;
   }
  }
  if ((i7 | 0) == 20) {
   HEAP32[i2 >> 2] = i3;
   return i1 | 0;
  }
  i9 = i2;
  i10 = i1;
  i11 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  return i10 | 0;
 }
 return 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS5_NS2_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS7_INS7_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSA_INS1_14anychar_parserEEENS7_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSP_IST_SV_ST_SZ_S10_S11_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISF_T_E4typeERKS1D_(i13, i12) {
 i13 = i13 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i14 + 12 | 0;
 i9 = i14;
 i10 = i12 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i11 = HEAP32[i7 >> 2] | 0;
 i8 = HEAP32[i12 >> 2] | 0;
 HEAP32[i9 >> 2] = i8;
 HEAP32[i9 + 4 >> 2] = i7;
 HEAP32[i9 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 i4 = i8 + 12 | 0;
 i5 = i8 + 20 | 0;
 i6 = i8 + 24 | 0;
 i1 = i7;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i8, i9) | 0) < 0 ? (HEAP32[i7 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i3, i4, i9, i4, i5, i6) | 0) < 0) : 0) break;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 HEAP32[HEAP32[i10 >> 2] >> 2] = i1;
 i1 = HEAP32[i10 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i12 + 8 >> 2] | 0) ? (HEAP8[i13 >> 0] | 0) == (HEAP8[i2 >> 0] | 0) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  i1 = 1;
 } else {
  HEAP32[i1 >> 2] = i11;
  i1 = 0;
 }
 i13 = __ZNK5boost6spirit7classic11alternativeINS1_5chlitIcEENS1_8sequenceINS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS8_INS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_SS_SQ_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISC_T_E4typeERKS1A_(i13 + 1 | 0, i12) | 0;
 STACKTOP = i14;
 return ((i13 | 0) < 0 ? -1 : i13 + i1 | 0) | 0;
}

function __ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i1, i2, i15, i4, i3, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i15 = i15 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i16;
 i10 = i16 + 16 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i9 = i5;
 i12 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i9 + 4 >> 2] | 0;
 i6 = i4;
 i7 = HEAP32[i6 >> 2] | 0;
 i6 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i12;
 i13 = HEAP32[i5 + 4 >> 2] | 0;
 i2 = i7;
 i5 = i6;
 i14 = i15 + 4 | 0;
 i7 = i6 - i7 | 0;
 L1 : do if ((i2 | 0) != (i5 | 0)) {
  i6 = i15 + 8 | 0;
  while (1) {
   i3 = HEAP32[i14 >> 2] | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
    i2 = -1;
    i3 = 14;
    break;
   }
   if ((HEAP8[i2 >> 0] | 0) != (HEAP8[i4 >> 0] | 0)) {
    i2 = -1;
    i3 = 14;
    break;
   }
   i2 = i2 + 1 | 0;
   HEAP32[i3 >> 2] = i4 + 1;
   if ((i2 | 0) == (i5 | 0)) break L1;
  }
  if ((i3 | 0) == 14) {
   STACKTOP = i16;
   return i2 | 0;
  }
 } while (0);
 if ((i7 | 0) < 0) {
  i15 = -1;
  STACKTOP = i16;
  return i15 | 0;
 }
 HEAP8[i11 >> 0] = i8;
 i6 = i11 + 1 | 0;
 HEAP8[i6 >> 0] = HEAP8[i10 >> 0] | 0;
 HEAP8[i6 + 1 >> 0] = HEAP8[i10 + 1 >> 0] | 0;
 HEAP8[i6 + 2 >> 0] = HEAP8[i10 + 2 >> 0] | 0;
 i6 = i11 + 4 | 0;
 HEAP32[i6 >> 2] = i12;
 HEAP32[i6 + 4 >> 2] = i9;
 i6 = __ZN5boost6spirit7classic4impl25refactor_unary_non_nestedINS1_21unary_parser_categoryEE5parseINS1_21refactor_unary_parserINS1_10differenceINS1_11kleene_starINS1_14anychar_parserEEENS1_6strlitIPKcEEEENS1_22non_nested_refactoringEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSR_INS1_12space_parserENS1_13confix_parserISF_SB_NSR_INS1_10eol_parserENS1_10end_parserEEES4_NS1_10non_nestedENS1_9is_lexemeEEEEENST_ISF_SB_SF_S4_SX_SY_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESG_EENS1_13parser_resultIT_T0_E4typeERKS1B_RKS1C_RKT1_(i11, i15, i11) | 0;
 i6 = (i6 | 0) < 0 ? -1 : i6 + i7 | 0;
 if ((i6 | 0) < 0) {
  i15 = -1;
  STACKTOP = i16;
  return i15 | 0;
 }
 i5 = i13 - i12 | 0;
 L17 : do if ((i1 | 0) != (i13 | 0)) {
  i4 = i15 + 8 | 0;
  while (1) {
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i4 >> 2] | 0)) {
    i2 = -1;
    i3 = 14;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
    i2 = -1;
    i3 = 14;
    break;
   }
   i1 = i1 + 1 | 0;
   HEAP32[i2 >> 2] = i3 + 1;
   if ((i1 | 0) == (i13 | 0)) break L17;
  }
  if ((i3 | 0) == 14) {
   STACKTOP = i16;
   return i2 | 0;
  }
 } while (0);
 i15 = (i5 | 0) < 0 ? -1 : i6 + i5 | 0;
 STACKTOP = i16;
 return i15 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_5chlitIcEENS1_10differenceINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSE_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSE_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSG_ISK_SN_SK_SR_SS_ST_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES14_EES4_EEE5parseIS13_EENS1_13parser_resultIS17_T_E4typeERKS1A_(i12, i11) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i13 + 12 | 0;
 i9 = i13;
 i4 = HEAP32[i11 >> 2] | 0;
 i10 = i11 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 HEAP32[i9 >> 2] = i4;
 HEAP32[i9 + 4 >> 2] = i7;
 HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
 i8 = i4 + 12 | 0;
 i5 = i4 + 20 | 0;
 i6 = i4 + 24 | 0;
 i1 = i7;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i4, i9) | 0) < 0 ? (HEAP32[i7 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i3, i8, i9, i8, i5, i6) | 0) < 0) : 0) break;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 HEAP32[HEAP32[i10 >> 2] >> 2] = i1;
 i1 = HEAP32[i10 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i11 + 8 >> 2] | 0)) {
  STACKTOP = i13;
  return -1;
 }
 if ((HEAP8[i12 >> 0] | 0) == (HEAP8[i2 >> 0] | 0)) {
  HEAP32[i1 >> 2] = i2 + 1;
  i12 = __ZNK5boost6spirit7classic10differenceINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS1_5chlitIcEEE5parseIS10_EENS1_13parser_resultIS15_T_E4typeERKS18_(i12 + 4 | 0, i11) | 0;
  STACKTOP = i13;
  return ((i12 | 0) < 0 ? -1 : i12 + 1 | 0) | 0;
 } else {
  STACKTOP = i13;
  return -1;
 }
 return 0;
}

function __ZNK5boost6spirit7classic11alternativeINS1_5chlitIcEENS1_8sequenceINS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS8_INS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_SS_SQ_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISC_T_E4typeERKS1A_(i13, i12) {
 i13 = i13 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i14 + 12 | 0;
 i9 = i14;
 i10 = i12 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i11 = HEAP32[i7 >> 2] | 0;
 i8 = HEAP32[i12 >> 2] | 0;
 HEAP32[i9 >> 2] = i8;
 HEAP32[i9 + 4 >> 2] = i7;
 HEAP32[i9 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 i4 = i8 + 12 | 0;
 i5 = i8 + 20 | 0;
 i6 = i8 + 24 | 0;
 i1 = i7;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i8, i9) | 0) < 0 ? (HEAP32[i7 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i3, i4, i9, i4, i5, i6) | 0) < 0) : 0) break;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 HEAP32[HEAP32[i10 >> 2] >> 2] = i1;
 i1 = HEAP32[i10 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i12 + 8 >> 2] | 0) ? (HEAP8[i13 >> 0] | 0) == (HEAP8[i2 >> 0] | 0) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  i13 = 1;
  STACKTOP = i14;
  return i13 | 0;
 }
 HEAP32[i1 >> 2] = i11;
 i13 = __ZNK5boost6spirit7classic8sequenceINS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS5_INS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SP_SN_ST_SU_SV_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS8_T_E4typeERKS17_(i13 + 1 | 0, i12) | 0;
 STACKTOP = i14;
 return i13 | 0;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i8, i9, i4, i2, i10, i7, i3) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i9 >> 2] = i1;
 HEAP32[i10 >> 2] = i4;
 if (i3 & 2) if ((i2 - i4 | 0) < 3) i1 = 1; else {
  HEAP32[i10 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i6 = i8;
  i1 = HEAP32[i9 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i8 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP16[i1 >> 1] | 0;
   i5 = i3 & 65535;
   if (i5 >>> 0 > i7 >>> 0) {
    i1 = 2;
    break L4;
   }
   do if ((i3 & 65535) < 128) {
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i2 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i10 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } else {
    if ((i3 & 65535) < 2048) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 6 | 192;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) < 55296) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) >= 56320) {
     if ((i3 & 65535) < 57344) {
      i1 = 2;
      break L4;
     }
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i6 - i1 | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i1 = i1 + 2 | 0;
    i3 = HEAPU16[i1 >> 1] | 0;
    if ((i3 & 64512 | 0) != 56320) {
     i1 = 2;
     break L4;
    }
    if ((i2 - (HEAP32[i10 >> 2] | 0) | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i4 = i5 & 960;
    if (((i4 << 10) + 65536 | i5 << 10 & 64512 | i3 & 1023) >>> 0 > i7 >>> 0) {
     i1 = 2;
     break L4;
    }
    HEAP32[i9 >> 2] = i1;
    i1 = (i4 >>> 6) + 1 | 0;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i1 >>> 2 | 240;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 >>> 2 & 15 | i1 << 4 & 48 | 128;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 << 4 & 48 | i3 >>> 6 & 15 | 128;
    i5 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i3 & 63 | 128;
   } while (0);
   i1 = (HEAP32[i9 >> 2] | 0) + 2 | 0;
   HEAP32[i9 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_5chlitIcEENS1_8positiveINS1_12digit_parserEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS8_T_E4typeERKS18_(i12, i11) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i13 + 12 | 0;
 i9 = i13;
 i4 = HEAP32[i11 >> 2] | 0;
 i10 = i11 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 HEAP32[i9 >> 2] = i4;
 HEAP32[i9 + 4 >> 2] = i7;
 HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
 i8 = i4 + 12 | 0;
 i5 = i4 + 20 | 0;
 i6 = i4 + 24 | 0;
 i1 = i7;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i4, i9) | 0) < 0 ? (HEAP32[i7 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i3, i8, i9, i8, i5, i6) | 0) < 0) : 0) break;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 HEAP32[HEAP32[i10 >> 2] >> 2] = i1;
 i1 = HEAP32[i10 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i11 + 8 >> 2] | 0)) {
  STACKTOP = i13;
  return -1;
 }
 if ((HEAP8[i12 >> 0] | 0) == (HEAP8[i2 >> 0] | 0)) {
  HEAP32[i1 >> 2] = i2 + 1;
  i12 = __ZNK5boost6spirit7classic8positiveINS1_12digit_parserEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultIS4_T_E4typeERKS14_(i12 + 1 | 0, i11) | 0;
  STACKTOP = i13;
  return ((i12 | 0) < 0 ? -1 : i12 + 1 | 0) | 0;
 } else {
  STACKTOP = i13;
  return -1;
 }
 return 0;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = (i1 | 0) == (i5 | 0);
 HEAP8[i1 + 12 >> 0] = i8 & 1;
 if (i8) return;
 while (1) {
  i6 = HEAP32[i1 + 8 >> 2] | 0;
  i4 = i6 + 12 | 0;
  if (HEAP8[i4 >> 0] | 0) {
   i1 = 37;
   break;
  }
  i8 = i6 + 8 | 0;
  i3 = i1;
  i1 = HEAP32[i8 >> 2] | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if ((i2 | 0) == (i6 | 0)) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (!i2) {
    i2 = i3;
    i7 = i8;
    i4 = i8;
    i3 = i1;
    i5 = i1;
    i1 = 8;
    break;
   }
   i2 = i2 + 12 | 0;
   if (HEAP8[i2 >> 0] | 0) {
    i2 = i3;
    i7 = i8;
    i4 = i8;
    i3 = i1;
    i5 = i1;
    i1 = 8;
    break;
   }
   HEAP8[i4 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i5 | 0) & 1;
   HEAP8[i2 >> 0] = 1;
  } else {
   if (!i2) {
    i2 = i3;
    i7 = i8;
    i5 = i8;
    i3 = i1;
    i4 = i1;
    i1 = 24;
    break;
   }
   i2 = i2 + 12 | 0;
   if (HEAP8[i2 >> 0] | 0) {
    i2 = i3;
    i7 = i8;
    i5 = i8;
    i3 = i1;
    i4 = i1;
    i1 = 24;
    break;
   }
   HEAP8[i4 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i5 | 0) & 1;
   HEAP8[i2 >> 0] = 1;
  }
  if ((i1 | 0) == (i5 | 0)) {
   i1 = 37;
   break;
  }
 }
 if ((i1 | 0) == 8) {
  if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) i1 = i6; else {
   i8 = i6 + 4 | 0;
   i1 = HEAP32[i8 >> 2] | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   HEAP32[i8 >> 2] = i2;
   if (!i2) i2 = i3; else {
    HEAP32[i2 + 8 >> 2] = i6;
    i2 = HEAP32[i7 >> 2] | 0;
   }
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = i2;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i6 | 0)) HEAP32[i2 >> 2] = i1; else HEAP32[i2 + 4 >> 2] = i1;
   HEAP32[i1 >> 2] = i6;
   HEAP32[i7 >> 2] = i1;
   i5 = HEAP32[i3 >> 2] | 0;
  }
  HEAP8[i1 + 12 >> 0] = 1;
  HEAP8[i5 + 12 >> 0] = 0;
  i3 = HEAP32[i5 >> 2] | 0;
  i4 = i3 + 4 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  HEAP32[i5 >> 2] = i1;
  if (i1 | 0) HEAP32[i1 + 8 >> 2] = i5;
  i1 = i5 + 8 | 0;
  HEAP32[i3 + 8 >> 2] = HEAP32[i1 >> 2];
  i2 = HEAP32[i1 >> 2] | 0;
  if ((HEAP32[i2 >> 2] | 0) == (i5 | 0)) HEAP32[i2 >> 2] = i3; else HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i4 >> 2] = i5;
  HEAP32[i1 >> 2] = i3;
  return;
 } else if ((i1 | 0) == 24) {
  if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) {
   i1 = HEAP32[i6 >> 2] | 0;
   i4 = i1 + 4 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i6 >> 2] = i2;
   if (!i2) i2 = i3; else {
    HEAP32[i2 + 8 >> 2] = i6;
    i2 = HEAP32[i7 >> 2] | 0;
   }
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = i2;
   i2 = HEAP32[i5 >> 2] | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i6 | 0)) HEAP32[i2 >> 2] = i1; else HEAP32[i2 + 4 >> 2] = i1;
   HEAP32[i4 >> 2] = i6;
   HEAP32[i7 >> 2] = i1;
   i4 = HEAP32[i3 >> 2] | 0;
  } else i1 = i6;
  HEAP8[i1 + 12 >> 0] = 1;
  HEAP8[i4 + 12 >> 0] = 0;
  i8 = i4 + 4 | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i8 >> 2] = i1;
  if (i1 | 0) HEAP32[i1 + 8 >> 2] = i4;
  i1 = i4 + 8 | 0;
  HEAP32[i3 + 8 >> 2] = HEAP32[i1 >> 2];
  i2 = HEAP32[i1 >> 2] | 0;
  if ((HEAP32[i2 >> 2] | 0) == (i4 | 0)) HEAP32[i2 >> 2] = i3; else HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i3 >> 2] = i4;
  HEAP32[i1 >> 2] = i3;
  return;
 } else if ((i1 | 0) == 37) return;
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i1, i10, i11, i3, i12, i13, i9, i2) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i14 = 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i13 >> 2] = i3;
 if (i2 & 4) {
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = i10;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i11 >> 2] = i1 + 3;
 } else i2 = i10;
 L9 : while (1) {
  i7 = HEAP32[i11 >> 2] | 0;
  i1 = i7 >>> 0 < i10 >>> 0;
  if (!i1) {
   i14 = 40;
   break;
  }
  i8 = HEAP32[i13 >> 2] | 0;
  if (i8 >>> 0 >= i12 >>> 0) {
   i14 = 40;
   break;
  }
  i1 = HEAP8[i7 >> 0] | 0;
  i6 = i1 & 255;
  do if (i1 << 24 >> 24 > -1) {
   if (i6 >>> 0 > i9 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i8 >> 2] = i6;
   HEAP32[i11 >> 2] = i7 + 1;
  } else {
   if ((i1 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i1 & 255) < 224) {
    if ((i2 - i7 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i7 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i6 << 6 & 1984;
    if (i1 >>> 0 > i9 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i8 >> 2] = i1;
    HEAP32[i11 >> 2] = i7 + 2;
    break;
   }
   if ((i1 & 255) < 240) {
    if ((i2 - i7 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i7 + 1 >> 0] | 0;
    i1 = HEAP8[i7 + 2 >> 0] | 0;
    switch (i6 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i6 << 12 & 61440 | i1 & 63;
    if (i1 >>> 0 > i9 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i8 >> 2] = i1;
    HEAP32[i11 >> 2] = i7 + 3;
    break;
   }
   if ((i1 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i7 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = HEAP8[i7 + 1 >> 0] | 0;
   i1 = HEAP8[i7 + 2 >> 0] | 0;
   i3 = HEAP8[i7 + 3 >> 0] | 0;
   switch (i6 | 0) {
   case 240:
    {
     if ((i5 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case 244:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i4 = i1 & 255;
   if ((i4 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = (i5 & 255) << 12 & 258048 | i6 << 18 & 1835008 | i4 << 6 & 4032 | i1 & 63;
   if (i1 >>> 0 > i9 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i8 >> 2] = i1;
   HEAP32[i11 >> 2] = i7 + 4;
  } while (0);
  HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 4;
 }
 if ((i14 | 0) == 40) i1 = i1 & 1;
 return i1 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i2, i3, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 i7 = i20 + 424 | 0;
 i10 = i20;
 i4 = i20 + 24 | 0;
 i19 = i20 + 16 | 0;
 i8 = i20 + 12 | 0;
 i16 = i20 + 8 | 0;
 i5 = i20 + 564 | 0;
 i21 = i20 + 4 | 0;
 i9 = i20 + 464 | 0;
 HEAP32[i19 >> 2] = i4;
 i18 = i19 + 4 | 0;
 HEAP32[i18 >> 2] = 222;
 HEAP32[i16 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i16, 53012) | 0;
 HEAP8[i5 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i14 >> 2];
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i13, i7, i2, i16, i3, i15, i5, i1, i19, i8, i4 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 7](i1, 49196, 49206, i7) | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i19 >> 2] | 0;
  i1 = i2 - i4 | 0;
  if ((i1 | 0) > 392) {
   i1 = _malloc((i1 >> 2) + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i11 = i1;
    i6 = i1;
   }
  } else {
   i11 = 0;
   i6 = i9;
  }
  if (!(HEAP8[i5 >> 0] | 0)) i1 = i6; else {
   HEAP8[i6 >> 0] = 45;
   i1 = i6 + 1 | 0;
  }
  i5 = i7 + 40 | 0;
  i6 = i7;
  while (1) {
   if (i4 >>> 0 >= i2 >>> 0) break;
   i3 = HEAP32[i4 >> 2] | 0;
   i2 = i7;
   while (1) {
    if ((i2 | 0) == (i5 | 0)) {
     i2 = i5;
     break;
    }
    if ((HEAP32[i2 >> 2] | 0) == (i3 | 0)) break;
    i2 = i2 + 4 | 0;
   }
   HEAP8[i1 >> 0] = HEAP8[49196 + (i2 - i6 >> 2) >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  HEAP8[i1 >> 0] = 0;
  HEAP32[i10 >> 2] = i12;
  _sscanf(i9, 49097, i10) | 0;
  if (i11 | 0) _free(i11);
 }
 i1 = HEAP32[i13 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i13 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i13 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) break; else {
   i17 = 32;
   break;
  } else {
   HEAP32[i14 >> 2] = 0;
   i17 = 30;
   break;
  }
 } else i17 = 30; while (0);
 if ((i17 | 0) == 30 ? i3 : 0) i17 = 32;
 if ((i17 | 0) == 32) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
 i2 = HEAP32[i13 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i18 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function __ZNK5boost6spirit7classic10differenceINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS1_5chlitIcEEE5parseIS10_EENS1_13parser_resultIS15_T_E4typeERKS18_(i14, i13) {
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i15 + 12 | 0;
 i9 = i15;
 i10 = i13 + 4 | 0;
 i2 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0;
 i1 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
 if (!i1) {
  i14 = -1;
  STACKTOP = i15;
  return i14 | 0;
 }
 i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i13) | 0;
 if ((i11 | 0) < 0) {
  i14 = -1;
  STACKTOP = i15;
  return i14 | 0;
 }
 i3 = HEAP32[i10 >> 2] | 0;
 i12 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2;
 i3 = HEAP32[i13 >> 2] | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i9 + 4 >> 2] = i7;
 HEAP32[i9 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
 i4 = i3 + 12 | 0;
 i5 = i3 + 20 | 0;
 i6 = i3 + 24 | 0;
 i1 = i7;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i7 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i3, i9) | 0) < 0 ? (HEAP32[i7 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i8, i4, i9, i4, i5, i6) | 0) < 0) : 0) break;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 HEAP32[HEAP32[i10 >> 2] >> 2] = i1;
 i1 = HEAP32[i10 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if ((i2 | 0) != (HEAP32[i13 + 8 >> 2] | 0) ? (HEAP8[i14 + 4 >> 0] | 0) == (HEAP8[i2 >> 0] | 0) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  if ((i11 | 0) > 1) {
   i1 = HEAP32[i10 >> 2] | 0;
   break;
  } else {
   i14 = -1;
   STACKTOP = i15;
   return i14 | 0;
  }
 } while (0);
 HEAP32[i1 >> 2] = i12;
 i14 = i11;
 STACKTOP = i15;
 return i14 | 0;
}

function __ZNK5boost6spirit7classic6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS_13property_tree11json_parser7contextINS13_11basic_ptreeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEES1C_NS5_4lessIS1C_EEEEE12a_string_valEE5parseIS10_EENS1_13parser_resultIS1I_T_E4typeERKS1L_(i14, i9) {
 i14 = i14 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i15 + 20 | 0;
 i10 = i15 + 8 | 0;
 i12 = i15 + 4 | 0;
 i13 = i15;
 i7 = HEAP32[i9 >> 2] | 0;
 i8 = i9 + 4 | 0;
 i6 = HEAP32[i8 >> 2] | 0;
 HEAP32[i10 >> 2] = i7;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i11, i3, i10, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i8 >> 2] | 0;
 }
 HEAP32[HEAP32[i8 >> 2] >> 2] = i1;
 i1 = HEAP32[HEAP32[i14 >> 2] >> 2] | 0;
 if (!i1) {
  i14 = -1;
  STACKTOP = i15;
  return i14 | 0;
 }
 i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i9) | 0;
 if ((i1 | 0) < 0) {
  i14 = i1;
  STACKTOP = i15;
  return i14 | 0;
 }
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i13 >> 2];
 __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE12a_string_valclENS4_11__wrap_iterIPcEESI_(i14 + 4 | 0, i10, i11);
 i14 = i1;
 STACKTOP = i15;
 return i14 | 0;
}

function __ZNSt3__17__sort4IRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEjT0_SV_SV_SV_T_(i5, i6, i7, i8, i1) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i10 = 0;
 i4 = HEAP32[i6 >> 2] | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 i2 = i1 >>> 0 < i4 >>> 0;
 do if (i4 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
  i3 = i5;
  i1 = HEAP32[i3 >> 2] | 0;
  i3 = HEAP32[i3 + 4 >> 2] | 0;
  if (i2) {
   i9 = i7;
   i2 = HEAP32[i9 + 4 >> 2] | 0;
   i4 = i5;
   HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i4 + 4 >> 2] = i2;
   i4 = i7;
   HEAP32[i4 >> 2] = i1;
   HEAP32[i4 + 4 >> 2] = i3;
   i3 = 1;
   break;
  }
  i9 = i6;
  i4 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = i5;
  HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i2 + 4 >> 2] = i4;
  i2 = i6;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i2 + 4 >> 2] = i3;
  i2 = HEAP32[i7 >> 2] | 0;
  i4 = i1;
  if (i2 >>> 0 < i4 >>> 0) {
   i10 = i7;
   i2 = HEAP32[i10 + 4 >> 2] | 0;
   i9 = i6;
   HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 + 4 >> 2] = i2;
   i9 = i7;
   HEAP32[i9 >> 2] = i1;
   HEAP32[i9 + 4 >> 2] = i3;
   i3 = 2;
   i1 = i4;
  } else {
   i3 = 1;
   i1 = i2;
  }
 } else if (i2) {
  i9 = i6;
  i1 = HEAP32[i9 >> 2] | 0;
  i9 = HEAP32[i9 + 4 >> 2] | 0;
  i3 = i7;
  i4 = HEAP32[i3 + 4 >> 2] | 0;
  i10 = i6;
  HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i10 + 4 >> 2] = i4;
  i10 = i7;
  HEAP32[i10 >> 2] = i1;
  HEAP32[i10 + 4 >> 2] = i9;
  if ((HEAP32[i6 >> 2] | 0) >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
   i1 = i5;
   i10 = HEAP32[i1 >> 2] | 0;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   i4 = i6;
   i9 = HEAP32[i4 + 4 >> 2] | 0;
   i3 = i5;
   HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i3 + 4 >> 2] = i9;
   i3 = i6;
   HEAP32[i3 >> 2] = i10;
   HEAP32[i3 + 4 >> 2] = i1;
   i3 = 2;
   i1 = HEAP32[i7 >> 2] | 0;
  } else i3 = 1;
 } else i3 = 0; while (0);
 if ((HEAP32[i8 >> 2] | 0) >>> 0 >= i1 >>> 0) {
  i10 = i3;
  return i10 | 0;
 }
 i9 = i7;
 i4 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i9 + 4 >> 2] | 0;
 i1 = i8;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i10 = i7;
 HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 + 4 >> 2] = i2;
 i10 = i8;
 HEAP32[i10 >> 2] = i4;
 HEAP32[i10 + 4 >> 2] = i9;
 if ((HEAP32[i7 >> 2] | 0) >>> 0 >= (HEAP32[i6 >> 2] | 0) >>> 0) {
  i10 = i3 + 1 | 0;
  return i10 | 0;
 }
 i9 = i6;
 i8 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i9 + 4 >> 2] | 0;
 i2 = i7;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 i10 = i6;
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 + 4 >> 2] = i4;
 i10 = i7;
 HEAP32[i10 >> 2] = i8;
 HEAP32[i10 + 4 >> 2] = i9;
 if ((HEAP32[i6 >> 2] | 0) >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
  i10 = i3 + 2 | 0;
  return i10 | 0;
 }
 i9 = i5;
 i8 = HEAP32[i9 >> 2] | 0;
 i9 = HEAP32[i9 + 4 >> 2] | 0;
 i4 = i6;
 i7 = HEAP32[i4 + 4 >> 2] | 0;
 i10 = i5;
 HEAP32[i10 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i10 + 4 >> 2] = i7;
 i10 = i6;
 HEAP32[i10 >> 2] = i8;
 HEAP32[i10 + 4 >> 2] = i9;
 i10 = i3 + 3 | 0;
 return i10 | 0;
}

function __ZN5boost6spirit7classic4impl14get_definitionINS_13property_tree11json_parser12json_grammarINS4_11basic_ptreeINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_NS8_4lessISE_EEEEEENS1_14parser_contextINS1_5nil_tEEENS1_7scannerINS8_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSS_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSS_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSU_ISY_S11_SY_S15_S16_S17_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEERNT_10definitionIT1_EEPKNS1_7grammarIS1I_T0_EE(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 if ((HEAP8[50664] | 0) == 0 ? ___cxa_guard_acquire(50664) | 0 : 0) {
  HEAP32[12843] = 0;
  HEAP32[12844] = 0;
  ___cxa_guard_release(50664);
 }
 i4 = HEAP32[12844] | 0;
 if (!((i4 | 0) != 0 ? (HEAP32[i4 + 4 >> 2] | 0) != 0 : 0)) __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEC2ERNS_8weak_ptrIS1K_EE(__Znwj(28) | 0, 51372);
 i2 = HEAP32[12844] | 0;
 L10 : do if (!i2) {
  i1 = 0;
  i2 = 0;
 } else {
  i1 = i2 + 4 | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  do {
   if (!i3) {
    i1 = 0;
    i2 = 0;
    break L10;
   }
   i4 = i3;
   i3 = HEAP32[i1 >> 2] | 0;
   if ((i3 | 0) == (i4 | 0)) HEAP32[i1 >> 2] = i4 + 1;
  } while ((i3 | 0) != (i4 | 0));
  i1 = HEAP32[12843] | 0;
 } while (0);
 i1 = __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEE6defineEPKSN_(i1, i5) | 0;
 if (!i2) return i1 | 0;
 i4 = i2 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i5 - 1;
 if ((i5 | 0) != 1) return i1 | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 255](i2);
 i4 = i2 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i5 - 1;
 if ((i5 | 0) != 1) return i1 | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS4_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EENS_13property_tree11json_parser7contextINS1B_11basic_ptreeISA_SA_NS4_4lessISA_EEEEE6a_nameEEEEENS3_ISA_NS1_5chlitIcEEEEE5parseIS18_EENS1_13parser_resultIS1P_T_E4typeERKS1S_(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = i8 + 32 | 0;
 i2 = i8 + 20 | 0;
 i3 = i8 + 8 | 0;
 i6 = i8;
 i7 = __ZNK5boost6spirit7classic6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS_13property_tree11json_parser7contextINS13_11basic_ptreeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEES1C_NS5_4lessIS1C_EEEEE6a_nameEE5parseIS10_EENS1_13parser_resultIS1I_T_E4typeERKS1L_(i5, i4) | 0;
 if ((i7 | 0) < 0) {
  i9 = HEAP32[HEAP32[i4 + 4 >> 2] >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i5 + 8 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
  HEAP32[i1 >> 2] = 21124;
  HEAP32[i1 + 4 >> 2] = i9;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i2);
  __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i1);
 }
 __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_5chlitIcEEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSK_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSK_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISC_T_E4typeERKS1B_(i6, i5 + 20 | 0, i4);
 i2 = HEAP32[i6 >> 2] | 0;
 i1 = i6 + 4 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) {
  i6 = (i2 | 0) < 0;
  i9 = i2 + i7 | 0;
  i9 = i6 ? -1 : i9;
  STACKTOP = i8;
  return i9 | 0;
 }
 HEAP8[i1 >> 0] = 0;
 i6 = (i2 | 0) < 0;
 i9 = i2 + i7 | 0;
 i9 = i6 ? -1 : i9;
 STACKTOP = i8;
 return i9 | 0;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_10end_parserEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserESA_EENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SV_SW_SX_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISB_T_E4typeERKS19_(i13, i12) {
 i13 = i13 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i9 = i14 + 24 | 0;
 i10 = i14 + 12 | 0;
 i11 = i14;
 i7 = HEAP32[i12 >> 2] | 0;
 i8 = i12 + 4 | 0;
 i6 = HEAP32[i8 >> 2] | 0;
 HEAP32[i10 >> 2] = i7;
 HEAP32[i10 + 4 >> 2] = i6;
 HEAP32[i10 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
 i3 = i7 + 12 | 0;
 i4 = i7 + 20 | 0;
 i5 = i7 + 24 | 0;
 i1 = i6;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  if ((__ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i7, i10) | 0) < 0 ? (HEAP32[i6 >> 2] = i2, (__ZN5boost6spirit7classic4impl28select_confix_parse_refactorINS1_10non_nestedEE5parseINS1_9is_lexemeENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEESC_NS1_21unary_parser_categoryES4_S7_EENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSQ_INS1_12space_parserENS8_ISC_SF_NSQ_INS1_10eol_parserENS1_10end_parserEEESG_S4_S7_EEEESH_EENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEESC_SF_SC_EENS1_13parser_resultIT0_T1_E4typeERKT_RKS16_RKS17_RKT2_RKT3_RKT4_(i9, i3, i10, i3, i4, i5) | 0) < 0) : 0) break;
  i1 = HEAP32[i8 >> 2] | 0;
 }
 HEAP32[HEAP32[i8 >> 2] >> 2] = i1;
 i1 = HEAP32[i8 >> 2] | 0;
 if ((HEAP32[i1 >> 2] | 0) == (HEAP32[i12 + 8 >> 2] | 0)) {
  STACKTOP = i14;
  return 0;
 } else {
  i14 = HEAP32[i1 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i11, i13 + 4 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i10, i11);
  HEAP32[i9 >> 2] = 21124;
  HEAP32[i9 + 4 >> 2] = i14;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i9 + 8 | 0, i10);
  __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i9);
 }
 return 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i2, i3, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i7 = i20 + 24 | 0;
 i10 = i20;
 i4 = i20 + 140 | 0;
 i19 = i20 + 16 | 0;
 i8 = i20 + 12 | 0;
 i16 = i20 + 8 | 0;
 i5 = i20 + 136 | 0;
 i21 = i20 + 4 | 0;
 i9 = i20 + 36 | 0;
 HEAP32[i19 >> 2] = i4;
 i18 = i19 + 4 | 0;
 HEAP32[i18 >> 2] = 222;
 HEAP32[i16 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i16, 52980) | 0;
 HEAP8[i5 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i14 >> 2];
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i13, i7, i2, i16, i3, i15, i5, i1, i19, i8, i4 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 7](i1, 49086, 49096, i7) | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i19 >> 2] | 0;
  i1 = i2 - i4 | 0;
  if ((i1 | 0) > 98) {
   i1 = _malloc(i1 + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i11 = i1;
    i6 = i1;
   }
  } else {
   i11 = 0;
   i6 = i9;
  }
  if (!(HEAP8[i5 >> 0] | 0)) i1 = i6; else {
   HEAP8[i6 >> 0] = 45;
   i1 = i6 + 1 | 0;
  }
  i5 = i7 + 10 | 0;
  i6 = i7;
  while (1) {
   if (i4 >>> 0 >= i2 >>> 0) break;
   i3 = HEAP8[i4 >> 0] | 0;
   i2 = i7;
   while (1) {
    if ((i2 | 0) == (i5 | 0)) {
     i2 = i5;
     break;
    }
    if ((HEAP8[i2 >> 0] | 0) == i3 << 24 >> 24) break;
    i2 = i2 + 1 | 0;
   }
   HEAP8[i1 >> 0] = HEAP8[49086 + (i2 - i6) >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  HEAP8[i1 >> 0] = 0;
  HEAP32[i10 >> 2] = i12;
  _sscanf(i9, 49097, i10) | 0;
  if (i11 | 0) _free(i11);
 }
 i1 = HEAP32[i13 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i13 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i13 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 i2 = HEAP32[i14 >> 2] | 0;
 do if (i2) {
  if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
   HEAP32[i14 >> 2] = 0;
   i17 = 27;
   break;
  }
  if (!i1) i17 = 28;
 } else i17 = 27; while (0);
 if ((i17 | 0) == 27 ? i1 : 0) i17 = 28;
 if ((i17 | 0) == 28) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
 i2 = HEAP32[i13 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i18 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i10, i11, i4, i2, i12, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 i19 = i16 + 424 | 0;
 i17 = i16 + 24 | 0;
 i15 = i16 + 16 | 0;
 i5 = i16 + 8 | 0;
 i18 = i16 + 4 | 0;
 i3 = i16 + 428 | 0;
 i7 = i16;
 HEAP32[i15 >> 2] = i17;
 i14 = i15 + 4 | 0;
 HEAP32[i14 >> 2] = 222;
 i9 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i18 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i18, 53012) | 0;
 HEAP8[i3 >> 0] = 0;
 i8 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = i8;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
 i7 = i8;
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i10, i19, i4, i18, i2, i12, i3, i1, i15, i5, i17 + 400 | 0) | 0) {
  if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = 0; else HEAP32[HEAP32[i6 + 8 >> 2] >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  if (HEAP8[i3 >> 0] | 0) __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 31](i1, 45) | 0);
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 31](i1, 48) | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i2 = i4 + -4 | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break;
   if ((HEAP32[i1 >> 2] | 0) != (i3 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i6, i1, i4) | 0;
 }
 i1 = HEAP32[i10 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i10 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i10 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i8) {
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i7) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i13 = 27;
   break;
  } else {
   HEAP32[i11 >> 2] = 0;
   i13 = 25;
   break;
  }
 } else i13 = 25; while (0);
 if ((i13 | 0) == 25 ? i2 : 0) i13 = 27;
 if ((i13 | 0) == 27) HEAP32[i12 >> 2] = HEAP32[i12 >> 2] | 2;
 i2 = HEAP32[i10 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
 STACKTOP = i16;
 return i2 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_E16do_parse_virtualERKS12_(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = i6 + 4 | 0;
 i4 = HEAP32[HEAP32[i2 >> 2] >> 2] | 0;
 i1 = __ZNK5boost6spirit7classic6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EENS_13property_tree11json_parser7contextINS13_11basic_ptreeINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEES1C_NS5_4lessIS1C_EEEEE12a_string_valEE5parseIS10_EENS1_13parser_resultIS1I_T_E4typeERKS1L_(i5 + 4 | 0, i6) | 0;
 if ((i1 | 0) >= 0) {
  i6 = i1;
  return i6 | 0;
 }
 HEAP32[HEAP32[i2 >> 2] >> 2] = i4;
 i1 = __ZNK5boost6spirit7classic6actionINS1_11alternativeINS3_INS3_INS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS3_INS3_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS3_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES11_EESH_EESH_EESH_EENS_13property_tree11json_parser7contextINS16_11basic_ptreeINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEES1F_NS6_4lessIS1F_EEEEE13a_literal_valEE5parseIS10_EENS1_13parser_resultIS1L_T_E4typeERKS1O_(i5 + 12 | 0, i6) | 0;
 if ((i1 | 0) >= 0) {
  i6 = i1;
  return i6 | 0;
 }
 HEAP32[HEAP32[i2 >> 2] >> 2] = i4;
 i1 = HEAP32[HEAP32[i5 + 44 >> 2] >> 2] | 0;
 if (i1 | 0 ? (i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i6) | 0, (i3 | 0) >= 0) : 0) {
  i6 = i3;
  return i6 | 0;
 }
 HEAP32[HEAP32[i2 >> 2] >> 2] = i4;
 i1 = HEAP32[HEAP32[i5 + 48 >> 2] >> 2] | 0;
 if (!i1) {
  i6 = -1;
  return i6 | 0;
 }
 i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i6) | 0;
 return i6 | 0;
}

function __ZNK5boost6spirit7classic11alternativeINS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_ISJ_NS4_IS8_SB_S8_SF_SG_SH_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISJ_T_E4typeERKS13_(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i11;
 i8 = i5 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i2 = i4;
 i9 = i5 + 8 | 0;
 do if ((i2 | 0) != (HEAP32[i9 >> 2] | 0)) {
  if (!(_isspace(HEAPU8[i2 >> 0] | 0) | 0)) {
   i1 = HEAP32[i8 >> 2] | 0;
   break;
  }
  i10 = HEAP32[i8 >> 2] | 0;
  HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
  i10 = 1;
  STACKTOP = i11;
  return i10 | 0;
 } while (0);
 HEAP32[i1 >> 2] = i4;
 i4 = HEAP8[54933] | 0;
 i7 = HEAP8[i6 + 9 >> 0] | 0;
 i2 = (i7 & 255) << 8 & 65535 | HEAPU8[i6 + 8 >> 0];
 i12 = i6;
 i1 = HEAP32[i12 + 4 >> 2] | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i6 + 4 >> 2] = i1;
 HEAP16[i3 + 8 >> 1] = i2;
 HEAP8[i3 + 10 >> 0] = i4;
 HEAP8[i3 + 12 >> 0] = i7;
 i7 = __ZNK5boost6spirit7classic8sequenceINS1_6strlitIPKcEENS1_22refactor_action_parserINS1_10differenceINS1_11kleene_starINS1_14anychar_parserEEENS1_11alternativeINS1_10eol_parserENS1_10end_parserEEEEENS1_18refactor_unary_genINS1_22non_nested_refactoringEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINSC_INSC_INS1_12space_parserENS1_13confix_parserIS6_SB_SF_NS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS6_SB_S6_SX_SY_SZ_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1C_(i3, i5) | 0;
 do if ((i7 | 0) < 0) i1 = -1; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i6 = HEAP32[i1 >> 2] | 0;
  i2 = i6;
  i3 = HEAP32[i9 >> 2] | 0;
  do if ((i2 | 0) != (i3 | 0)) {
   if ((HEAP8[i2 >> 0] | 0) == 13) {
    HEAP32[i1 >> 2] = i2 + 1;
    i1 = HEAP32[i8 >> 2] | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i3 = HEAP32[i9 >> 2] | 0;
    i5 = i1;
    i4 = 1;
   } else {
    i5 = i1;
    i4 = 0;
   }
   if ((i2 | 0) != (i3 | 0) ? (HEAP8[i2 >> 0] | 0) == 10 : 0) {
    HEAP32[i5 >> 2] = i2 + 1;
    i1 = i4 + 1 | 0;
    break;
   }
   if (!i4) i10 = 13; else i1 = 1;
  } else i10 = 13; while (0);
  if ((i10 | 0) == 13) {
   HEAP32[i1 >> 2] = i6;
   i1 = (HEAP32[HEAP32[i8 >> 2] >> 2] | 0) != (HEAP32[i9 >> 2] | 0);
   if (i1) {
    i1 = -1;
    break;
   } else i1 = i1 << 31 >> 31;
  }
  i1 = i1 + i7 | 0;
 } while (0);
 i12 = i1;
 STACKTOP = i11;
 return i12 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj(i11, i12, i5, i6, i4, i10) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0;
 i1 = i12 + 44 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i8 = i12 + 24 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i3 = i9;
 if (i2 >>> 0 < i9 >>> 0) {
  HEAP32[i1 >> 2] = i9;
  i7 = i3;
 } else i7 = i2;
 i1 = i10 & 24;
 if (!i1) {
  i12 = i11;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i12 + 4 >> 2] = 0;
  i12 = i11 + 8 | 0;
  HEAP32[i12 >> 2] = -1;
  HEAP32[i12 + 4 >> 2] = -1;
  return;
 }
 if ((i4 | 0) == 1 & (i1 | 0) == 24) {
  i12 = i11;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i12 + 4 >> 2] = 0;
  i12 = i11 + 8 | 0;
  HEAP32[i12 >> 2] = -1;
  HEAP32[i12 + 4 >> 2] = -1;
  return;
 }
 L12 : do switch (i4 | 0) {
 case 0:
  {
   i1 = 0;
   i2 = 0;
   break;
  }
 case 1:
  if (!(i10 & 8)) {
   i2 = i3 - (HEAP32[i12 + 20 >> 2] | 0) | 0;
   i1 = i2;
   i2 = ((i2 | 0) < 0) << 31 >> 31;
   break L12;
  } else {
   i2 = (HEAP32[i12 + 12 >> 2] | 0) - (HEAP32[i12 + 8 >> 2] | 0) | 0;
   i1 = i2;
   i2 = ((i2 | 0) < 0) << 31 >> 31;
   break L12;
  }
 case 2:
  {
   i1 = i12 + 32 | 0;
   if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i12 + 40 >> 2] | 0;
   i2 = i7 - i1 | 0;
   i1 = i2;
   i2 = ((i2 | 0) < 0) << 31 >> 31;
   break;
  }
 default:
  {
   i12 = i11;
   HEAP32[i12 >> 2] = 0;
   HEAP32[i12 + 4 >> 2] = 0;
   i12 = i11 + 8 | 0;
   HEAP32[i12 >> 2] = -1;
   HEAP32[i12 + 4 >> 2] = -1;
   return;
  }
 } while (0);
 i2 = _i64Add(i1 | 0, i2 | 0, i5 | 0, i6 | 0) | 0;
 i3 = tempRet0;
 if ((i3 | 0) >= 0) {
  i1 = i12 + 32 | 0;
  if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i12 + 40 >> 2] | 0;
  i6 = i7 - i1 | 0;
  i5 = ((i6 | 0) < 0) << 31 >> 31;
  if (!((i5 | 0) < (i3 | 0) | (i5 | 0) == (i3 | 0) & i6 >>> 0 < i2 >>> 0)) {
   i1 = i10 & 8;
   if (!((i2 | 0) == 0 & (i3 | 0) == 0)) {
    if (i1 | 0 ? (HEAP32[i12 + 12 >> 2] | 0) == 0 : 0) {
     i12 = i11;
     HEAP32[i12 >> 2] = 0;
     HEAP32[i12 + 4 >> 2] = 0;
     i12 = i11 + 8 | 0;
     HEAP32[i12 >> 2] = -1;
     HEAP32[i12 + 4 >> 2] = -1;
     return;
    }
    if ((i10 & 16 | 0) != 0 & (i9 | 0) == 0) {
     i12 = i11;
     HEAP32[i12 >> 2] = 0;
     HEAP32[i12 + 4 >> 2] = 0;
     i12 = i11 + 8 | 0;
     HEAP32[i12 >> 2] = -1;
     HEAP32[i12 + 4 >> 2] = -1;
     return;
    }
   }
   if (i1 | 0) {
    HEAP32[i12 + 12 >> 2] = (HEAP32[i12 + 8 >> 2] | 0) + i2;
    HEAP32[i12 + 16 >> 2] = i7;
   }
   if (i10 & 16 | 0) HEAP32[i8 >> 2] = (HEAP32[i12 + 20 >> 2] | 0) + i2;
   i12 = i11;
   HEAP32[i12 >> 2] = 0;
   HEAP32[i12 + 4 >> 2] = 0;
   i12 = i11 + 8 | 0;
   HEAP32[i12 >> 2] = i2;
   HEAP32[i12 + 4 >> 2] = i3;
   return;
  }
 }
 i12 = i11;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i12 + 4 >> 2] = 0;
 i12 = i11 + 8 | 0;
 HEAP32[i12 >> 2] = -1;
 HEAP32[i12 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__16vectorIcNS_9allocatorIcEEEC2INS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEET_NS_9enable_ifIXaaaasr19__is_input_iteratorIS9_EE5valuentsr21__is_forward_iteratorIS9_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS9_E9referenceEEE5valueES9_E4typeE(i16, i14, i15) {
 i16 = i16 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 HEAP32[i16 >> 2] = 0;
 i12 = i16 + 4 | 0;
 HEAP32[i12 >> 2] = 0;
 HEAP32[i16 + 8 >> 2] = 0;
 i13 = i16 + 8 | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 L1 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i14 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i3 = HEAP32[i15 >> 2] | 0;
  do if (i3) {
   if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i2) break; else {
    i17 = 29;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i2) break; else {
    i17 = 29;
    break L1;
   } else {
    HEAP32[i15 >> 2] = 0;
    i17 = 11;
    break;
   }
  } else i17 = 11; while (0);
  if ((i17 | 0) == 11 ? (i17 = 0, i2) : 0) {
   i17 = 29;
   break;
  }
  i10 = i1 + 12 | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  i11 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i11 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  i8 = i2 & 255;
  i2 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i13 >> 2] | 0;
  if (i2 >>> 0 >= i3 >>> 0) {
   i9 = HEAP32[i16 >> 2] | 0;
   i4 = i2 - i9 + 1 | 0;
   if ((i4 | 0) < 0) {
    i17 = 19;
    break;
   }
   i7 = i9;
   i2 = i3 - i9 | 0;
   if (i2 >>> 0 < 1073741823) {
    i2 = i2 << 1;
    i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
    i4 = HEAP32[i12 >> 2] | 0;
    i3 = i4 - i9 | 0;
    if (!i2) {
     i6 = 0;
     i5 = 0;
     i2 = i4;
    } else i17 = 23;
   } else {
    i3 = HEAP32[i12 >> 2] | 0;
    i2 = 2147483647;
    i4 = i3;
    i3 = i3 - i9 | 0;
    i17 = 23;
   }
   if ((i17 | 0) == 23) {
    i17 = 0;
    i6 = i2;
    i5 = __Znwj(i2) | 0;
    i2 = i4;
   }
   i4 = i5 + i3 | 0;
   HEAP8[i4 >> 0] = i8;
   i3 = i2 - i9 | 0;
   i8 = i4 + (0 - i3) | 0;
   _memcpy(i8 | 0, i7 | 0, i3 | 0) | 0;
   HEAP32[i16 >> 2] = i8;
   HEAP32[i12 >> 2] = i4 + 1;
   HEAP32[i13 >> 2] = i5 + i6;
   if (i9 | 0) __ZdlPv(i7);
  } else {
   HEAP8[i2 >> 0] = i8;
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 1;
  }
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i11 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i10 >> 2] = i2 + 1;
   continue;
  }
 }
 if ((i17 | 0) == 19) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i16); else if ((i17 | 0) == 29) return;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i10, i11, i4, i2, i12, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i19 = i16 + 24 | 0;
 i17 = i16 + 32 | 0;
 i15 = i16 + 16 | 0;
 i5 = i16 + 8 | 0;
 i18 = i16 + 4 | 0;
 i3 = i16 + 28 | 0;
 i7 = i16;
 HEAP32[i15 >> 2] = i17;
 i14 = i15 + 4 | 0;
 HEAP32[i14 >> 2] = 222;
 i9 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i18 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i18, 52980) | 0;
 HEAP8[i3 >> 0] = 0;
 i8 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = i8;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
 i7 = i8;
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i10, i19, i4, i18, i2, i12, i3, i1, i15, i5, i17 + 100 | 0) | 0) {
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 + 1 >> 0] = 0;
   HEAP8[i6 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i6 + 8 >> 2] >> 0] = 0;
   HEAP32[i6 + 4 >> 2] = 0;
  }
  if (HEAP8[i3 >> 0] | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 45) | 0);
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 48) | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i2 = i4 + -1 | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break;
   if ((HEAP8[i1 >> 0] | 0) != i3 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i6, i1, i4) | 0;
 }
 i1 = HEAP32[i10 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i10 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 do if (i8) {
  if ((HEAP32[i7 + 12 >> 2] | 0) == (HEAP32[i7 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i7) | 0) == -1 : 0) {
   HEAP32[i11 >> 2] = 0;
   i13 = 22;
   break;
  }
  if (!i1) i13 = 23;
 } else i13 = 22; while (0);
 if ((i13 | 0) == 22 ? i1 : 0) i13 = 23;
 if ((i13 | 0) == 23) HEAP32[i12 >> 2] = HEAP32[i12 >> 2] | 2;
 i2 = HEAP32[i10 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
 STACKTOP = i16;
 return i2 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50776] | 0) == 0 ? ___cxa_guard_acquire(50776) | 0 : 0) {
  if ((HEAP8[50784] | 0) == 0 ? ___cxa_guard_acquire(50784) | 0 : 0) {
   i1 = 54036;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 54324);
   ___cxa_guard_release(50784);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54036, 27084) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54048, 27116) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54060, 27152) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54072, 27176) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54084, 27200) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54096, 27216) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54108, 27236) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54120, 27256) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54132, 27284) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54144, 27324) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54156, 27356) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54168, 27392) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54180, 27428) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54192, 27444) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54204, 27460) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54216, 27476) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54228, 27200) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54240, 27492) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54252, 27508) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54264, 27524) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54276, 27540) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54288, 27556) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54300, 27572) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54312, 27588) | 0;
  HEAP32[13581] = 54036;
  ___cxa_guard_release(50776);
 }
 return HEAP32[13581] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50696] | 0) == 0 ? ___cxa_guard_acquire(50696) | 0 : 0) {
  if ((HEAP8[50704] | 0) == 0 ? ___cxa_guard_acquire(50704) | 0 : 0) {
   i1 = 53224;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 53512);
   ___cxa_guard_release(50704);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53224, 48409) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53236, 48417) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53248, 48426) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53260, 48432) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53272, 48438) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53284, 48442) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53296, 48447) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53308, 48452) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53320, 48459) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53332, 48469) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53344, 48477) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53356, 48486) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53368, 48495) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53380, 48499) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53392, 48503) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53404, 48507) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53416, 48438) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53428, 48511) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53440, 48515) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53452, 48519) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53464, 48523) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53476, 48527) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53488, 48531) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53500, 48535) | 0;
  HEAP32[13378] = 53224;
  ___cxa_guard_release(50696);
 }
 return HEAP32[13378] | 0;
}

function __ZNK12mp5_implicit5scone13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i21, i4, i17) {
 i21 = i21 | 0;
 i4 = i4 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, d28 = 0.0, d29 = 0.0;
 i24 = HEAP32[i4 + 16 >> 2] | 0;
 i26 = HEAP32[i4 + 24 >> 2] | 0;
 i27 = HEAP32[i4 + 28 >> 2] | 0;
 i23 = HEAP32[i4 + 32 >> 2] | 0;
 i22 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i25 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i25 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i25;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i20 = HEAP32[i21 + 36 >> 2] | 0;
 d5 = +HEAPF32[i20 >> 2];
 d6 = +HEAPF32[i20 + 4 >> 2];
 d7 = +HEAPF32[i20 + 8 >> 2];
 d8 = +HEAPF32[i20 + 12 >> 2];
 d9 = +HEAPF32[i20 + 16 >> 2];
 d10 = +HEAPF32[i20 + 20 >> 2];
 d11 = +HEAPF32[i20 + 24 >> 2];
 d12 = +HEAPF32[i20 + 28 >> 2];
 d13 = +HEAPF32[i20 + 32 >> 2];
 d14 = +HEAPF32[i20 + 36 >> 2];
 d15 = +HEAPF32[i20 + 40 >> 2];
 d16 = +HEAPF32[i20 + 44 >> 2];
 if (i24 | 0) {
  i1 = i27 << 1;
  i2 = i25 + (i22 << 2) | 0;
  i3 = 0;
  do {
   i18 = i2 + ((Math_imul(i3, i26) | 0) << 2) | 0;
   d29 = +HEAPF32[i18 >> 2];
   i19 = i18 + (i27 << 2) | 0;
   d28 = +HEAPF32[i19 >> 2];
   i20 = i18 + (i1 << 2) | 0;
   HEAPF32[i18 >> 2] = d8 + (d5 * d29 + d6 * d28 + d7 * +HEAPF32[i20 >> 2]);
   HEAPF32[i19 >> 2] = d12 + (d9 * d29 + d10 * d28 + d11 * +HEAPF32[i20 >> 2]);
   HEAPF32[i20 >> 2] = d16 + (d13 * d29 + d14 * d28 + d15 * +HEAPF32[i20 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i24 | 0));
 }
 d8 = +HEAPF32[i21 + 8 >> 2];
 d8 = d8 * d8;
 d9 = +HEAPF32[i21 + 12 >> 2];
 d9 = d9 * d9;
 i18 = i21 + 16 | 0;
 d10 = +HEAPF32[i21 + 20 >> 2];
 d11 = +HEAPF32[i21 + 24 >> 2];
 d12 = +HEAPF32[i21 + 28 >> 2];
 if ((0 - i24 | 0) >= 0) {
  __ZdlPv(i25);
  return;
 }
 i19 = i27 << 1;
 i20 = (HEAP32[i17 >> 2] | 0) + (HEAP32[i17 + 24 >> 2] << 2) | 0;
 i17 = HEAP32[i17 + 16 >> 2] | 0;
 i4 = i21 + 4 | 0;
 i3 = i25 + (i22 << 2) | 0;
 i1 = i23;
 i2 = 0;
 while (1) {
  i23 = i3 + ((Math_imul(i1, i26) | 0) << 2) | 0;
  d5 = +HEAPF32[i23 >> 2];
  d6 = +HEAPF32[i23 + (i27 << 2) >> 2];
  d29 = +HEAPF32[i23 + (i19 << 2) >> 2] - d12;
  d7 = (1.0 - d29 / +HEAPF32[i18 >> 2]) * .5;
  if (d29 >= 0.0 ? d29 < +HEAPF32[i4 >> 2] : 0) {
   d29 = d5 - d10;
   d5 = d6 - d11;
   d5 = -(d29 * d29) / d8 - d5 * d5 / d9 + d7 * d7;
  } else d5 = -1.0;
  HEAPF32[i20 + ((Math_imul(i17, i2) | 0) << 2) >> 2] = d5;
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i24 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i25);
 return;
}

function __ZN5boost6spirit7classic4impl23contiguous_parser_parseINS1_5matchImEENS2_16uint_parser_implImLi16ELj4ELi4EEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSG_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSG_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSI_ISM_SP_SM_ST_SU_SV_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEES11_EET_RKT0_RKT1_RKNSE_IT2_EE(i13, i2, i3, i1) {
 i13 = i13 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i10 = i3 + 4 | 0;
 i1 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0;
 i6 = i3 + 8 | 0;
 do if ((i1 | 0) != (HEAP32[i6 >> 2] | 0)) {
  i2 = HEAP8[i1 >> 0] | 0;
  i1 = i2 & 255;
  if ((i1 + -48 | 0) >>> 0 < 10) i3 = (i2 << 24 >> 24) + -48 | 0; else {
   i1 = _tolower(i1) | 0;
   if (((i1 & 255) + -97 & 255) >= 6) break;
   i3 = (i1 << 24 >> 24) + -87 | 0;
  }
  i1 = HEAP32[i10 >> 2] | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
  i1 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0;
  if ((i1 | 0) != (HEAP32[i6 >> 2] | 0)) {
   i1 = HEAP8[i1 >> 0] | 0;
   i2 = i1 & 255;
   if ((i2 + -48 | 0) >>> 0 < 10) i1 = (i1 << 24 >> 24) + -48 | 0; else {
    i1 = _tolower(i2) | 0;
    if (((i1 & 255) + -97 & 255) >= 6) break;
    i1 = (i1 << 24 >> 24) + -87 | 0;
   }
   if ((i3 >>> 0 <= 268435455 ? (i4 = i3 << 4, i4 >>> 0 <= ~i1 >>> 0) : 0) ? (i7 = i1 + i4 | 0, i5 = HEAP32[i10 >> 2] | 0, HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1, i5 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0, (i5 | 0) != (HEAP32[i6 >> 2] | 0)) : 0) {
    i1 = HEAP8[i5 >> 0] | 0;
    i2 = i1 & 255;
    if ((i2 + -48 | 0) >>> 0 < 10) i1 = (i1 << 24 >> 24) + -48 | 0; else {
     i1 = _tolower(i2) | 0;
     if (((i1 & 255) + -97 & 255) >= 6) break;
     i1 = (i1 << 24 >> 24) + -87 | 0;
    }
    if ((i7 >>> 0 <= 268435455 ? (i8 = i7 << 4, i8 >>> 0 <= ~i1 >>> 0) : 0) ? (i11 = i1 + i8 | 0, i9 = HEAP32[i10 >> 2] | 0, HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1, i9 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0, (i9 | 0) != (HEAP32[i6 >> 2] | 0)) : 0) {
     i1 = HEAP8[i9 >> 0] | 0;
     i2 = i1 & 255;
     if ((i2 + -48 | 0) >>> 0 < 10) i1 = (i1 << 24 >> 24) + -48 | 0; else {
      i1 = _tolower(i2) | 0;
      if (((i1 & 255) + -97 & 255) >= 6) break;
      i1 = (i1 << 24 >> 24) + -87 | 0;
     }
     if (i11 >>> 0 <= 268435455 ? (i12 = i11 << 4, i12 >>> 0 <= ~i1 >>> 0) : 0) {
      i11 = HEAP32[i10 >> 2] | 0;
      HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
      HEAP32[i13 >> 2] = 4;
      HEAP32[i13 + 8 >> 2] = i1 + i12;
      HEAP8[i13 + 4 >> 0] = 1;
      return;
     }
    }
   }
  }
 } while (0);
 HEAP32[i13 >> 2] = -1;
 HEAP8[i13 + 4 >> 0] = 0;
 return;
}

function __ZNK12mp5_implicit3egg13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i8, i5, i25) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 i25 = i25 | 0;
 var i1 = 0, i2 = 0, i3 = 0, d4 = 0.0, d6 = 0.0, d7 = 0.0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, d31 = 0.0, d32 = 0.0;
 i27 = HEAP32[i5 + 16 >> 2] | 0;
 i29 = HEAP32[i5 + 24 >> 2] | 0;
 i30 = HEAP32[i5 + 28 >> 2] | 0;
 i26 = HEAP32[i5 + 32 >> 2] | 0;
 i24 = HEAP32[i5 + 40 >> 2] | 0;
 i1 = HEAP32[i5 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i28 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i28 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i5 + 56 >> 2] | 0;
  i2 = i28;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i23 = HEAP32[i8 + 32 >> 2] | 0;
 d4 = +HEAPF32[i23 >> 2];
 d6 = +HEAPF32[i23 + 4 >> 2];
 d7 = +HEAPF32[i23 + 8 >> 2];
 d11 = +HEAPF32[i23 + 12 >> 2];
 d12 = +HEAPF32[i23 + 16 >> 2];
 d13 = +HEAPF32[i23 + 20 >> 2];
 d14 = +HEAPF32[i23 + 24 >> 2];
 d15 = +HEAPF32[i23 + 28 >> 2];
 d16 = +HEAPF32[i23 + 32 >> 2];
 d17 = +HEAPF32[i23 + 36 >> 2];
 d18 = +HEAPF32[i23 + 40 >> 2];
 d19 = +HEAPF32[i23 + 44 >> 2];
 if (i27 | 0) {
  i1 = i30 << 1;
  i2 = i28 + (i24 << 2) | 0;
  i3 = 0;
  do {
   i21 = i2 + ((Math_imul(i3, i29) | 0) << 2) | 0;
   d32 = +HEAPF32[i21 >> 2];
   i22 = i21 + (i30 << 2) | 0;
   d31 = +HEAPF32[i22 >> 2];
   i23 = i21 + (i1 << 2) | 0;
   HEAPF32[i21 >> 2] = d11 + (d4 * d32 + d6 * d31 + d7 * +HEAPF32[i23 >> 2]);
   HEAPF32[i22 >> 2] = d15 + (d12 * d32 + d13 * d31 + d14 * +HEAPF32[i23 >> 2]);
   HEAPF32[i23 >> 2] = d19 + (d16 * d32 + d17 * d31 + d18 * +HEAPF32[i23 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i27 | 0));
 }
 d4 = +HEAPF32[i8 + 4 >> 2];
 d6 = +HEAPF32[i8 + 8 >> 2];
 d7 = +HEAPF32[i8 + 12 >> 2];
 if ((0 - i27 | 0) >= 0) {
  __ZdlPv(i28);
  return;
 }
 i23 = i8 + 16 | 0;
 d11 = d4 * d4;
 i22 = i8 + 20 | 0;
 d6 = d6 * d6;
 i20 = HEAP32[i25 + 28 >> 2] | 0;
 i21 = i30 << 1;
 i10 = i8 + 24 | 0;
 d4 = d7 * d7;
 i9 = i20 << 1;
 i5 = i28 + (i24 << 2) | 0;
 i8 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i25 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i25 + 24 >> 2] | 0;
 i1 = i26;
 i2 = 0;
 while (1) {
  i25 = i5 + ((Math_imul(i1, i29) | 0) << 2) | 0;
  i26 = i8 + ((Math_imul(i3, i2) | 0) << 2) | 0;
  HEAPF32[i26 >> 2] = (+HEAPF32[i25 >> 2] - +HEAPF32[i23 >> 2]) * -2.0 / d11;
  HEAPF32[i26 + (i20 << 2) >> 2] = (+HEAPF32[i25 + (i30 << 2) >> 2] - +HEAPF32[i22 >> 2]) * -2.0 / d6;
  HEAPF32[i26 + (i9 << 2) >> 2] = (+HEAPF32[i25 + (i21 << 2) >> 2] - +HEAPF32[i10 >> 2]) * -2.0 / d4;
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i27 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i28);
 return;
}

function __ZN5boost7numeric5ublas12lu_factorizeINS1_6matrixIfNS1_15basic_row_majorIjiEENS1_15unbounded_arrayIfNSt3__19allocatorIfEEEEEENS1_18permutation_matrixIjNS6_IjNS8_IjEEEEEEEENT_9size_typeERSG_RT0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i17 = HEAP32[i1 >> 2] | 0;
 i18 = i1 + 4 | 0;
 i19 = HEAP32[i18 >> 2] | 0;
 i20 = i19 >>> 0 < i17 >>> 0 ? i19 : i17;
 if (!i20) {
  i20 = 0;
  return i20 | 0;
 }
 i16 = i1 + 16 | 0;
 i14 = i2 + 8 | 0;
 i15 = 0;
 i1 = 0;
 while (1) {
  i5 = i17 - i15 | 0;
  i2 = HEAP32[i18 >> 2] | 0;
  i9 = HEAP32[i16 >> 2] | 0;
  if ((i17 | 0) == (i15 | 0)) i3 = 0; else {
   i7 = 0;
   i3 = 0;
   d8 = 0.0;
   while (1) {
    d6 = +Math_abs(+(+HEAPF32[i9 + ((Math_imul(i7 + i15 | 0, i2) | 0) + i15 << 2) >> 2]));
    i4 = d6 > d8;
    i3 = i4 ? i7 : i3;
    i7 = i7 + 1 | 0;
    if ((i7 | 0) == (i5 | 0)) break; else d8 = i4 ? d6 : d8;
   }
  }
  i5 = i3 + i15 | 0;
  if (+HEAPF32[i9 + ((Math_imul(i2, i5) | 0) + i15 << 2) >> 2] != 0.0) {
   if (i3) {
    HEAP32[(HEAP32[i14 >> 2] | 0) + (i15 << 2) >> 2] = i5;
    i2 = HEAP32[i18 >> 2] | 0;
    if ((i2 | 0) > 0) {
     i4 = i9 + ((Math_imul(i2, i15) | 0) << 2) | 0;
     i3 = i9 + ((Math_imul(i2, i5) | 0) << 2) | 0;
     while (1) {
      i13 = HEAP32[i3 >> 2] | 0;
      HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
      HEAP32[i4 >> 2] = i13;
      if ((i2 | 0) > 1) {
       i4 = i4 + 4 | 0;
       i3 = i3 + 4 | 0;
       i2 = i2 + -1 | 0;
      } else break;
     }
     i2 = HEAP32[i18 >> 2] | 0;
    }
   }
   i7 = (Math_imul(i2, i15) | 0) + i15 | 0;
   i3 = HEAP32[i16 >> 2] | 0;
   d6 = 1.0 / +HEAPF32[i3 + (i7 << 2) >> 2];
   i7 = i15 + 1 | 0;
   i4 = i17 - i7 | 0;
   if ((i17 | 0) != (i7 | 0)) {
    i5 = 0;
    do {
     i13 = i3 + ((Math_imul(i2, i5 + i7 | 0) | 0) + i15 << 2) | 0;
     HEAPF32[i13 >> 2] = d6 * +HEAPF32[i13 >> 2];
     i5 = i5 + 1 | 0;
    } while ((i5 | 0) != (i4 | 0));
   }
  } else {
   i13 = i15 + 1 | 0;
   i4 = i17 - i13 | 0;
   i7 = i13;
   i1 = (i1 | 0) == 0 ? i13 : i1;
  }
  i2 = i19 - i7 | 0;
  if (!((i17 | 0) == (i7 | 0) | (i19 | 0) == (i7 | 0))) {
   i3 = HEAP32[i18 >> 2] | 0;
   i5 = HEAP32[i16 >> 2] | 0;
   i9 = Math_imul(i3, i15) | 0;
   i12 = 0;
   do {
    i10 = Math_imul(i3, i12 + i7 | 0) | 0;
    i11 = i5 + (i10 + i15 << 2) | 0;
    i13 = 0;
    do {
     i22 = i13 + i7 | 0;
     i21 = i5 + (i10 + i22 << 2) | 0;
     HEAPF32[i21 >> 2] = +HEAPF32[i21 >> 2] - +HEAPF32[i11 >> 2] * +HEAPF32[i5 + (i9 + i22 << 2) >> 2];
     i13 = i13 + 1 | 0;
    } while ((i13 | 0) != (i2 | 0));
    i12 = i12 + 1 | 0;
   } while ((i12 | 0) != (i4 | 0));
  }
  if (i7 >>> 0 < i20 >>> 0) i15 = i7; else break;
 }
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_E16do_parse_virtualERKS1O_(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i5;
 __ZNK5boost6spirit7classic6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEE10a_object_sEE5parseINS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINST_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENST_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSV_ISZ_S12_SZ_S16_S17_S18_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1K_(i2, i4 + 4 | 0, i3);
 i1 = HEAP32[i2 >> 2] | 0;
 i2 = i2 + 4 | 0;
 if (HEAP8[i2 >> 0] | 0) HEAP8[i2 >> 0] = 0;
 if ((i1 | 0) < 0) {
  i4 = -1;
  STACKTOP = i5;
  return i4 | 0;
 } else {
  i4 = __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS6_11basic_ptreeINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_NSA_4lessISG_EEEEE10a_object_eEEENS1_8sequenceINS1_11list_parserINS1_4ruleINS1_7scannerINSA_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSX_IS11_S14_S11_S18_S19_S1A_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1L_EES5_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISG_SM_EEEEE5parseIS1K_EENS1_13parser_resultIS1T_T_E4typeERKS1W_(i4 + 12 | 0, i3) | 0;
  i4 = (i4 | 0) < 0 ? -1 : i4 + i1 | 0;
  STACKTOP = i5;
  return i4 | 0;
 }
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(i4, i8, i1, i13, i14, i2, i9, i12) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i15;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i13 | 0)) {
   i3 = i13;
   break;
  }
  if (!(HEAP8[i3 >> 0] | 0)) break;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i12 >> 2] = i2;
 HEAP32[i14 >> 2] = i1;
 i7 = i9;
 i10 = i4 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i9 | 0) | (i1 | 0) == (i13 | 0)) {
   i3 = 34;
   break;
  }
  i6 = i8;
  i5 = HEAP32[i6 + 4 >> 2] | 0;
  i4 = i11;
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = i3;
  i5 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
  i6 = _mbsnrtowcs(i2, i14, i4 - i1 | 0, i7 - i2 >> 2, i8) | 0;
  if (i5 | 0) _uselocale(i5) | 0;
  switch (i6 | 0) {
  case -1:
   {
    i3 = 10;
    break L6;
   }
  case 0:
   {
    i1 = 2;
    i3 = 30;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i12 >> 2] | 0) + (i6 << 2) | 0;
  HEAP32[i12 >> 2] = i2;
  if ((i2 | 0) == (i9 | 0)) {
   i3 = 31;
   break;
  }
  i1 = HEAP32[i14 >> 2] | 0;
  if ((i3 | 0) == (i13 | 0)) i3 = i13; else {
   i3 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
   i1 = _mbrtowc(i2, i1, 1, i8) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   if (i1 | 0) {
    i1 = 2;
    i3 = 30;
    break;
   }
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 4;
   i1 = (HEAP32[i14 >> 2] | 0) + 1 | 0;
   HEAP32[i14 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i13 | 0)) {
     i3 = i13;
     break;
    }
    if (!(HEAP8[i3 >> 0] | 0)) break;
    i3 = i3 + 1 | 0;
   }
   i2 = HEAP32[i12 >> 2] | 0;
  }
 }
 do if ((i3 | 0) == 10) {
  L29 : while (1) {
   HEAP32[i12 >> 2] = i2;
   if ((i1 | 0) == (HEAP32[i14 >> 2] | 0)) {
    i3 = 20;
    break;
   }
   i3 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
   i2 = _mbrtowc(i2, i1, i4 - i1 | 0, i11) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   switch (i2 | 0) {
   case -1:
    {
     i3 = 16;
     break L29;
    }
   case -2:
    {
     i3 = 17;
     break L29;
    }
   case 0:
    {
     i1 = i1 + 1 | 0;
     break;
    }
   default:
    i1 = i1 + i2 | 0;
   }
   i2 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
  }
  if ((i3 | 0) == 16) {
   HEAP32[i14 >> 2] = i1;
   i1 = 2;
   i3 = 30;
   break;
  } else if ((i3 | 0) == 17) {
   HEAP32[i14 >> 2] = i1;
   i1 = 1;
   i3 = 30;
   break;
  } else if ((i3 | 0) == 20) {
   HEAP32[i14 >> 2] = i1;
   i1 = (i1 | 0) != (i13 | 0) & 1;
   i3 = 30;
   break;
  }
 } else if ((i3 | 0) == 31) {
  i1 = HEAP32[i14 >> 2] | 0;
  i3 = 34;
 } while (0);
 if ((i3 | 0) != 30) if ((i3 | 0) == 34) i1 = (i1 | 0) != (i13 | 0) & 1;
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN5boost13property_tree17stream_translatorIcNSt3__111char_traitsIcEENS2_9allocatorIcEEiE9get_valueERKNS2_12basic_stringIcS4_S6_EE(i10, i5, i1) {
 i10 = i10 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i6 = i12 + 156 | 0;
 i2 = i12 + 152 | 0;
 i13 = i12 + 148 | 0;
 i3 = i12 + 144 | 0;
 i11 = i12 + 4 | 0;
 i4 = i12;
 i8 = i11 + 60 | 0;
 i9 = i11 + 8 | 0;
 HEAP32[i11 >> 2] = 21572;
 HEAP32[i8 >> 2] = 21592;
 HEAP32[i11 + 4 >> 2] = 0;
 __ZNSt3__18ios_base4initEPv(i11 + 60 | 0, i9);
 HEAP32[i11 + 132 >> 2] = 0;
 HEAP32[i11 + 136 >> 2] = -1;
 HEAP32[i11 >> 2] = 21516;
 HEAP32[i8 >> 2] = 21536;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i9);
 HEAP32[i9 >> 2] = 20212;
 i7 = i11 + 40 | 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 HEAP32[i11 + 56 >> 2] = 8;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i9, i1);
 i1 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = __ZNKSt3__18ios_base6getlocEv(i1) | 0;
 HEAP32[i13 >> 2] = __ZNSt3__18ios_base5imbueERKNS_6localeE(i1, i5) | 0;
 __ZNSt3__16localeD2Ev(i13);
 i1 = HEAP32[i1 + 24 >> 2] | 0;
 if (i1 | 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 63](i1, i5);
  i13 = i1 + 4 | 0;
  __ZNSt3__16localeC2ERKS0_(i6, i13);
  __ZNSt3__16localeaSERKS0_(i13, i5) | 0;
  HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
  __ZNSt3__16localeD2Ev(i3);
 }
 HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
 __ZNSt3__16localeD2Ev(i4);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi(i11, i6) | 0;
 i1 = HEAP32[i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0;
 if (!(i1 & 2)) {
  __ZNSt3__12wsIcNS_11char_traitsIcEEEERNS_13basic_istreamIT_T0_EES7_(i11) | 0;
  i1 = HEAP32[i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0;
 }
 if ((i1 & 5 | 0) == 0 ? (__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE3getEv(i11) | 0) == -1 : 0) {
  HEAP32[i10 + 4 >> 2] = HEAP32[i6 >> 2];
  HEAP8[i10 >> 0] = 1;
  HEAP32[i11 >> 2] = 21516;
  HEAP32[i8 >> 2] = 21536;
  HEAP32[i9 >> 2] = 20212;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i9);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i8);
  STACKTOP = i12;
  return;
 }
 HEAP8[i10 >> 0] = 0;
 HEAP32[i11 >> 2] = 21516;
 HEAP32[i8 >> 2] = 21536;
 HEAP32[i9 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i9);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i8);
 STACKTOP = i12;
 return;
}

function __ZN5boost13property_tree17stream_translatorIcNSt3__111char_traitsIcEENS2_9allocatorIcEEfE9get_valueERKNS2_12basic_stringIcS4_S6_EE(i10, i5, i1) {
 i10 = i10 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i6 = i12 + 156 | 0;
 i2 = i12 + 152 | 0;
 i13 = i12 + 148 | 0;
 i3 = i12 + 144 | 0;
 i11 = i12 + 4 | 0;
 i4 = i12;
 i8 = i11 + 60 | 0;
 i9 = i11 + 8 | 0;
 HEAP32[i11 >> 2] = 21572;
 HEAP32[i8 >> 2] = 21592;
 HEAP32[i11 + 4 >> 2] = 0;
 __ZNSt3__18ios_base4initEPv(i11 + 60 | 0, i9);
 HEAP32[i11 + 132 >> 2] = 0;
 HEAP32[i11 + 136 >> 2] = -1;
 HEAP32[i11 >> 2] = 21516;
 HEAP32[i8 >> 2] = 21536;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i9);
 HEAP32[i9 >> 2] = 20212;
 i7 = i11 + 40 | 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 HEAP32[i11 + 56 >> 2] = 8;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i9, i1);
 i1 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = __ZNKSt3__18ios_base6getlocEv(i1) | 0;
 HEAP32[i13 >> 2] = __ZNSt3__18ios_base5imbueERKNS_6localeE(i1, i5) | 0;
 __ZNSt3__16localeD2Ev(i13);
 i1 = HEAP32[i1 + 24 >> 2] | 0;
 if (i1 | 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 63](i1, i5);
  i13 = i1 + 4 | 0;
  __ZNSt3__16localeC2ERKS0_(i6, i13);
  __ZNSt3__16localeaSERKS0_(i13, i5) | 0;
  HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
  __ZNSt3__16localeD2Ev(i3);
 }
 HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
 __ZNSt3__16localeD2Ev(i4);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf(i11, i6) | 0;
 i1 = HEAP32[i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0;
 if (!(i1 & 2)) {
  __ZNSt3__12wsIcNS_11char_traitsIcEEEERNS_13basic_istreamIT_T0_EES7_(i11) | 0;
  i1 = HEAP32[i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0;
 }
 if ((i1 & 5 | 0) == 0 ? (__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE3getEv(i11) | 0) == -1 : 0) {
  HEAP32[i10 + 4 >> 2] = HEAP32[i6 >> 2];
  HEAP8[i10 >> 0] = 1;
  HEAP32[i11 >> 2] = 21516;
  HEAP32[i8 >> 2] = 21536;
  HEAP32[i9 >> 2] = 20212;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i9);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i8);
  STACKTOP = i12;
  return;
 }
 HEAP8[i10 >> 0] = 0;
 HEAP32[i11 >> 2] = 21516;
 HEAP32[i8 >> 2] = 21536;
 HEAP32[i9 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i9);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i8);
 STACKTOP = i12;
 return;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i4, i9, i12, i7, i10, i2, i3, i8, i13, i14, i11, i5) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i11 = i11 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 L1 : do if (i4 << 24 >> 24 == i2 << 24 >> 24) if (HEAP8[i9 >> 0] | 0) {
  HEAP8[i9 >> 0] = 0;
  i12 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = 46;
  i12 = HEAP8[i8 >> 0] | 0;
  if ((((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if (i4 << 24 >> 24 == i3 << 24 >> 24 ? (i3 = HEAP8[i8 >> 0] | 0, ((i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) {
   if (!(HEAP8[i9 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i5 + 32 | 0;
  i1 = i5;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  if ((i2 | 0) > 31) i1 = -1; else {
   i3 = HEAP8[47802 + i2 >> 0] | 0;
   switch (i2 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i12 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i12 >> 0] = 80;
     i1 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i12 >> 0] | 0) ? (HEAP8[i12 >> 0] = i1 | 128, HEAP8[i9 >> 0] | 0) : 0) ? (HEAP8[i9 >> 0] = 0, i12 = HEAP8[i8 >> 0] | 0, ((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) ? (i6 = HEAP32[i14 >> 2] | 0, (i6 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i11 >> 2] | 0;
      HEAP32[i14 >> 2] = i6 + 4;
      HEAP32[i6 >> 2] = i13;
     }
     i14 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i14 + 1;
     HEAP8[i14 >> 0] = i3;
     if ((i2 | 0) > 21) {
      i1 = 0;
      break L1;
     }
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
     i1 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZNK12mp5_implicit3egg13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i5, i4, i25) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i25 = i25 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, d24 = 0.0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0, d33 = 0.0;
 i28 = HEAP32[i4 + 16 >> 2] | 0;
 i30 = HEAP32[i4 + 24 >> 2] | 0;
 i31 = HEAP32[i4 + 28 >> 2] | 0;
 i27 = HEAP32[i4 + 32 >> 2] | 0;
 i26 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i29 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i29 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i29;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i12 = HEAP32[i5 + 32 >> 2] | 0;
 d13 = +HEAPF32[i12 >> 2];
 d14 = +HEAPF32[i12 + 4 >> 2];
 d15 = +HEAPF32[i12 + 8 >> 2];
 d16 = +HEAPF32[i12 + 12 >> 2];
 d17 = +HEAPF32[i12 + 16 >> 2];
 d18 = +HEAPF32[i12 + 20 >> 2];
 d19 = +HEAPF32[i12 + 24 >> 2];
 d20 = +HEAPF32[i12 + 28 >> 2];
 d21 = +HEAPF32[i12 + 32 >> 2];
 d22 = +HEAPF32[i12 + 36 >> 2];
 d23 = +HEAPF32[i12 + 40 >> 2];
 d24 = +HEAPF32[i12 + 44 >> 2];
 if (i28 | 0) {
  i1 = i31 << 1;
  i2 = i29 + (i26 << 2) | 0;
  i3 = 0;
  do {
   i10 = i2 + ((Math_imul(i3, i30) | 0) << 2) | 0;
   d33 = +HEAPF32[i10 >> 2];
   i11 = i10 + (i31 << 2) | 0;
   d32 = +HEAPF32[i11 >> 2];
   i12 = i10 + (i1 << 2) | 0;
   HEAPF32[i10 >> 2] = d16 + (d13 * d33 + d14 * d32 + d15 * +HEAPF32[i12 >> 2]);
   HEAPF32[i11 >> 2] = d20 + (d17 * d33 + d18 * d32 + d19 * +HEAPF32[i12 >> 2]);
   HEAPF32[i12 >> 2] = d24 + (d21 * d33 + d22 * d32 + d23 * +HEAPF32[i12 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i28 | 0));
 }
 if ((0 - i28 | 0) >= 0) {
  __ZdlPv(i29);
  return;
 }
 i7 = i5 + 16 | 0;
 i8 = i5 + 4 | 0;
 i9 = i5 + 20 | 0;
 i10 = i5 + 8 | 0;
 i11 = i31 << 1;
 i12 = i5 + 24 | 0;
 i5 = i5 + 12 | 0;
 i6 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i25 + 24 >> 2] << 2) | 0;
 i4 = HEAP32[i25 + 16 >> 2] | 0;
 i3 = i29 + (i26 << 2) | 0;
 i1 = i27;
 i2 = 0;
 while (1) {
  i27 = i3 + ((Math_imul(i1, i30) | 0) << 2) | 0;
  d24 = (+HEAPF32[i27 >> 2] - +HEAPF32[i7 >> 2]) / +HEAPF32[i8 >> 2];
  d32 = (+HEAPF32[i27 + (i31 << 2) >> 2] - +HEAPF32[i9 >> 2]) / +HEAPF32[i10 >> 2];
  d33 = (+HEAPF32[i27 + (i11 << 2) >> 2] - +HEAPF32[i12 >> 2]) / +HEAPF32[i5 >> 2];
  HEAPF32[i6 + ((Math_imul(i4, i2) | 0) << 2) >> 2] = 1.0 - (d24 * d24 + d32 * d32 + d33 * d33);
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i28 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i29);
 return;
}

function __ZN5boost13property_tree17file_parser_error11format_whatERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_m(i8, i10, i2, i9) {
 i8 = i8 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i11 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i3 = i12 + 144 | 0;
 i11 = i12;
 i4 = i11 + 64 | 0;
 i7 = i11 + 8 | 0;
 HEAP32[i7 >> 2] = 19996;
 i6 = i11 + 12 | 0;
 HEAP32[i11 >> 2] = 20136;
 HEAP32[i4 >> 2] = 20156;
 HEAP32[i11 + 4 >> 2] = 0;
 __ZNSt3__18ios_base4initEPv(i11 + 64 | 0, i6);
 HEAP32[i11 + 136 >> 2] = 0;
 HEAP32[i11 + 140 >> 2] = -1;
 HEAP32[i11 >> 2] = 19976;
 HEAP32[i4 >> 2] = 20016;
 HEAP32[i7 >> 2] = 19996;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i6);
 HEAP32[i6 >> 2] = 20212;
 i7 = i11 + 44 | 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 HEAP32[i11 + 60 >> 2] = 24;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i6, i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 i5 = i11 + 8 | 0;
 i13 = HEAP8[i2 >> 0] | 0;
 i1 = (i13 & 1) == 0;
 do if ((i1 ? (i13 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0) if (i1) {
  i1 = i2 + 1 | 0;
  break;
 } else {
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  break;
 } else i1 = 32355; while (0);
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i5, i1, _strlen(i1) | 0) | 0;
 if (i9 | 0) {
  HEAP8[i3 >> 0] = 40;
  i13 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i5, i3, 1) | 0, i9) | 0;
  HEAP8[i3 >> 0] = 41;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i13, i3, 1) | 0;
 }
 i3 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i5, 32374, 2) | 0;
 i13 = HEAP8[i10 >> 0] | 0;
 i9 = (i13 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i3, i9 ? i10 + 1 | 0 : HEAP32[i10 + 8 >> 2] | 0, i9 ? (i13 & 255) >>> 1 : HEAP32[i10 + 4 >> 2] | 0) | 0;
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(i8, i6);
 HEAP32[i11 >> 2] = 19976;
 HEAP32[i4 >> 2] = 20016;
 HEAP32[i5 >> 2] = 19996;
 HEAP32[i6 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i4);
 STACKTOP = i12;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i8, i9, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i7 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i7 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i8 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i5 = i2;
   i6 = 17;
   break;
  } else {
   i6 = 16;
   break;
  } else {
   HEAP32[i8 >> 2] = 0;
   i6 = 14;
   break;
  }
 } else i6 = 14; while (0);
 if ((i6 | 0) == 14) if (i3) i6 = 16; else {
  i5 = 0;
  i6 = 17;
 }
 L22 : do if ((i6 | 0) == 16) HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 6; else if ((i6 | 0) == 17) {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, i1, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i7 >> 2] | 0;
   if (!i1) i2 = 1; else i6 = 25;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   i6 = 25;
  }
  do if ((i6 | 0) == 25) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i7 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i7 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (i5) {
   i1 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i2) break L22; else break; else {
    HEAP32[i8 >> 2] = 0;
    i6 = 37;
    break;
   }
  } else i6 = 37; while (0);
  if ((i6 | 0) == 37 ? !i2 : 0) break;
  HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 2;
 } while (0);
 return;
}

function __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS6_11basic_ptreeINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_NSA_4lessISG_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS3_INS1_11uint_parserImLi16ELj4ELi4EEENSK_9a_unicodeEEEEEE5parseINS1_7scannerINSA_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS15_IS19_S1C_S19_S1G_S1H_S1I_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISV_T_E4typeERKS1V_(i9, i7) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10 + 12 | 0;
 i8 = i10;
 i1 = i7 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i6 = i7 + 8 | 0;
 if ((i3 | 0) != (HEAP32[i6 >> 2] | 0) ? (i4 = HEAP8[i3 >> 0] | 0, i11 = i4 & 255, 1 << (i11 & 31) & HEAP32[(HEAP32[i9 >> 2] | 0) + (i11 >>> 5 << 2) >> 2] | 0) : 0) {
  HEAP32[i2 >> 2] = i3 + 1;
  __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE8a_escapeclEc(i9 + 8 | 0, i4);
  i11 = 1;
  STACKTOP = i10;
  return i11 | 0;
 }
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (HEAP32[i6 >> 2] | 0) ? (HEAP8[i9 + 12 >> 0] | 0) == (HEAP8[i2 >> 0] | 0) : 0) {
  HEAP32[i1 >> 2] = i2 + 1;
  __ZN5boost6spirit7classic4impl23contiguous_parser_parseINS1_5matchImEENS2_16uint_parser_implImLi16ELj4ELi4EEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSG_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSG_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSI_ISM_SP_SM_ST_SU_SV_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEES11_EET_RKT0_RKT1_RKNSE_IT2_EE(i8, i5, i7, i7);
  i2 = HEAP32[i8 >> 2] | 0;
  i3 = (i2 | 0) < 0;
  if (!i3) {
   i11 = HEAP32[i8 + 8 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i9 + 20 >> 2] | 0, (i11 >>> 0 > 127 ? 127 : i11) & 255);
  }
  i1 = i8 + 4 | 0;
  if (HEAP8[i1 >> 0] | 0) HEAP8[i1 >> 0] = 0;
  i11 = i3 ? -1 : i2 + 1 | 0;
  STACKTOP = i10;
  return i11 | 0;
 }
 i11 = -1;
 STACKTOP = i10;
 return i11 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(i4, i7, i1, i10, i14, i2, i9, i13) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i13 = i13 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i8 = 0, i11 = 0, i12 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i15;
 i8 = i15 + 8 | 0;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i10 | 0)) {
   i3 = i10;
   break;
  }
  if (!(HEAP32[i3 >> 2] | 0)) break;
  i3 = i3 + 4 | 0;
 }
 HEAP32[i13 >> 2] = i2;
 HEAP32[i14 >> 2] = i1;
 i6 = i9;
 i11 = i4 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i9 | 0) | (i1 | 0) == (i10 | 0)) {
   i3 = 35;
   break;
  }
  i16 = i7;
  i5 = HEAP32[i16 + 4 >> 2] | 0;
  i4 = i12;
  HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
  i5 = _wcsnrtombs(i2, i14, i3 - i1 >> 2, i6 - i2 | 0, i7) | 0;
  if (i4 | 0) _uselocale(i4) | 0;
  switch (i5 | 0) {
  case -1:
   {
    i3 = 10;
    break L6;
   }
  case 0:
   {
    i1 = 1;
    i3 = 32;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i13 >> 2] | 0) + i5 | 0;
  HEAP32[i13 >> 2] = i2;
  if ((i2 | 0) == (i9 | 0)) {
   i3 = 33;
   break;
  }
  if ((i3 | 0) == (i10 | 0)) {
   i1 = HEAP32[i14 >> 2] | 0;
   i3 = i10;
  } else {
   i1 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i2 = _wcrtomb(i8, 0, i7) | 0;
   if (i1 | 0) _uselocale(i1) | 0;
   if ((i2 | 0) == -1) {
    i1 = 2;
    i3 = 31;
    break;
   }
   if (i2 >>> 0 > (i6 - (HEAP32[i13 >> 2] | 0) | 0) >>> 0) {
    i1 = 1;
    i3 = 31;
    break;
   } else i1 = i8;
   while (1) {
    if (!i2) break;
    i5 = HEAP8[i1 >> 0] | 0;
    i16 = HEAP32[i13 >> 2] | 0;
    HEAP32[i13 >> 2] = i16 + 1;
    HEAP8[i16 >> 0] = i5;
    i2 = i2 + -1 | 0;
    i1 = i1 + 1 | 0;
   }
   i1 = (HEAP32[i14 >> 2] | 0) + 4 | 0;
   HEAP32[i14 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i10 | 0)) {
     i3 = i10;
     break;
    }
    if (!(HEAP32[i3 >> 2] | 0)) break;
    i3 = i3 + 4 | 0;
   }
   i2 = HEAP32[i13 >> 2] | 0;
  }
 }
 if ((i3 | 0) == 10) {
  HEAP32[i13 >> 2] = i2;
  while (1) {
   if ((i1 | 0) == (HEAP32[i14 >> 2] | 0)) break;
   i16 = HEAP32[i1 >> 2] | 0;
   i3 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i2 = _wcrtomb(i2, i16, i12) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   if ((i2 | 0) == -1) break;
   i2 = (HEAP32[i13 >> 2] | 0) + i2 | 0;
   HEAP32[i13 >> 2] = i2;
   i1 = i1 + 4 | 0;
  }
  HEAP32[i14 >> 2] = i1;
  i1 = 2;
  i3 = 32;
 } else if ((i3 | 0) == 31) i3 = 32; else if ((i3 | 0) == 33) {
  i1 = HEAP32[i14 >> 2] | 0;
  i3 = 35;
 }
 if ((i3 | 0) != 32) if ((i3 | 0) == 35) i1 = (i1 | 0) != (i10 | 0) & 1;
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNK12mp5_implicit11unit_sphere13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i5, i4, i25) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i25 = i25 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, d22 = 0.0, d23 = 0.0, i24 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, d31 = 0.0, d32 = 0.0;
 i27 = HEAP32[i4 + 16 >> 2] | 0;
 i29 = HEAP32[i4 + 24 >> 2] | 0;
 i30 = HEAP32[i4 + 28 >> 2] | 0;
 i26 = HEAP32[i4 + 32 >> 2] | 0;
 i24 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i28 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i28 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i28;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i11 = HEAP32[i5 + 24 >> 2] | 0;
 d12 = +HEAPF32[i11 >> 2];
 d13 = +HEAPF32[i11 + 4 >> 2];
 d14 = +HEAPF32[i11 + 8 >> 2];
 d15 = +HEAPF32[i11 + 12 >> 2];
 d16 = +HEAPF32[i11 + 16 >> 2];
 d17 = +HEAPF32[i11 + 20 >> 2];
 d18 = +HEAPF32[i11 + 24 >> 2];
 d19 = +HEAPF32[i11 + 28 >> 2];
 d20 = +HEAPF32[i11 + 32 >> 2];
 d21 = +HEAPF32[i11 + 36 >> 2];
 d22 = +HEAPF32[i11 + 40 >> 2];
 d23 = +HEAPF32[i11 + 44 >> 2];
 if (i27 | 0) {
  i1 = i30 << 1;
  i2 = i28 + (i24 << 2) | 0;
  i3 = 0;
  do {
   i9 = i2 + ((Math_imul(i3, i29) | 0) << 2) | 0;
   d32 = +HEAPF32[i9 >> 2];
   i10 = i9 + (i30 << 2) | 0;
   d31 = +HEAPF32[i10 >> 2];
   i11 = i9 + (i1 << 2) | 0;
   HEAPF32[i9 >> 2] = d15 + (d12 * d32 + d13 * d31 + d14 * +HEAPF32[i11 >> 2]);
   HEAPF32[i10 >> 2] = d19 + (d16 * d32 + d17 * d31 + d18 * +HEAPF32[i11 >> 2]);
   HEAPF32[i11 >> 2] = d23 + (d20 * d32 + d21 * d31 + d22 * +HEAPF32[i11 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i27 | 0));
 }
 if ((0 - i27 | 0) >= 0) {
  __ZdlPv(i28);
  return;
 }
 i8 = i5 + 8 | 0;
 i9 = i5 + 12 | 0;
 i10 = HEAP32[i25 + 28 >> 2] | 0;
 i11 = i30 << 1;
 i6 = i5 + 16 | 0;
 i7 = i10 << 1;
 i4 = i28 + (i24 << 2) | 0;
 i5 = (HEAP32[i25 >> 2] | 0) + (HEAP32[i25 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i25 + 24 >> 2] | 0;
 i1 = i26;
 i2 = 0;
 while (1) {
  i25 = i4 + ((Math_imul(i1, i29) | 0) << 2) | 0;
  i26 = i5 + ((Math_imul(i3, i2) | 0) << 2) | 0;
  HEAPF32[i26 >> 2] = (+HEAPF32[i25 >> 2] - +HEAPF32[i8 >> 2]) * -2.0;
  HEAPF32[i26 + (i10 << 2) >> 2] = (+HEAPF32[i25 + (i30 << 2) >> 2] - +HEAPF32[i9 >> 2]) * -2.0;
  HEAPF32[i26 + (i7 << 2) >> 2] = (+HEAPF32[i25 + (i11 << 2) >> 2] - +HEAPF32[i6 >> 2]) * -2.0;
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i27 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i28);
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(i1, i26, i21, i20, d9) {
 i1 = i1 | 0;
 i26 = i26 | 0;
 i21 = i21 | 0;
 i20 = i20 | 0;
 d9 = +d9;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i23 + 304 | 0;
 i7 = i23 + 48 | 0;
 i6 = i23 + 32 | 0;
 i3 = i23 + 24 | 0;
 i2 = i23 + 8 | 0;
 i5 = i23;
 i10 = i23 + 308 | 0;
 i8 = i23 + 300 | 0;
 i11 = i23 + 72 | 0;
 i17 = i23 + 68 | 0;
 i16 = i23 + 64 | 0;
 i13 = i23 + 60 | 0;
 i14 = i23 + 56 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 48056, HEAP32[i21 + 4 >> 2] | 0) | 0;
 HEAP32[i8 >> 2] = i10;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i21 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__16__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i21 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i8 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i24 = i1;
   i15 = i2;
  }
 } else {
  i18 = HEAP32[i8 >> 2] | 0;
  i24 = 0;
  i15 = i1;
 }
 i2 = i18 + i15 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i18, i2, i21) | 0;
 if ((i18 | 0) != (i10 | 0)) {
  i1 = _malloc(i15 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i18;
   i22 = i1;
   i25 = i1;
  }
 } else {
  i19 = i10;
  i22 = i11;
  i25 = 0;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i21) | 0;
 HEAP32[i13 >> 2] = i1;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i19, i3, i2, i22, i17, i16, i13);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 HEAP32[i14 >> 2] = HEAP32[i26 >> 2];
 i19 = HEAP32[i17 >> 2] | 0;
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i1 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i12, i22, i19, i1, i21, i20) | 0;
 HEAP32[i26 >> 2] = i1;
 if (i25 | 0) _free(i25);
 _free(i24);
 STACKTOP = i23;
 return i1 | 0;
}

function __ZNK12mp5_implicit11unit_sphere13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i5, i4, i22) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i22 = i22 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, d20 = 0.0, d21 = 0.0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, d29 = 0.0, d30 = 0.0;
 i25 = HEAP32[i4 + 16 >> 2] | 0;
 i27 = HEAP32[i4 + 24 >> 2] | 0;
 i28 = HEAP32[i4 + 28 >> 2] | 0;
 i24 = HEAP32[i4 + 32 >> 2] | 0;
 i23 = HEAP32[i4 + 40 >> 2] | 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 i2 = i1 << 2;
 i26 = __Znwj(i2) | 0;
 if (i1 | 0) {
  _memset(i26 | 0, 0, i2 | 0) | 0;
  i3 = i1;
  i1 = HEAP32[i4 + 56 >> 2] | 0;
  i2 = i26;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i3 = i3 + -1 | 0;
   if (!i3) break; else {
    i1 = i1 + 4 | 0;
    i2 = i2 + 4 | 0;
   }
  }
 }
 i10 = HEAP32[i5 + 24 >> 2] | 0;
 d7 = +HEAPF32[i10 >> 2];
 d11 = +HEAPF32[i10 + 4 >> 2];
 d12 = +HEAPF32[i10 + 8 >> 2];
 d13 = +HEAPF32[i10 + 12 >> 2];
 d14 = +HEAPF32[i10 + 16 >> 2];
 d15 = +HEAPF32[i10 + 20 >> 2];
 d16 = +HEAPF32[i10 + 24 >> 2];
 d17 = +HEAPF32[i10 + 28 >> 2];
 d18 = +HEAPF32[i10 + 32 >> 2];
 d19 = +HEAPF32[i10 + 36 >> 2];
 d20 = +HEAPF32[i10 + 40 >> 2];
 d21 = +HEAPF32[i10 + 44 >> 2];
 if (i25 | 0) {
  i1 = i28 << 1;
  i2 = i26 + (i23 << 2) | 0;
  i3 = 0;
  do {
   i8 = i2 + ((Math_imul(i3, i27) | 0) << 2) | 0;
   d30 = +HEAPF32[i8 >> 2];
   i9 = i8 + (i28 << 2) | 0;
   d29 = +HEAPF32[i9 >> 2];
   i10 = i8 + (i1 << 2) | 0;
   HEAPF32[i8 >> 2] = d13 + (d7 * d30 + d11 * d29 + d12 * +HEAPF32[i10 >> 2]);
   HEAPF32[i9 >> 2] = d17 + (d14 * d30 + d15 * d29 + d16 * +HEAPF32[i10 >> 2]);
   HEAPF32[i10 >> 2] = d21 + (d18 * d30 + d19 * d29 + d20 * +HEAPF32[i10 >> 2]);
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i25 | 0));
 }
 d7 = +HEAPF32[i5 + 4 >> 2];
 d7 = d7 * d7;
 if ((0 - i25 | 0) >= 0) {
  __ZdlPv(i26);
  return;
 }
 i8 = i5 + 8 | 0;
 i9 = i5 + 12 | 0;
 i10 = i28 << 1;
 i5 = i5 + 16 | 0;
 i6 = (HEAP32[i22 >> 2] | 0) + (HEAP32[i22 + 24 >> 2] << 2) | 0;
 i4 = HEAP32[i22 + 16 >> 2] | 0;
 i3 = i26 + (i23 << 2) | 0;
 i1 = i24;
 i2 = 0;
 while (1) {
  i24 = i3 + ((Math_imul(i1, i27) | 0) << 2) | 0;
  d21 = +HEAPF32[i24 >> 2] - +HEAPF32[i8 >> 2];
  d29 = +HEAPF32[i24 + (i28 << 2) >> 2] - +HEAPF32[i9 >> 2];
  d30 = +HEAPF32[i24 + (i10 << 2) >> 2] - +HEAPF32[i5 >> 2];
  HEAPF32[i6 + ((Math_imul(i4, i2) | 0) << 2) >> 2] = d7 - (d21 * d21 + d29 * d29 + d30 * d30);
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == (i25 | 0)) break; else i1 = i1 + 1 | 0;
 }
 __ZdlPv(i26);
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(i1, i26, i22, i21, d9) {
 i1 = i1 | 0;
 i26 = i26 | 0;
 i22 = i22 | 0;
 i21 = i21 | 0;
 d9 = +d9;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i23 = 0, i24 = 0, i25 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i12 = i18 + 76 | 0;
 i7 = i18 + 48 | 0;
 i6 = i18 + 32 | 0;
 i3 = i18 + 24 | 0;
 i2 = i18 + 8 | 0;
 i5 = i18;
 i10 = i18 + 138 | 0;
 i8 = i18 + 72 | 0;
 i11 = i18 + 80 | 0;
 i17 = i18 + 68 | 0;
 i16 = i18 + 64 | 0;
 i13 = i18 + 60 | 0;
 i14 = i18 + 56 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 48056, HEAP32[i22 + 4 >> 2] | 0) | 0;
 HEAP32[i8 >> 2] = i10;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i22 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__16__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i22 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i8 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i1;
   i23 = i1;
   i15 = i2;
  }
 } else {
  i19 = HEAP32[i8 >> 2] | 0;
  i23 = 0;
  i15 = i1;
 }
 i2 = i19 + i15 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i19, i2, i22) | 0;
 if ((i19 | 0) != (i10 | 0)) {
  i1 = _malloc(i15 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i20 = i19;
   i24 = i1;
   i25 = i1;
  }
 } else {
  i20 = i10;
  i24 = i11;
  i25 = 0;
 }
 i19 = __ZNKSt3__18ios_base6getlocEv(i22) | 0;
 HEAP32[i13 >> 2] = i19;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i20, i3, i2, i24, i17, i16, i13);
 __ZNSt3__114__shared_count16__release_sharedEv(i19) | 0;
 HEAP32[i14 >> 2] = HEAP32[i26 >> 2];
 i20 = HEAP32[i17 >> 2] | 0;
 i26 = HEAP32[i16 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i26 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i12, i24, i20, i26, i22, i21) | 0;
 _free(i25);
 _free(i23);
 STACKTOP = i18;
 return i26 | 0;
}

function __ZNK5boost6spirit7classic8sequenceINS1_6strlitIPKcEENS1_22refactor_action_parserINS1_10differenceINS1_11kleene_starINS1_14anychar_parserEEENS1_11alternativeINS1_10eol_parserENS1_10end_parserEEEEENS1_18refactor_unary_genINS1_22non_nested_refactoringEEEEEE5parseINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINSC_INSC_INS1_12space_parserENS1_13confix_parserIS6_SB_SF_NS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS6_SB_S6_SX_SY_SZ_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1C_(i1, i6) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i11 = i6 + 4 | 0;
 i12 = i4 - i2 | 0;
 L1 : do if ((i2 | 0) != (i4 | 0)) {
  i5 = i6 + 8 | 0;
  while (1) {
   i3 = HEAP32[i11 >> 2] | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
    i1 = -1;
    i13 = 18;
    break;
   }
   if ((HEAP8[i2 >> 0] | 0) != (HEAP8[i1 >> 0] | 0)) {
    i1 = -1;
    i13 = 18;
    break;
   }
   i2 = i2 + 1 | 0;
   HEAP32[i3 >> 2] = i1 + 1;
   if ((i2 | 0) == (i4 | 0)) break L1;
  }
  if ((i13 | 0) == 18) return i1 | 0;
 } while (0);
 if ((i12 | 0) < 0) {
  i13 = -1;
  return i13 | 0;
 }
 i2 = HEAP32[i11 >> 2] | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i1 = i3;
 i10 = i6 + 8 | 0;
 if ((i1 | 0) != (HEAP32[i10 >> 2] | 0)) {
  i4 = i1;
  i1 = 0;
  do {
   HEAP32[i2 >> 2] = i4 + 1;
   i5 = HEAP32[i11 >> 2] | 0;
   i8 = HEAP32[i5 >> 2] | 0;
   HEAP32[i5 >> 2] = i3;
   i5 = HEAP32[i11 >> 2] | 0;
   i9 = HEAP32[i5 >> 2] | 0;
   i4 = i9;
   i2 = HEAP32[i10 >> 2] | 0;
   if ((i4 | 0) != (i2 | 0)) {
    if ((HEAP8[i4 >> 0] | 0) == 13) {
     HEAP32[i5 >> 2] = i4 + 1;
     i7 = HEAP32[i11 >> 2] | 0;
     i4 = HEAP32[i7 >> 2] | 0;
     i6 = HEAP32[i10 >> 2] | 0;
     i2 = i7;
     i5 = 1;
    } else {
     i6 = i2;
     i2 = i5;
     i7 = i5;
     i5 = 0;
    }
    if ((i4 | 0) != (i6 | 0) ? (HEAP8[i4 >> 0] | 0) == 10 : 0) {
     i2 = i7;
     i13 = 13;
     break;
    }
    if (i5) break;
   } else i2 = i5;
   HEAP32[i2 >> 2] = i9;
   HEAP32[HEAP32[i11 >> 2] >> 2] = i8;
   i1 = i1 + 1 | 0;
   i2 = HEAP32[i11 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i4 = i3;
  } while ((i4 | 0) != (HEAP32[i10 >> 2] | 0));
  if ((i13 | 0) == 13) {
   HEAP32[i2 >> 2] = i4 + 1;
   i2 = HEAP32[i11 >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i3;
  if ((i1 | 0) < 0) {
   i13 = -1;
   return i13 | 0;
  }
 } else i1 = 0;
 i13 = i1 + i12 | 0;
 return i13 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i5, i6, i7, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i8 = 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i5 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i3) {
    i3 = i2;
    break;
   } else {
    i3 = i2;
    break L1;
   } else {
    HEAP32[i6 >> 2] = 0;
    i8 = 15;
    break;
   }
  } else i8 = 15; while (0);
  if ((i8 | 0) == 15) {
   i8 = 0;
   if (i3) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 31](i4, 8192, i1) | 0)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i5 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i8 = 39;
   break;
  } else {
   HEAP32[i6 >> 2] = 0;
   i8 = 37;
   break;
  }
 } else i8 = 37; while (0);
 if ((i8 | 0) == 37 ? i2 : 0) i8 = 39;
 if ((i8 | 0) == 39) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i4, i9, i12, i7, i10, i2, i3, i8, i13, i14, i11, i5) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i11 = i11 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 L1 : do if ((i4 | 0) == (i2 | 0)) if (HEAP8[i9 >> 0] | 0) {
  HEAP8[i9 >> 0] = 0;
  i12 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = 46;
  i12 = HEAP8[i8 >> 0] | 0;
  if ((((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if ((i4 | 0) == (i3 | 0) ? (i3 = HEAP8[i8 >> 0] | 0, ((i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) {
   if (!(HEAP8[i9 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i5 + 128 | 0;
  i1 = i5;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i4 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  i2 = i1 - i5 | 0;
  i1 = i2 >> 2;
  if ((i2 | 0) <= 124) {
   i3 = HEAP8[47802 + i1 >> 0] | 0;
   switch (i1 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i12 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i12 >> 0] = 80;
     break;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i12 >> 0] | 0) ? (HEAP8[i12 >> 0] = i1 | 128, HEAP8[i9 >> 0] | 0) : 0) ? (HEAP8[i9 >> 0] = 0, i12 = HEAP8[i8 >> 0] | 0, ((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) ? (i6 = HEAP32[i14 >> 2] | 0, (i6 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i11 >> 2] | 0;
      HEAP32[i14 >> 2] = i6 + 4;
      HEAP32[i6 >> 2] = i13;
     }
    }
   }
   i14 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i14 + 1;
   HEAP8[i14 >> 0] = i3;
   if ((i2 | 0) > 84) i1 = 0; else {
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
    i1 = 0;
   }
  } else i1 = -1;
 } while (0);
 return i1 | 0;
}

function __ZN5boost6spirit7classic4impl19object_with_id_baseINS2_11grammar_tagEjE17acquire_object_idEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i11;
 if ((HEAP8[50656] | 0) == 0 ? ___cxa_guard_acquire(50656) | 0 : 0) {
  HEAP32[12841] = 0;
  HEAP32[12842] = 0;
  ___cxa_guard_release(50656);
 }
 i8 = HEAP32[12841] | 0;
 i1 = i8;
 if (!i8) {
  i1 = __Znwj(16) | 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 + 12 >> 2] = 0;
  __ZN5boost10shared_ptrINS_6spirit7classic4impl26object_with_id_base_supplyIjEEEC2IS5_EEPT_(i2, i1);
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = HEAP32[12841];
  HEAP32[12841] = i1;
  i2 = i2 + 4 | 0;
  i1 = HEAP32[12842] | 0;
  HEAP32[12842] = HEAP32[i2 >> 2];
  HEAP32[i2 >> 2] = i1;
  i2 = i1;
  if ((i1 | 0 ? (i7 = i2 + 4 | 0, i8 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i8 - 1, (i8 | 0) == 1) : 0) ? (i3 = i1, FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 255](i2), i7 = i2 + 8 | 0, i8 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i8 - 1, (i8 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 255](i2);
  i1 = HEAP32[12841] | 0;
 }
 i2 = HEAP32[12842] | 0;
 if (i2 | 0) {
  i8 = i2 + 4 | 0;
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
 }
 HEAP32[i4 >> 2] = i1;
 i8 = i4 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = i2;
 if ((i1 | 0 ? (i7 = i1 + 4 | 0, i8 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i8 - 1, (i8 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i7 = i1 + 8 | 0, i8 = HEAP32[i7 >> 2] | 0, HEAP32[i7 >> 2] = i8 - 1, (i8 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i8 = HEAP32[i4 >> 2] | 0;
 i2 = i8 + 4 | 0;
 i3 = i8 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i2 >> 2] | 0;
 i5 = i4 - i7 | 0;
 if ((i4 | 0) != (i7 | 0)) {
  i9 = i4 + -4 | 0;
  i10 = HEAP32[i9 >> 2] | 0;
  HEAP32[i3 >> 2] = i9;
  STACKTOP = i11;
  return i10 | 0;
 }
 i6 = i8 + 12 | 0;
 i7 = (HEAP32[i6 >> 2] | 0) - i4 >> 2;
 i1 = HEAP32[i8 >> 2] | 0;
 if ((i7 >>> 0 <= i1 >>> 0 ? (i9 = ((i1 * 3 | 0) >>> 1) + 1 | 0, i7 >>> 0 < i9 >>> 0) : 0) ? (i7 = __Znwj(i9 << 2) | 0, i12 = i7, i10 = i4, _memcpy(i7 | 0, i10 | 0, i5 | 0) | 0, HEAP32[i2 >> 2] = i12, HEAP32[i3 >> 2] = i12, HEAP32[i6 >> 2] = i7 + (i9 << 2), (i4 | 0) != 0) : 0) {
  __ZdlPv(i10);
  i1 = HEAP32[i8 >> 2] | 0;
 }
 i12 = i1 + 1 | 0;
 HEAP32[i8 >> 2] = i12;
 STACKTOP = i11;
 return i12 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i15, i14, i6) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i16;
 HEAP8[i15 >> 0] = 0;
 i1 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0;
 i2 = i1 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  do if (!i6 ? (i5 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0, HEAP32[i5 + 4 >> 2] & 4096 | 0) : 0) {
   HEAP32[i4 >> 2] = __ZNKSt3__18ios_base6getlocEv(i5) | 0;
   i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i4, 52980) | 0;
   __ZNSt3__16localeD2Ev(i4);
   i1 = HEAP32[i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   i4 = i5 + 8 | 0;
   i5 = i1;
   i6 = (i1 | 0) == 0;
   i7 = i5 + 12 | 0;
   i8 = i5 + 16 | 0;
   i9 = i1;
   i2 = i1;
   i10 = i2 + 12 | 0;
   i11 = i2 + 16 | 0;
   i12 = i1;
   i13 = i1;
   while (1) {
    if (i6) {
     i2 = 0;
     i1 = 0;
     break;
    }
    if ((HEAP32[i7 >> 2] | 0) == (HEAP32[i8 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) == -1 : 0) {
     i2 = 0;
     i1 = 0;
     break;
    }
    i3 = HEAP32[i10 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i11 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
    if ((i3 & 255) << 24 >> 24 <= -1) break;
    if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) break;
    i3 = HEAP32[i10 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i11 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i13 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     continue;
    } else {
     HEAP32[i10 >> 2] = i3 + 1;
     continue;
    }
   }
   if (i1 | 0) {
    if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) break;
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) break;
   }
   i12 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0;
   i13 = i12 + 16 | 0;
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | (HEAP32[i12 + 24 >> 2] | 0) == 0 | 6;
  } while (0);
  HEAP8[i15 >> 0] = (HEAP32[i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0) == 0 & 1;
 } else HEAP32[i2 >> 2] = i3 | (HEAP32[i1 + 24 >> 2] | 0) == 0 | 4;
 STACKTOP = i16;
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(i1, i24, i19, i18, d7) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d7 = +d7;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 i10 = i21 + 296 | 0;
 i5 = i21 + 32 | 0;
 i3 = i21 + 24 | 0;
 i2 = i21 + 8 | 0;
 i4 = i21;
 i8 = i21 + 300 | 0;
 i6 = i21 + 292 | 0;
 i9 = i21 + 64 | 0;
 i15 = i21 + 60 | 0;
 i14 = i21 + 56 | 0;
 i11 = i21 + 52 | 0;
 i12 = i21 + 48 | 0;
 i25 = i4;
 HEAP32[i25 >> 2] = 37;
 HEAP32[i25 + 4 >> 2] = 0;
 i25 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i4 + 1 | 0, 57017, HEAP32[i19 + 4 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i8;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i25) {
  HEAP32[i2 >> 2] = HEAP32[i19 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i2 = __ZNSt3__16__clocEv() | 0;
  HEAP32[i5 >> 2] = HEAP32[i19 + 8 >> 2];
  HEAPF64[i5 + 8 >> 3] = d7;
  i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i6, i2, i4, i5) | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i16 = i1;
   i22 = i1;
   i13 = i2;
  }
 } else {
  i16 = HEAP32[i6 >> 2] | 0;
  i22 = 0;
  i13 = i1;
 }
 i2 = i16 + i13 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i2, i19) | 0;
 if ((i16 | 0) != (i8 | 0)) {
  i1 = _malloc(i13 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i16;
   i20 = i1;
   i23 = i1;
  }
 } else {
  i17 = i8;
  i20 = i9;
  i23 = 0;
 }
 i25 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i11 >> 2] = i25;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i17, i3, i2, i20, i15, i14, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i25) | 0;
 HEAP32[i12 >> 2] = HEAP32[i24 >> 2];
 i25 = HEAP32[i15 >> 2] | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 i1 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i20, i25, i1, i19, i18) | 0;
 HEAP32[i24 >> 2] = i1;
 if (i23 | 0) _free(i23);
 _free(i22);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(i1, i24, i20, i19, d7) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 d7 = +d7;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i10 = i16 + 68 | 0;
 i5 = i16 + 32 | 0;
 i3 = i16 + 24 | 0;
 i2 = i16 + 8 | 0;
 i4 = i16;
 i8 = i16 + 130 | 0;
 i6 = i16 + 64 | 0;
 i9 = i16 + 72 | 0;
 i15 = i16 + 60 | 0;
 i14 = i16 + 56 | 0;
 i11 = i16 + 52 | 0;
 i12 = i16 + 48 | 0;
 i25 = i4;
 HEAP32[i25 >> 2] = 37;
 HEAP32[i25 + 4 >> 2] = 0;
 i25 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i4 + 1 | 0, 57017, HEAP32[i20 + 4 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i8;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i25) {
  HEAP32[i2 >> 2] = HEAP32[i20 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i2 = __ZNSt3__16__clocEv() | 0;
  HEAP32[i5 >> 2] = HEAP32[i20 + 8 >> 2];
  HEAPF64[i5 + 8 >> 3] = d7;
  i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i6, i2, i4, i5) | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i1;
   i21 = i1;
   i13 = i2;
  }
 } else {
  i17 = HEAP32[i6 >> 2] | 0;
  i21 = 0;
  i13 = i1;
 }
 i2 = i17 + i13 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i17, i2, i20) | 0;
 if ((i17 | 0) != (i8 | 0)) {
  i1 = _malloc(i13 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i17;
   i22 = i1;
   i23 = i1;
  }
 } else {
  i18 = i8;
  i22 = i9;
  i23 = 0;
 }
 i25 = __ZNKSt3__18ios_base6getlocEv(i20) | 0;
 HEAP32[i11 >> 2] = i25;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i18, i3, i2, i22, i15, i14, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i25) | 0;
 HEAP32[i12 >> 2] = HEAP32[i24 >> 2];
 i24 = HEAP32[i15 >> 2] | 0;
 i25 = HEAP32[i14 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 i25 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i22, i24, i25, i20, i19) | 0;
 _free(i23);
 _free(i21);
 STACKTOP = i16;
 return i25 | 0;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb(i11, i14) {
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i13 = i16 + 16 | 0;
 i12 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i10 = i11 + 32 | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i2 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i13 + i3 >> 0] = i2;
   i3 = i3 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i12 + 1 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i12, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP8[i12 >> 0] = HEAP8[i13 >> 0] | 0; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP8[i12 >> 0] = HEAP8[i13 >> 0] | 0;
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP8[i12 >> 0] | 0;
     HEAP32[i11 + 48 >> 2] = i1 & 255;
    } else {
     while (1) {
      if ((i1 | 0) <= 0) break;
      i1 = i1 + -1 | 0;
      if ((_ungetc(HEAPU8[i13 + i1 >> 0] | 0, HEAP32[i10 >> 2] | 0) | 0) == -1) {
       i1 = -1;
       break L21;
      }
     }
     i1 = HEAP8[i12 >> 0] | 0;
    }
    i1 = i1 & 255;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i7, i8, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[i6 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i7 >> 2] = 0;
   i5 = 11;
   break;
  }
  if (i2) {
   i4 = i1;
   i5 = 13;
  } else i5 = 12;
 } else i5 = 11; while (0);
 if ((i5 | 0) == 11) if (i2) i5 = 12; else {
  i4 = 0;
  i5 = 13;
 }
 L16 : do if ((i5 | 0) == 12) HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 6; else if ((i5 | 0) == 13) {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 31](i3, i1 & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (!i1) i1 = 0; else i5 = 21;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   i5 = 21;
  }
  do if ((i5 | 0) == 21) if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  } while (0);
  i1 = (i1 | 0) == 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
    HEAP32[i7 >> 2] = 0;
    i5 = 30;
    break;
   }
   if (i1) break L16;
  } else i5 = 30; while (0);
  if ((i5 | 0) == 30 ? !i1 : 0) break;
  HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 2;
 } while (0);
 return;
}

function __ZN13MarchingCubes12prepare_gridEv(i28, i2) {
 i28 = i28 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, d10 = 0.0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, d23 = 0.0, d24 = 0.0, d25 = 0.0, i26 = 0, i27 = 0, i29 = 0, i30 = 0;
 i29 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i19 = i29;
 i20 = i2 + 4 | 0;
 i21 = HEAP32[i20 >> 2] | 0;
 i26 = i2 + 44 | 0;
 i27 = i2 + 52 | 0;
 i22 = i2 + 60 | 0;
 d25 = +(i21 + -5 | 0);
 d23 = (+HEAPF32[i2 + 48 >> 2] - +HEAPF32[i26 >> 2]) / d25;
 d24 = (+HEAPF32[i2 + 56 >> 2] - +HEAPF32[i27 >> 2]) / d25;
 d25 = (+HEAPF32[i2 + 64 >> 2] - +HEAPF32[i22 >> 2]) / d25;
 HEAP32[i19 >> 2] = Math_imul(Math_imul(i21, i21) | 0, i21) | 0;
 HEAP32[i19 + 4 >> 2] = 3;
 HEAP32[i28 >> 2] = 0;
 HEAP32[i28 + 4 >> 2] = 1;
 HEAP32[i28 + 8 >> 2] = 0;
 HEAP8[i28 + 12 >> 0] = 1;
 HEAP8[i28 + 13 >> 0] = 1;
 HEAP32[i28 + 32 >> 2] = 0;
 HEAP32[i28 + 36 >> 2] = 0;
 __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i28, i19);
 i19 = HEAP32[i28 + 48 >> 2] | 0;
 i1 = i19 << 2;
 i3 = __Znwj(i1) | 0;
 HEAP32[i28 + 56 >> 2] = i3;
 HEAP32[i28 >> 2] = i3;
 HEAP32[i28 + 60 >> 2] = i19;
 if (i19 | 0) _memset(i3 | 0, 0, i1 | 0) | 0;
 if ((i21 | 0) <= 0) {
  STACKTOP = i29;
  return;
 }
 i16 = i2 + 8 | 0;
 i17 = i2 + 32 | 0;
 i18 = i28 + 28 | 0;
 i19 = i2 + 36 | 0;
 i15 = i2 + 40 | 0;
 i13 = HEAP32[i28 + 40 >> 2] | 0;
 i14 = HEAP32[i28 + 24 >> 2] | 0;
 i12 = 0;
 do {
  d10 = d25 * +(i12 | 0);
  i2 = i3;
  i3 = HEAP32[i28 >> 2] | 0;
  i11 = i3 + (i13 << 2) | 0;
  i1 = 0;
  while (1) {
   i5 = Math_imul(HEAP32[i20 >> 2] | 0, i1) | 0;
   i6 = Math_imul(HEAP32[i16 >> 2] | 0, i12) | 0;
   d7 = d24 * +(i1 | 0);
   i8 = HEAP32[i18 >> 2] | 0;
   i9 = i8 << 1;
   i4 = i2;
   i2 = 0;
   while (1) {
    i30 = Math_imul(i14, i5 + i2 + i6 | 0) | 0;
    HEAPF32[i4 + (i13 << 2) + (i30 << 2) >> 2] = d23 * +(i2 | 0) + +HEAPF32[i26 >> 2] - +HEAPF32[i17 >> 2] * 2.0;
    i4 = i11 + (i30 << 2) | 0;
    HEAPF32[i4 + (i8 << 2) >> 2] = d7 + +HEAPF32[i27 >> 2] - +HEAPF32[i19 >> 2] * 2.0;
    HEAPF32[i4 + (i9 << 2) >> 2] = d10 + +HEAPF32[i22 >> 2] - +HEAPF32[i15 >> 2] * 2.0;
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i21 | 0)) break; else i4 = i3;
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == (i21 | 0)) break; else i2 = i3;
  }
  i12 = i12 + 1 | 0;
 } while ((i12 | 0) != (i21 | 0));
 STACKTOP = i29;
 return;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb(i11, i14) {
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i13 = i16 + 16 | 0;
 i12 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i10 = i11 + 32 | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i2 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i13 + i3 >> 0] = i2;
   i3 = i3 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i12 + 4 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i12, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP32[i12 >> 2] = HEAP8[i13 >> 0]; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP32[i12 >> 2] = HEAP8[i13 >> 0];
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP32[i12 >> 2] | 0;
     HEAP32[i11 + 48 >> 2] = i1;
     break;
    }
    while (1) {
     if ((i1 | 0) <= 0) break;
     i1 = i1 + -1 | 0;
     if ((_ungetc(HEAP8[i13 + i1 >> 0] | 0, HEAP32[i10 >> 2] | 0) | 0) == -1) {
      i1 = -1;
      break L21;
     }
    }
    i1 = HEAP32[i12 >> 2] | 0;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN13MarchingCubes13seal_exteriorEf(i1, d17) {
 i1 = i1 | 0;
 d17 = +d17;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i12 = HEAP32[i1 + 16 >> 2] | 0;
 i13 = HEAP32[i1 + 4 >> 2] | 0;
 i14 = HEAP32[i1 + 20 >> 2] | 0;
 if ((i13 | 0) <= 0) return;
 i15 = i1 + 68 | 0;
 i16 = i1 + 92 | 0;
 i9 = i1 + 84 | 0;
 i5 = i13 + -2 | 0;
 i10 = 0;
 do {
  i6 = (i10 | 0) == 1;
  i7 = (i10 | 0) == (i5 | 0);
  i11 = 0;
  do {
   i8 = (Math_imul(i11, i12) | 0) + i10 | 0;
   i2 = i7 | (i11 | 0) == 1;
   i1 = (i11 | 0) == (i5 | 0);
   L8 : do if (i6) {
    i3 = HEAP32[i9 >> 2] | 0;
    i4 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i16 >> 2] << 2) | 0;
    if (i2) {
     i1 = 0;
     while (1) {
      HEAPF32[i4 + ((Math_imul(i3, i8 + (Math_imul(i1, i14) | 0) | 0) | 0) << 2) >> 2] = d17;
      i1 = i1 + 1 | 0;
      if ((i1 | 0) == (i13 | 0)) break L8;
     }
    }
    if (i1) {
     i1 = 0;
     do {
      HEAPF32[i4 + ((Math_imul(i3, i8 + (Math_imul(i1, i14) | 0) | 0) | 0) << 2) >> 2] = d17;
      i1 = i1 + 1 | 0;
     } while ((i1 | 0) != (i13 | 0));
    } else {
     i1 = 0;
     do {
      HEAPF32[i4 + ((Math_imul(i3, i8 + (Math_imul(i1, i14) | 0) | 0) | 0) << 2) >> 2] = d17;
      i1 = i1 + 1 | 0;
     } while ((i1 | 0) != (i13 | 0));
    }
   } else {
    if (i2) {
     i1 = HEAP32[i9 >> 2] | 0;
     i2 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i16 >> 2] << 2) | 0;
     i3 = 0;
     while (1) {
      HEAPF32[i2 + ((Math_imul(i1, i8 + (Math_imul(i3, i14) | 0) | 0) | 0) << 2) >> 2] = d17;
      i3 = i3 + 1 | 0;
      if ((i3 | 0) == (i13 | 0)) break L8;
     }
    }
    if (i1) {
     i1 = HEAP32[i9 >> 2] | 0;
     i2 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i16 >> 2] << 2) | 0;
     i3 = 0;
     while (1) {
      HEAPF32[i2 + ((Math_imul(i1, i8 + (Math_imul(i3, i14) | 0) | 0) | 0) << 2) >> 2] = d17;
      i3 = i3 + 1 | 0;
      if ((i3 | 0) == (i13 | 0)) break L8;
     }
    } else i1 = 0;
    do {
     if ((i1 | 0) == (i5 | 0) | (i1 | 0) == 1) {
      i4 = i8 + (Math_imul(i1, i14) | 0) | 0;
      HEAPF32[(HEAP32[i15 >> 2] | 0) + (HEAP32[i16 >> 2] << 2) + ((Math_imul(HEAP32[i9 >> 2] | 0, i4) | 0) << 2) >> 2] = d17;
     }
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) != (i13 | 0));
   } while (0);
   i11 = i11 + 1 | 0;
  } while ((i11 | 0) != (i13 | 0));
  i10 = i10 + 1 | 0;
 } while ((i10 | 0) != (i13 | 0));
 return;
}

function __ZNSt3__18ios_base4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[5495] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(52612, i3, 52668);
 HEAP32[12983] = 25940;
 HEAP32[12985] = 25960;
 HEAP32[12984] = 0;
 __ZNSt3__18ios_base4initEPv(51940, 52612);
 HEAP32[13003] = 0;
 HEAP32[13004] = -1;
 i2 = HEAP32[5436] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(52716, i2, 52676);
 HEAP32[13005] = 26020;
 HEAP32[13006] = 26040;
 __ZNSt3__18ios_base4initEPv(52024, 52716);
 HEAP32[13024] = 0;
 HEAP32[13025] = -1;
 i1 = HEAP32[5466] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(52764, i1, 52684);
 HEAP32[13026] = 26020;
 HEAP32[13027] = 26040;
 __ZNSt3__18ios_base4initEPv(52108, 52764);
 HEAP32[13045] = 0;
 HEAP32[13046] = -1;
 i4 = HEAP32[52104 + (HEAP32[(HEAP32[13026] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[13047] = 26020;
 HEAP32[13048] = 26040;
 __ZNSt3__18ios_base4initEPv(52192, i4);
 HEAP32[13066] = 0;
 HEAP32[13067] = -1;
 HEAP32[51932 + (HEAP32[(HEAP32[12983] | 0) + -12 >> 2] | 0) + 72 >> 2] = 52020;
 i4 = 52104 + (HEAP32[(HEAP32[13026] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 8192;
 HEAP32[52104 + (HEAP32[(HEAP32[13026] | 0) + -12 >> 2] | 0) + 72 >> 2] = 52020;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(52812, i3, 52692);
 HEAP32[13068] = 25980;
 HEAP32[13070] = 26e3;
 HEAP32[13069] = 0;
 __ZNSt3__18ios_base4initEPv(52280, 52812);
 HEAP32[13088] = 0;
 HEAP32[13089] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(52868, i2, 52700);
 HEAP32[13090] = 26060;
 HEAP32[13091] = 26080;
 __ZNSt3__18ios_base4initEPv(52364, 52868);
 HEAP32[13109] = 0;
 HEAP32[13110] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(52916, i1, 52708);
 HEAP32[13111] = 26060;
 HEAP32[13112] = 26080;
 __ZNSt3__18ios_base4initEPv(52448, 52916);
 HEAP32[13130] = 0;
 HEAP32[13131] = -1;
 i1 = HEAP32[52444 + (HEAP32[(HEAP32[13111] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[13132] = 26060;
 HEAP32[13133] = 26080;
 __ZNSt3__18ios_base4initEPv(52532, i1);
 HEAP32[13151] = 0;
 HEAP32[13152] = -1;
 HEAP32[52272 + (HEAP32[(HEAP32[13068] | 0) + -12 >> 2] | 0) + 72 >> 2] = 52360;
 i1 = 52444 + (HEAP32[(HEAP32[13111] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 8192;
 HEAP32[52444 + (HEAP32[(HEAP32[13111] | 0) + -12 >> 2] | 0) + 72 >> 2] = 52360;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i2, i5, i6, i7, i1) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i8 = 0;
 i4 = i1 + 8 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i1 = 0;
    break;
   } else {
    i1 = HEAP32[i5 >> 2] | 0;
    break;
   }
  } else i1 = 0; while (0);
  i1 = (i1 | 0) == 0;
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) break; else break L1;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) if (i1) break; else break L1; else {
    HEAP32[i6 >> 2] = 0;
    i8 = 12;
    break;
   }
  } else i8 = 12; while (0);
  if ((i8 | 0) == 12) {
   i8 = 0;
   if (i1) {
    i2 = 0;
    break;
   } else i2 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
  if ((i1 & 255) << 24 >> 24 <= -1) break;
  if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i5 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 do if (i2) {
  if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
   HEAP32[i6 >> 2] = 0;
   i8 = 32;
   break;
  }
  if (!i1) i8 = 33;
 } else i8 = 32; while (0);
 if ((i8 | 0) == 32 ? i1 : 0) i8 = 33;
 if ((i8 | 0) == 33) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i8, i9, i4, i2, i10, i7, i3) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i9 >> 2] = i1;
 HEAP32[i10 >> 2] = i4;
 i6 = i2;
 if (i3 & 2) if ((i6 - i4 | 0) < 3) i1 = 1; else {
  HEAP32[i10 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i1 = HEAP32[i9 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i8 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3 >>> 0 > i7 >>> 0 | (i3 & -2048 | 0) == 55296) {
    i1 = 2;
    break L4;
   }
   do if (i3 >>> 0 >= 128) {
    if (i3 >>> 0 < 2048) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i6 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 6 | 192;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
    i1 = HEAP32[i10 >> 2] | 0;
    i2 = i6 - i1 | 0;
    if (i3 >>> 0 < 65536) {
     if ((i2 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 12 | 224;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    } else {
     if ((i2 | 0) < 4) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 18 | 240;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 12 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
   } else {
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i6 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i10 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } while (0);
   i1 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   HEAP32[i9 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_E16do_parse_virtualERKS1A_(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZNK5boost6spirit7classic8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS4_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EENS_13property_tree11json_parser7contextINS1B_11basic_ptreeISA_SA_NS4_4lessISA_EEEEE6a_nameEEEEENS3_ISA_NS1_5chlitIcEEEEE5parseIS18_EENS1_13parser_resultIS1P_T_E4typeERKS1S_(i3 + 4 | 0, i2) | 0;
 if ((i1 | 0) < 0) {
  i3 = -1;
  return i3 | 0;
 }
 i3 = __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES17_EEE5parseIS16_EENS1_13parser_resultIS19_T_E4typeERKS1C_(i3 + 40 | 0, i2) | 0;
 i3 = (i3 | 0) < 0 ? -1 : i3 + i1 | 0;
 return i3 | 0;
}

function _pop_arg(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0;
 L1 : do if (i3 >>> 0 <= 20) do switch (i3 | 0) {
 case 9:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   HEAP32[i2 >> 2] = i3;
   break L1;
  }
 case 10:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 11:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = 0;
   break L1;
  }
 case 12:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i3 = i4;
   i5 = HEAP32[i3 >> 2] | 0;
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 8;
   i4 = i2;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i3;
   break L1;
  }
 case 13:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 65535) << 16 >> 16;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 14:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 65535;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 15:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 255) << 24 >> 24;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 16:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 255;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 17:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 case 18:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function _build_geometry(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i7 = i9 + 56 | 0;
 i5 = i9 + 121 | 0;
 i8 = i9 + 40 | 0;
 i2 = i9;
 i4 = i9 + 12 | 0;
 i6 = i9 + 120 | 0;
 if (HEAP8[51328] | 0) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29876, 101) | 0;
  STACKTOP = i9;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i8, i1, _strlen(i1) | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i8);
 i1 = __Z14object_factoryNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERb(i2, i5) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __Z24parse_mc_properties_jsonPc(i4, i3);
 i3 = __Znwj(532) | 0;
 i2 = HEAP32[i4 + 24 >> 2] & 65535;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i7 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i7 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i7 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP32[i7 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 __ZN13MarchingCubesC2EtN12mp5_implicit12bounding_boxEbb(i3, i2, i7, 1, 1);
 HEAP32[12833] = i3;
 HEAPF32[i3 + 472 >> 2] = 0.0;
 __ZN13MarchingCubes12prepare_gridEv(i7, i3);
 __ZN13MarchingCubes10eval_shapeERK17implicit_functionRKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(HEAP32[12833] | 0, i1, i7);
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 if (HEAP8[i5 >> 0] | 0) {
  i1 = HEAP32[12833] | 0;
  i2 = 0;
  do {
   d10 = +(i2 | 0);
   __ZN13MarchingCubes7addBallEffffff(i1, +Math_sin(+(d10 + (+Math_cos(+(d10 * .21)) * .5 + 1.03) * 0.0)) * .27 + .5, +Math_abs(+(+Math_cos(+(d10 + +Math_cos(+(d10 * .1424 + 1.22)) * 0.0)))) * .77, +Math_cos(+(d10 + +Math_sin(+(d10 * .53 + .92)) * 0.0)) * .27 + .5, .9599999785423279, 12.0, 1.0);
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != 4);
 }
 __ZN13MarchingCubes13seal_exteriorEf(HEAP32[12833] | 0, -1.0e7);
 __ZN13MarchingCubes15render_geometryERK10callback_t(HEAP32[12833] | 0, i6);
 HEAP8[51328] = 1;
 i1 = HEAP32[i7 + 56 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 STACKTOP = i9;
 return;
}

function _scanexp(i8, i3) {
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i8 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i7 = i8 + 100 | 0;
 if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
  HEAP32[i6 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 } else i1 = ___shgetc(i8) | 0;
 switch (i1 | 0) {
 case 43:
 case 45:
  {
   i2 = (i1 | 0) == 45 & 1;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
   if ((i3 | 0) != 0 & (i1 + -48 | 0) >>> 0 > 9 ? (HEAP32[i7 >> 2] | 0) != 0 : 0) {
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
    i5 = i2;
   } else i5 = i2;
   break;
  }
 default:
  i5 = 0;
 }
 if ((i1 + -48 | 0) >>> 0 > 9) if (!(HEAP32[i7 >> 2] | 0)) {
  i2 = -2147483648;
  i1 = 0;
 } else {
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i2 = -2147483648;
  i1 = 0;
 } else {
  i2 = 0;
  do {
   i2 = i1 + -48 + (i2 * 10 | 0) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10 & (i2 | 0) < 214748364);
  i3 = ((i2 | 0) < 0) << 31 >> 31;
  if ((i1 + -48 | 0) >>> 0 < 10) {
   do {
    i3 = ___muldi3(i2 | 0, i3 | 0, 10, 0) | 0;
    i2 = tempRet0;
    i1 = _i64Add(i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    i2 = _i64Add(i1 | 0, tempRet0 | 0, i3 | 0, i2 | 0) | 0;
    i3 = tempRet0;
    i1 = HEAP32[i6 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = i1 + 1;
     i1 = HEAPU8[i1 >> 0] | 0;
    } else i1 = ___shgetc(i8) | 0;
   } while ((i1 + -48 | 0) >>> 0 < 10 & ((i3 | 0) < 21474836 | (i3 | 0) == 21474836 & i2 >>> 0 < 2061584302));
   i4 = i2;
  } else i4 = i2;
  if ((i1 + -48 | 0) >>> 0 < 10) do {
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10);
  if (HEAP32[i7 >> 2] | 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i8 = (i5 | 0) != 0;
  i1 = _i64Subtract(0, 0, i4 | 0, i3 | 0) | 0;
  i2 = i8 ? tempRet0 : i3;
  i1 = i8 ? i1 : i4;
 }
 tempRet0 = i2;
 return i1 | 0;
}

function __ZN13MarchingCubes15render_geometryERK10callback_t(i20, i19) {
 i20 = i20 | 0;
 i19 = i19 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, d9 = 0.0, i10 = 0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 __ZN13MarchingCubes12reset_resultEv(i20);
 i8 = i20 + 312 | 0;
 i18 = i8;
 HEAP32[i18 >> 2] = 0;
 HEAP32[i18 + 4 >> 2] = 0;
 i18 = i20 + 32 | 0;
 d9 = +HEAPF32[i20 + 44 >> 2] / +HEAPF32[i18 >> 2] + -2.0;
 i10 = i20 + 36 | 0;
 d11 = +HEAPF32[i20 + 52 >> 2] / +HEAPF32[i10 >> 2] + -2.0;
 i12 = i20 + 40 | 0;
 d5 = +HEAPF32[i12 >> 2];
 d13 = +HEAPF32[i20 + 60 >> 2] / d5 + -2.0;
 i14 = i20 + 4 | 0;
 i15 = (HEAP32[i14 >> 2] | 0) + -2 | 0;
 if ((i15 | 0) <= 1) return;
 i16 = i20 + 8 | 0;
 i17 = i20 + 472 | 0;
 i1 = 1;
 while (1) {
  i7 = Math_imul(HEAP32[i16 >> 2] | 0, i1) | 0;
  d5 = (d13 + +(i1 | 0)) * d5;
  i4 = 1;
  do {
   i2 = (Math_imul(HEAP32[i14 >> 2] | 0, i4) | 0) + i7 | 0;
   d6 = (d11 + +(i4 | 0)) * +HEAPF32[i10 >> 2];
   i3 = 1;
   do {
    __ZN13MarchingCubes15polygonize_cubeEfffifRK10callback_t(i20, (d9 + +(i3 | 0)) * +HEAPF32[i18 >> 2], d6, d5, i2 + i3 | 0, +HEAPF32[i17 >> 2], i19) | 0;
    i3 = i3 + 1 | 0;
   } while ((i3 | 0) != (i15 | 0));
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) != (i15 | 0));
  i1 = i1 + 1 | 0;
  if ((i1 | 0) == (i15 | 0)) break;
  d5 = +HEAPF32[i12 >> 2];
 }
 i1 = HEAP32[i8 >> 2] | 0;
 if (!i1) return;
 i4 = (HEAP32[i20 + 320 >> 2] | 0) + (HEAP32[i20 + 344 >> 2] << 2) | 0;
 i2 = i1 * 3 | 0;
 i1 = (HEAP32[i20 + 332 >> 2] | 0) - i2 | 0;
 if ((i1 | 0) > 0) {
  i3 = HEAP32[i20 + 336 >> 2] | 0;
  i2 = (HEAP32[i20 + 340 >> 2] | 0) + i2 | 0;
  while (1) {
   HEAPF32[i4 + ((Math_imul(i2, i3) | 0) << 2) >> 2] = 0.0;
   if ((i1 | 0) > 1) {
    i1 = i1 + -1 | 0;
    i2 = i2 + 1 | 0;
   } else break;
  }
 }
 HEAP8[i20 + 316 >> 0] = 1;
 HEAP8[i20 + 317 >> 0] = 0;
 i1 = HEAP16[i20 >> 1] | 0;
 if ((i1 & 255) << 24 >> 24) HEAP8[i20 + 319 >> 0] = 1;
 if ((i1 & 65535) >= 256) HEAP8[i20 + 318 >> 0] = 1;
 __ZN13MarchingCubes20flush_geometry_queueERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERiRNS0_6vectorIfNS0_9allocatorIfEEEESB_RNS7_IiNS8_IiEEEERNS0_3mapIiiNS0_4lessIiEENS8_INS0_4pairIKiiEEEEEES6_(i20, 0, i20 + 476 | 0, 0, i20 + 492 | 0, i20 + 504 | 0, i20 + 516 | 0, i20 + 528 | 0);
 return;
}

function __ZNK12mp5_implicit17CrispIntersection13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i6, i7, i15) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i10 = i18 + 48 | 0;
 i14 = i18;
 i2 = i7 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP8[i10 + 8 >> 0] = 1;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = i3;
 HEAP32[i10 + 32 >> 2] = i3;
 i12 = i10 + 16 | 0;
 HEAP32[i12 >> 2] = 1;
 i9 = i10 + 24 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i10 + 28 >> 2] = 0;
 i4 = i3 << 2;
 i1 = __Znwj(i4) | 0;
 i17 = i10 + 40 | 0;
 HEAP32[i17 >> 2] = i1;
 HEAP32[i10 >> 2] = i1;
 HEAP32[i10 + 44 >> 2] = i3;
 i5 = (i3 | 0) == 0;
 if (!i5) _memset(i1 | 0, 0, i4 | 0) | 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP8[i14 + 8 >> 0] = 1;
 HEAP32[i14 + 20 >> 2] = 0;
 HEAP32[i14 + 12 >> 2] = i3;
 HEAP32[i14 + 32 >> 2] = i3;
 i13 = i14 + 16 | 0;
 HEAP32[i13 >> 2] = 1;
 i11 = i14 + 24 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i14 + 28 >> 2] = 0;
 i1 = __Znwj(i4) | 0;
 i16 = i14 + 40 | 0;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i14 >> 2] = i1;
 HEAP32[i14 + 44 >> 2] = i3;
 if (!i5) _memset(i1 | 0, 0, i4 | 0) | 0;
 i8 = HEAP32[i6 + 4 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i8 >> 2] >> 2] & 31](i8, i7, i10);
 i8 = HEAP32[i6 + 8 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i8 >> 2] >> 2] & 31](i8, i7, i14);
 i8 = HEAP32[i2 >> 2] | 0;
 if ((0 - i8 | 0) < 0) {
  i7 = (HEAP32[i10 >> 2] | 0) + (HEAP32[i9 >> 2] << 2) | 0;
  i6 = HEAP32[i12 >> 2] | 0;
  i5 = (HEAP32[i14 >> 2] | 0) + (HEAP32[i11 >> 2] << 2) | 0;
  i3 = HEAP32[i13 >> 2] | 0;
  i4 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i15 + 24 >> 2] << 2) | 0;
  i1 = HEAP32[i15 + 16 >> 2] | 0;
  i2 = 0;
  do {
   i15 = i7 + ((Math_imul(i6, i2) | 0) << 2) | 0;
   i14 = i5 + ((Math_imul(i3, i2) | 0) << 2) | 0;
   HEAP32[i4 + ((Math_imul(i1, i2) | 0) << 2) >> 2] = HEAP32[(+HEAPF32[i15 >> 2] > +HEAPF32[i14 >> 2] ? i14 : i15) >> 2];
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != (i8 | 0));
 }
 i1 = HEAP32[i16 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i17 >> 2] | 0;
 if (!i1) {
  STACKTOP = i18;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i18;
 return;
}

function __ZNK12mp5_implicit13CrispSubtract13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE(i6, i7, i15) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, d19 = 0.0, d20 = 0.0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i10 = i18 + 48 | 0;
 i14 = i18;
 i2 = i7 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP8[i10 + 8 >> 0] = 1;
 HEAP32[i10 + 20 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = i3;
 HEAP32[i10 + 32 >> 2] = i3;
 i12 = i10 + 16 | 0;
 HEAP32[i12 >> 2] = 1;
 i9 = i10 + 24 | 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i10 + 28 >> 2] = 0;
 i4 = i3 << 2;
 i1 = __Znwj(i4) | 0;
 i17 = i10 + 40 | 0;
 HEAP32[i17 >> 2] = i1;
 HEAP32[i10 >> 2] = i1;
 HEAP32[i10 + 44 >> 2] = i3;
 i5 = (i3 | 0) == 0;
 if (!i5) _memset(i1 | 0, 0, i4 | 0) | 0;
 HEAP32[i14 + 4 >> 2] = 0;
 HEAP8[i14 + 8 >> 0] = 1;
 HEAP32[i14 + 20 >> 2] = 0;
 HEAP32[i14 + 12 >> 2] = i3;
 HEAP32[i14 + 32 >> 2] = i3;
 i13 = i14 + 16 | 0;
 HEAP32[i13 >> 2] = 1;
 i11 = i14 + 24 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i14 + 28 >> 2] = 0;
 i1 = __Znwj(i4) | 0;
 i16 = i14 + 40 | 0;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i14 >> 2] = i1;
 HEAP32[i14 + 44 >> 2] = i3;
 if (!i5) _memset(i1 | 0, 0, i4 | 0) | 0;
 i8 = HEAP32[i6 + 4 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i8 >> 2] >> 2] & 31](i8, i7, i10);
 i8 = HEAP32[i6 + 8 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i8 >> 2] >> 2] & 31](i8, i7, i14);
 i8 = HEAP32[i2 >> 2] | 0;
 if ((0 - i8 | 0) < 0) {
  i7 = (HEAP32[i10 >> 2] | 0) + (HEAP32[i9 >> 2] << 2) | 0;
  i6 = HEAP32[i12 >> 2] | 0;
  i5 = (HEAP32[i14 >> 2] | 0) + (HEAP32[i11 >> 2] << 2) | 0;
  i3 = HEAP32[i13 >> 2] | 0;
  i4 = (HEAP32[i15 >> 2] | 0) + (HEAP32[i15 + 24 >> 2] << 2) | 0;
  i1 = HEAP32[i15 + 16 >> 2] | 0;
  i2 = 0;
  do {
   d20 = +HEAPF32[i7 + ((Math_imul(i6, i2) | 0) << 2) >> 2];
   d19 = -+HEAPF32[i5 + ((Math_imul(i3, i2) | 0) << 2) >> 2];
   HEAPF32[i4 + ((Math_imul(i1, i2) | 0) << 2) >> 2] = d20 < d19 ? d20 : d19;
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != (i8 | 0));
 }
 i1 = HEAP32[i16 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i17 >> 2] | 0;
 if (!i1) {
  STACKTOP = i18;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i18;
 return;
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(i17, i1, i7, i9, i8, i2) {
 i17 = i17 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i13 = i16 + 168 | 0;
 i12 = i16 + 40 | 0;
 i11 = i16 + 36 | 0;
 i15 = i16 + 32 | 0;
 i14 = i16;
 i6 = i16 + 24 | 0;
 i10 = i16 + 16 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i14 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 >> 2] = 28288;
 i5 = HEAP8[i2 >> 0] | 0;
 i1 = (i5 & 1) == 0;
 i4 = i2 + 4 | 0;
 i2 = i1 ? i4 : HEAP32[i2 + 8 >> 2] | 0;
 i4 = i2 + ((i1 ? (i5 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) << 2) | 0;
 i5 = i12 + 32 | 0;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) break;
  HEAP32[i15 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 15](i6, i13, i2, i4, i15, i12, i5, i11) | 0;
  i1 = i12;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i11 >> 2] | 0) >>> 0) break;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i14, HEAP8[i1 >> 0] | 0);
   i1 = i1 + 1 | 0;
  }
  i2 = HEAP32[i15 >> 2] | 0;
  i1 = i3;
 }
 i2 = _catgets((i7 | 0) == -1 ? -1 : i7 << 1, i9, i8, (HEAP8[i14 >> 0] & 1) == 0 ? i14 + 1 | 0 : HEAP32[i14 + 8 >> 2] | 0) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 >> 2] = 28336;
 i4 = i2 + (_strlen(i2) | 0) | 0;
 i5 = i4;
 i6 = i12 + 128 | 0;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) break;
  HEAP32[i15 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 15](i10, i13, i2, (i5 - i2 | 0) > 32 ? i2 + 32 | 0 : i4, i15, i12, i6, i11) | 0;
  i1 = i12;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i11 >> 2] | 0) >>> 0) break;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i17, HEAP32[i1 >> 2] | 0);
   i1 = i1 + 4 | 0;
  }
  i2 = HEAP32[i15 >> 2] | 0;
  i1 = i3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 STACKTOP = i16;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi(i16, i15) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i17;
 if ((i15 | 0) == -1) {
  i16 = 0;
  STACKTOP = i17;
  return i16 | 0;
 }
 i11 = i16 + 12 | 0;
 i12 = i16 + 8 | 0;
 i13 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) | 0;
 i14 = i16 + 24 | 0;
 i7 = HEAP32[i14 >> 2] | 0;
 i8 = i16 + 28 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 if ((i7 | 0) == (i1 | 0)) {
  i6 = i16 + 48 | 0;
  if (!(HEAP32[i6 >> 2] & 16)) {
   i16 = -1;
   STACKTOP = i17;
   return i16 | 0;
  }
  i3 = i16 + 20 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i9 = i16 + 44 | 0;
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i2 = i16 + 32 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i2, 0);
  if (!(HEAP8[i2 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i2 >> 2] & -2) + -1 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i2, i1, 0);
  i1 = HEAP8[i2 >> 0] | 0;
  if (!(i1 & 1)) {
   i2 = i2 + 1 | 0;
   i1 = (i1 & 255) >>> 1;
  } else {
   i2 = HEAP32[i16 + 40 >> 2] | 0;
   i1 = HEAP32[i16 + 36 >> 2] | 0;
  }
  i1 = i2 + i1 | 0;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i8 >> 2] = i1;
  i7 = i2 + (i7 - i4) | 0;
  HEAP32[i14 >> 2] = i7;
  i2 = i2 + i5 | 0;
  HEAP32[i9 >> 2] = i2;
  i8 = i9;
  i3 = i9;
  i5 = i1;
 } else {
  i2 = i16 + 44 | 0;
  i8 = i2;
  i6 = i16 + 48 | 0;
  i3 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
  i5 = i1;
 }
 i4 = i7 + 1 | 0;
 HEAP32[i10 >> 2] = i4;
 i2 = HEAP32[(i4 >>> 0 < i2 >>> 0 ? i3 : i10) >> 2] | 0;
 HEAP32[i8 >> 2] = i2;
 if (HEAP32[i6 >> 2] & 8 | 0) {
  i1 = i16 + 32 | 0;
  if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i16 + 40 >> 2] | 0;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i11 >> 2] = i1 + i13;
  HEAP32[i16 + 16 >> 2] = i2;
 }
 if ((i7 | 0) == (i5 | 0)) {
  i16 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 52 >> 2] & 31](i16, i15 & 255) | 0;
  STACKTOP = i17;
  return i16 | 0;
 } else {
  HEAP32[i14 >> 2] = i4;
  HEAP8[i7 >> 0] = i15;
  i16 = i15 & 255;
  STACKTOP = i17;
  return i16 | 0;
 }
 return 0;
}

function __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEE8undefineEPSN_(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = HEAP32[i1 + 8 >> 2] | 0;
 i3 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i1 = i2;
 if ((HEAP32[i5 + 8 >> 2] | 0) - i2 >> 2 >>> 0 <= i4 >>> 0) return 0;
 i2 = HEAP32[i1 + (i4 << 2) >> 2] | 0;
 if (i2) {
  __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10definitionINS_6spirit7classic7scannerINS4_11__wrap_iterIPcEENSH_16scanner_policiesINSH_28skip_parser_iteration_policyINSH_11alternativeINSO_INSH_12space_parserENSH_13confix_parserINSH_6strlitIPKcEENSH_11kleene_starINSH_14anychar_parserEEENSO_INSH_10eol_parserENSH_10end_parserEEENSH_21unary_parser_categoryENSH_10non_nestedENSH_9is_lexemeEEEEENSQ_ISU_SX_SU_S11_S12_S13_EEEENSH_16iteration_policyEEENSH_12match_policyENSH_13action_policyEEEEEED2Ev(i2);
  __ZdlPv(i2);
  i1 = HEAP32[i3 >> 2] | 0;
 }
 HEAP32[i1 + (i4 << 2) >> 2] = 0;
 i3 = i5 + 16 | 0;
 i4 = (HEAP32[i3 >> 2] | 0) + -1 | 0;
 HEAP32[i3 >> 2] = i4;
 if (i4 | 0) return 0;
 HEAP32[i5 + 20 >> 2] = 0;
 i5 = i5 + 24 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = 0;
 if (!i1) return 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i5 - 1;
 if ((i5 | 0) != 1) return 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i4 = i1 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i5 - 1;
 if ((i5 | 0) != 1) return 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 return 0;
}

function __ZN5boost13property_tree11string_pathINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_13id_translatorIS8_EEE6reduceEv(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i11 + 16 | 0;
 i9 = i11;
 i7 = i6 + 16 | 0;
 i5 = HEAP32[i7 >> 2] | 0;
 i1 = HEAP8[i6 >> 0] | 0;
 i4 = i5;
 if (!(i1 & 1)) {
  i2 = i6 + 1 | 0;
  i1 = (i1 & 255) >>> 1;
 } else {
  i2 = HEAP32[i6 + 8 >> 2] | 0;
  i1 = HEAP32[i6 + 4 >> 2] | 0;
 }
 i1 = i2 + i1 | 0;
 L5 : do if ((i5 | 0) == (i1 | 0)) i3 = i5; else {
  i2 = HEAP8[i6 + 12 >> 0] | 0;
  i3 = i5;
  while (1) {
   if ((HEAP8[i3 >> 0] | 0) == i2 << 24 >> 24) break L5;
   i3 = i3 + 1 | 0;
   if ((i3 | 0) == (i1 | 0)) {
    i3 = i1;
    break;
   }
  }
 } while (0);
 i1 = i3 - i4 | 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i10);
 if (i1 >>> 0 < 11) {
  HEAP8[i10 >> 0] = i1 << 1;
  i1 = i10 + 1 | 0;
 } else {
  i12 = i1 + 16 & -16;
  i2 = __Znwj(i12) | 0;
  HEAP32[i10 + 8 >> 2] = i2;
  HEAP32[i10 >> 2] = i12 | 1;
  HEAP32[i10 + 4 >> 2] = i1;
  i1 = i2;
 }
 if ((i5 | 0) != (i3 | 0)) {
  i2 = i5;
  while (1) {
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   i2 = i4 + 1 | 0;
   i1 = i1 + 1 | 0;
   if ((i2 | 0) == (i3 | 0)) break; else i4 = i2;
  }
 }
 HEAP8[i1 >> 0] = 0;
 HEAP32[i6 + 16 >> 2] = i3;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) {
  i2 = i6 + 1 | 0;
  i1 = (i1 & 255) >>> 1;
 } else {
  i2 = HEAP32[i6 + 8 >> 2] | 0;
  i1 = HEAP32[i6 + 4 >> 2] | 0;
 }
 if ((i3 | 0) != (i2 + i1 | 0)) HEAP32[i7 >> 2] = i3 + 1;
 HEAP8[i9 >> 0] = 0;
 i1 = i9 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i10);
 HEAP8[i9 >> 0] = 1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i8, i1);
 if (!(HEAP8[i9 >> 0] | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  STACKTOP = i11;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 HEAP8[i9 >> 0] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
 STACKTOP = i11;
 return;
}

function __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEC2ERNS_8weak_ptrIS1K_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 HEAP32[i1 >> 2] = 20928;
 i4 = i1 + 4 | 0;
 i3 = i1 + 20 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i3 >> 2] = i1;
 i4 = i1 + 24 | 0;
 HEAP32[i4 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEES1M_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i3, i1, i4);
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP32[i1 + 24 >> 2] | 0;
 i2 = i2 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) == (i1 | 0)) return;
 if (i3) {
  i1 = i3 + 8 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
  i1 = HEAP32[i2 >> 2] | 0;
 }
 if (i1 | 0 ? (i5 = i1 + 8 | 0, i4 = HEAP32[i5 >> 2] | 0, HEAP32[i5 >> 2] = i4 - 1, (i4 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 HEAP32[i2 >> 2] = i3;
 return;
}

function __ZNK5boost6spirit7classic13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSF_INS1_12space_parserENS2_INS1_6strlitIPKcEENS5_INS1_14anychar_parserEEENSF_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS2_ISK_SM_SK_SQ_SR_SS_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES14_EEEES4_SQ_SR_NS1_10non_lexemeEE5parseIS13_EENS1_13parser_resultIS18_T_E4typeERKS1B_(i3, i8) {
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = HEAP32[i3 + 4 >> 2] | 0;
 i10 = HEAP8[i3 + 8 >> 0] | 0;
 i9 = i8 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i11 = i8 + 8 | 0;
 if ((i2 | 0) == (HEAP32[i11 >> 2] | 0)) {
  i11 = -1;
  return i11 | 0;
 }
 if ((HEAP8[i3 >> 0] | 0) != (HEAP8[i2 >> 0] | 0)) {
  i11 = -1;
  return i11 | 0;
 }
 HEAP32[i1 >> 2] = i2 + 1;
 i3 = HEAP32[i9 >> 2] | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 do if (i2) {
  i1 = 0;
  i4 = i2;
  i2 = HEAP32[i3 >> 2] | 0;
  do {
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 31](i4, i8) | 0;
   if ((i6 | 0) < 0) break;
   i3 = HEAP32[i9 >> 2] | 0;
   i5 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i2;
   i3 = HEAP32[i9 >> 2] | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) != (HEAP32[i11 >> 2] | 0) ? i10 << 24 >> 24 == (HEAP8[i4 >> 0] | 0) : 0) {
    HEAP32[i3 >> 2] = i4 + 1;
    if ((i6 | 0) <= 1) break;
    i2 = HEAP32[i9 >> 2] | 0;
   } else i2 = i3;
   HEAP32[i2 >> 2] = i5;
   i1 = i6 + i1 | 0;
   i2 = HEAP32[HEAP32[i9 >> 2] >> 2] | 0;
   i4 = HEAP32[i7 >> 2] | 0;
  } while ((i4 | 0) != 0);
  HEAP32[HEAP32[i9 >> 2] >> 2] = i2;
  if ((i1 | 0) < 0) {
   i11 = -1;
   return i11 | 0;
  } else {
   i3 = HEAP32[i9 >> 2] | 0;
   i2 = i1 + 2 | 0;
   break;
  }
 } else i2 = 2; while (0);
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) == (HEAP32[i11 >> 2] | 0)) {
  i11 = -1;
  return i11 | 0;
 }
 if (i10 << 24 >> 24 != (HEAP8[i1 >> 0] | 0)) {
  i11 = -1;
  return i11 | 0;
 }
 HEAP32[i3 >> 2] = i1 + 1;
 i11 = i2;
 return i11 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i10, i11, i8, i9, i12, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i15 + 48 | 0;
 i1 = i15 + 24 | 0;
 i13 = i15 + 16 | 0;
 i3 = i15 + 20 | 0;
 i4 = i15 + 12 | 0;
 i5 = i15 + 8 | 0;
 i6 = i15 + 4 | 0;
 i7 = i15;
 if (!(HEAP32[i9 + 4 >> 2] & 1)) {
  HEAP32[i13 >> 2] = -1;
  i7 = HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiiii[i7 & 63](i10, i1, i2, i9, i12, i13) | 0;
  HEAP32[i11 >> 2] = i1;
  switch (HEAP32[i13 >> 2] | 0) {
  case 0:
   {
    HEAP8[i14 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i14 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i14 >> 0] = 1;
    HEAP32[i12 >> 2] = 4;
   }
  }
 } else {
  i10 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i5 >> 2] = i10;
  i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 53012) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
  i9 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i6 >> 2] = i9;
  i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 53020) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] & 63](i1, i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i1 + 12 | 0, i10);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  HEAP8[i14 >> 0] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i11, i2, i1, i1 + 24 | 0, i13, i12, 1) | 0) == (i1 | 0) & 1;
  i14 = HEAP32[i11 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1 + 12 | 0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1);
  i1 = i14;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i10, i11, i8, i9, i12, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i15 + 48 | 0;
 i1 = i15 + 24 | 0;
 i13 = i15 + 16 | 0;
 i3 = i15 + 20 | 0;
 i4 = i15 + 12 | 0;
 i5 = i15 + 8 | 0;
 i6 = i15 + 4 | 0;
 i7 = i15;
 if (!(HEAP32[i9 + 4 >> 2] & 1)) {
  HEAP32[i13 >> 2] = -1;
  i7 = HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiiii[i7 & 63](i10, i1, i2, i9, i12, i13) | 0;
  HEAP32[i11 >> 2] = i1;
  switch (HEAP32[i13 >> 2] | 0) {
  case 0:
   {
    HEAP8[i14 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i14 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i14 >> 0] = 1;
    HEAP32[i12 >> 2] = 4;
   }
  }
 } else {
  i10 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i5 >> 2] = i10;
  i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
  i9 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i6 >> 2] = i9;
  i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 52992) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] & 63](i1, i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 63](i1 + 12 | 0, i10);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  HEAP8[i14 >> 0] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i11, i2, i1, i1 + 24 | 0, i13, i12, 1) | 0) == (i1 | 0) & 1;
  i14 = HEAP32[i11 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  i1 = i14;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINSD_11basic_ptreeIS9_S9_NS3_4lessIS9_EEEEE10a_object_eEEEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSV_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSV_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSX_IS11_S14_S11_S18_S19_S1A_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISN_T_E4typeERKS1M_(i4, i6, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = i7 + 24 | 0;
 i2 = i7 + 12 | 0;
 i3 = i7;
 __ZNK5boost6spirit7classic6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEE10a_object_eEE5parseINS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINST_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENST_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSV_ISZ_S12_SZ_S16_S17_S18_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISL_T_E4typeERKS1K_(i4, i6, i5);
 if ((HEAP32[i4 >> 2] | 0) < 0) {
  i7 = HEAP32[HEAP32[i5 + 4 >> 2] >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i6 + 8 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
  HEAP32[i1 >> 2] = 21124;
  HEAP32[i1 + 4 >> 2] = i7;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i2);
  __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i1);
 } else {
  STACKTOP = i7;
  return;
 }
}

function __ZN13MarchingCubes7addBallEffffff(i3, d25, d26, d27, d28, d29, d1) {
 i3 = i3 | 0;
 d25 = +d25;
 d26 = +d26;
 d27 = +d27;
 d28 = +d28;
 d29 = +d29;
 d1 = +d1;
 var i2 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, i8 = 0, d9 = 0.0, i10 = 0, i11 = 0, d12 = 0.0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i30 = 0;
 i24 = i3 + 4 | 0;
 i2 = HEAP32[i24 >> 2] | 0;
 d12 = +(i2 | 0);
 d9 = d12 * +Math_sqrt(+(d28 / d29));
 d6 = d12 * d27 / d1;
 d7 = d12 * d26 / d1;
 d12 = d12 * d25 / d1;
 i4 = ~~+Math_floor(+(d6 - d9));
 i4 = (i4 | 0) < 1 ? 1 : i4;
 i16 = ~~+Math_floor(+(d9 + d6));
 i17 = i2 + -1 | 0;
 i16 = (i16 | 0) < (i2 | 0) ? i16 : i17;
 i14 = ~~+Math_floor(+(d7 - d9));
 i14 = (i14 | 0) < 1 ? 1 : i14;
 i23 = ~~+Math_floor(+(d9 + d7));
 i23 = (i23 | 0) < (i2 | 0) ? i23 : i17;
 i15 = ~~+Math_floor(+(d12 - d9));
 i15 = (i15 | 0) < 1 ? 1 : i15;
 i22 = ~~+Math_floor(+(d9 + d12));
 i17 = (i22 | 0) < (i2 | 0) ? i22 : i17;
 if ((i4 | 0) >= (i16 | 0)) return;
 i18 = HEAP32[i3 + 8 >> 2] | 0;
 i19 = (i14 | 0) < (i23 | 0);
 i20 = (i15 | 0) < (i17 | 0);
 i21 = i3 + 68 | 0;
 i22 = i3 + 92 | 0;
 i13 = i3 + 84 | 0;
 do {
  i11 = Math_imul(i18, i4) | 0;
  d12 = +(i4 | 0) / +(i2 | 0) - d27;
  d12 = d12 * d12;
  L6 : do if (i19) {
   i2 = HEAP32[i24 >> 2] | 0;
   d9 = +(i2 | 0);
   if (i20) {
    i10 = i2;
    i3 = i14;
    while (1) {
     i5 = (Math_imul(i2, i3) | 0) + i11 | 0;
     d1 = +(i3 | 0) / d9 - d26;
     d1 = d1 * d1;
     d6 = +(i10 | 0);
     i8 = i15;
     do {
      d7 = +(i8 | 0) / d6 - d25;
      d7 = d28 / (d12 + (d1 + (d7 * d7 + 9.999999974752427e-07))) - d29;
      if (d7 > 0.0) {
       i30 = (HEAP32[i21 >> 2] | 0) + (HEAP32[i22 >> 2] << 2) + ((Math_imul(HEAP32[i13 >> 2] | 0, i5 + i8 | 0) | 0) << 2) | 0;
       HEAPF32[i30 >> 2] = d7 / 100.0 + +HEAPF32[i30 >> 2];
      }
      i8 = i8 + 1 | 0;
     } while ((i8 | 0) < (i17 | 0));
     i3 = i3 + 1 | 0;
     if ((i3 | 0) >= (i23 | 0)) {
      i2 = i10;
      break L6;
     }
     i10 = HEAP32[i24 >> 2] | 0;
    }
   }
  } while (0);
  i4 = i4 + 1 | 0;
 } while ((i4 | 0) < (i16 | 0));
 return;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i7, i13, i11, i12, i14, i3, i2, i4, i5, i8) {
 i7 = i7 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i12 >> 2] | 0;
 i10 = (i9 | 0) == (i11 | 0);
 do if (i10) {
  i1 = (HEAP8[i8 + 24 >> 0] | 0) == i7 << 24 >> 24;
  if (!i1 ? (HEAP8[i8 + 25 >> 0] | 0) != i7 << 24 >> 24 : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i2 >> 0] | 0;
  if (i7 << 24 >> 24 == i3 << 24 >> 24 ? (((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i8 + 26 | 0;
  i1 = i8;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i7 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  if ((i1 | 0) > 23) i1 = -1; else {
   switch (i13 | 0) {
   case 10:
   case 8:
    {
     if ((i1 | 0) >= (i13 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 22) {
      if (i10) {
       i1 = -1;
       break L6;
      }
      if ((i9 - i11 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i9 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[47802 + i1 >> 0] | 0;
      HEAP32[i12 >> 2] = i9 + 1;
      HEAP8[i9 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[47802 + i1 >> 0] | 0;
   HEAP32[i12 >> 2] = i9 + 1;
   HEAP8[i9 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i7, i13, i11, i12, i14, i3, i2, i4, i5, i8) {
 i7 = i7 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i12 >> 2] | 0;
 i10 = (i9 | 0) == (i11 | 0);
 do if (i10) {
  i1 = (HEAP32[i8 + 96 >> 2] | 0) == (i7 | 0);
  if (!i1 ? (HEAP32[i8 + 100 >> 2] | 0) != (i7 | 0) : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i2 >> 0] | 0;
  if ((i7 | 0) == (i3 | 0) ? (((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i8 + 104 | 0;
  i1 = i8;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i7 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  i1 = i1 - i8 | 0;
  i2 = i1 >> 2;
  if ((i1 | 0) > 92) i1 = -1; else {
   switch (i13 | 0) {
   case 10:
   case 8:
    {
     if ((i2 | 0) >= (i13 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 88) {
      if (i10) {
       i1 = -1;
       break L6;
      }
      if ((i9 - i11 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i9 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[47802 + i2 >> 0] | 0;
      HEAP32[i12 >> 2] = i9 + 1;
      HEAP8[i9 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[47802 + i2 >> 0] | 0;
   HEAP32[i12 >> 2] = i9 + 1;
   HEAP8[i9 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_E16do_parse_virtualERKS19_(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSA_INSA_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSA_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES17_EES18_EEE5parseIS16_EENS1_13parser_resultIS1A_T_E4typeERKS1D_(i3 + 4 | 0, i2) | 0;
 if ((i1 | 0) < 0) {
  i3 = -1;
  return i3 | 0;
 }
 i3 = __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_10end_parserEE5parseINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserESA_EENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SV_SW_SX_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISB_T_E4typeERKS19_(i3 + 24 | 0, i2) | 0;
 i3 = (i3 | 0) < 0 ? -1 : i3 + i1 | 0;
 return i3 | 0;
}

function _wcsrtombs(i3, i6, i1, i2) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 L1 : do if (!i3) {
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) i1 = 0; else {
   i1 = 0;
   do {
    if (i2 >>> 0 > 127) {
     i2 = _wcrtomb(i7, i2, 0) | 0;
     if ((i2 | 0) == -1) {
      i1 = -1;
      break L1;
     }
    } else i2 = 1;
    i1 = i2 + i1 | 0;
    i3 = i3 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
   } while ((i2 | 0) != 0);
  }
 } else {
  L9 : do if (i1 >>> 0 > 3) {
   i2 = i1;
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) break;
     i5 = _wcrtomb(i3, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (i2 >>> 0 <= 3) break L9;
   }
   HEAP8[i3 >> 0] = 0;
   HEAP32[i6 >> 2] = 0;
   i1 = i1 - i2 | 0;
   break L1;
  } else i2 = i1; while (0);
  if (i2) {
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) {
      i4 = 19;
      break;
     }
     i5 = _wcrtomb(i7, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     if (i2 >>> 0 < i5 >>> 0) {
      i4 = 22;
      break;
     }
     _wcrtomb(i3, HEAP32[i4 >> 2] | 0, 0) | 0;
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (!i2) break L1;
   }
   if ((i4 | 0) == 19) {
    HEAP8[i3 >> 0] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = i1 - i2 | 0;
    break;
   } else if ((i4 | 0) == 22) {
    i1 = i1 - i2 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function ___stdio_write(i14, i2, i1) {
 i14 = i14 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i11 = i15 + 16 | 0;
 i10 = i15;
 i3 = i15 + 32 | 0;
 i12 = i14 + 28 | 0;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i3 >> 2] = i4;
 i13 = i14 + 20 | 0;
 i4 = (HEAP32[i13 >> 2] | 0) - i4 | 0;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = i2;
 HEAP32[i3 + 12 >> 2] = i1;
 i8 = i14 + 60 | 0;
 i9 = i14 + 44 | 0;
 i2 = 2;
 i4 = i4 + i1 | 0;
 while (1) {
  if (!(HEAP32[12845] | 0)) {
   HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i11 + 4 >> 2] = i3;
   HEAP32[i11 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i11 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(218, i14 | 0);
   HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i10 + 4 >> 2] = i3;
   HEAP32[i10 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i10 | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
  }
  if ((i4 | 0) == (i6 | 0)) {
   i4 = 6;
   break;
  }
  if ((i6 | 0) < 0) {
   i4 = 8;
   break;
  }
  i4 = i4 - i6 | 0;
  i5 = HEAP32[i3 + 4 >> 2] | 0;
  if (i6 >>> 0 <= i5 >>> 0) if ((i2 | 0) == 2) {
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + i6;
   i7 = i5;
   i2 = 2;
  } else i7 = i5; else {
   i7 = HEAP32[i9 >> 2] | 0;
   HEAP32[i12 >> 2] = i7;
   HEAP32[i13 >> 2] = i7;
   i7 = HEAP32[i3 + 12 >> 2] | 0;
   i6 = i6 - i5 | 0;
   i3 = i3 + 8 | 0;
   i2 = i2 + -1 | 0;
  }
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i6;
  HEAP32[i3 + 4 >> 2] = i7 - i6;
 }
 if ((i4 | 0) == 6) {
  i11 = HEAP32[i9 >> 2] | 0;
  HEAP32[i14 + 16 >> 2] = i11 + (HEAP32[i14 + 48 >> 2] | 0);
  i14 = i11;
  HEAP32[i12 >> 2] = i14;
  HEAP32[i13 >> 2] = i14;
 } else if ((i4 | 0) == 8) {
  HEAP32[i14 + 16 >> 2] = 0;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i13 >> 2] = 0;
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 32;
  if ((i2 | 0) == 2) i1 = 0; else i1 = i1 - (HEAP32[i3 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i1, i7) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i7 + 12 | 0;
 i6 = HEAP32[i7 + 24 >> 2] | 0;
 i4 = i6 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) == (i1 | 0)) {
  i4 = i1;
  __ZdlPv(i4);
  __ZdlPv(i6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
  return;
 }
 i3 = i6 + 8 | 0;
 while (1) {
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
  __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
  __ZdlPv(i2);
  if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
 }
 __ZdlPv(i1);
 __ZdlPv(i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 return;
}

function __ZNSt3__16vectorIPN5boost13property_tree11json_parser12json_grammarINS2_11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_NS_4lessISB_EEEEE10definitionINS1_6spirit7classic7scannerINS_11__wrap_iterIPcEENSI_16scanner_policiesINSI_28skip_parser_iteration_policyINSI_11alternativeINSP_INSI_12space_parserENSI_13confix_parserINSI_6strlitIPKcEENSI_11kleene_starINSI_14anychar_parserEEENSP_INSI_10eol_parserENSI_10end_parserEEENSI_21unary_parser_categoryENSI_10non_nestedENSI_9is_lexemeEEEEENSR_ISV_SY_SV_S12_S13_S14_EEEENSI_16iteration_policyEEENSI_12match_policyENSI_13action_policyEEEEEEENS9_IS1G_EEE8__appendEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i7 = i8 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 i9 = i8 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 if (i3 - i1 >> 2 >>> 0 >= i2 >>> 0) {
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   HEAP32[i9 >> 2] = i1;
   i2 = i2 + -1 | 0;
  } while ((i2 | 0) != 0);
  return;
 }
 i5 = HEAP32[i8 >> 2] | 0;
 i4 = (i1 - i5 >> 2) + i2 | 0;
 if (i4 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
 i1 = i3 - i5 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  i3 = (HEAP32[i9 >> 2] | 0) - i5 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i6 = 9;
 } else {
  i1 = 1073741823;
  i3 = (HEAP32[i9 >> 2] | 0) - i5 >> 2;
  i6 = 9;
 }
 if ((i6 | 0) == 9) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i6 = i4 + (i1 << 2) | 0;
 i4 = i4 + (i5 << 2) | 0;
 i3 = i6;
 i1 = i6;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i1 + 4 | 0;
  i1 = i3;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 i2 = HEAP32[i8 >> 2] | 0;
 i5 = (HEAP32[i9 >> 2] | 0) - i2 | 0;
 i6 = i6 + (0 - (i5 >> 2) << 2) | 0;
 _memcpy(i6 | 0, i2 | 0, i5 | 0) | 0;
 HEAP32[i8 >> 2] = i6;
 HEAP32[i9 >> 2] = i1;
 HEAP32[i7 >> 2] = i4;
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function __ZN13MarchingCubes10eval_shapeERK17implicit_functionRKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i5, i4, i3) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, d22 = 0.0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i19 = i20;
 i15 = i5 + 4 | 0;
 i14 = HEAP32[i15 >> 2] | 0;
 i14 = Math_imul(Math_imul(i14, i14) | 0, i14) | 0;
 HEAP32[i19 + 4 >> 2] = 0;
 HEAP8[i19 + 8 >> 0] = 1;
 HEAP32[i19 + 20 >> 2] = 0;
 HEAP32[i19 + 12 >> 2] = i14;
 HEAP32[i19 + 32 >> 2] = i14;
 i18 = i19 + 16 | 0;
 HEAP32[i18 >> 2] = 1;
 i16 = i19 + 24 | 0;
 HEAP32[i16 >> 2] = 0;
 HEAP32[i19 + 28 >> 2] = 0;
 i1 = i14 << 2;
 i2 = __Znwj(i1) | 0;
 i17 = i19 + 40 | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i19 >> 2] = i2;
 HEAP32[i19 + 44 >> 2] = i14;
 if (i14 | 0) _memset(i2 | 0, 0, i1 | 0) | 0;
 FUNCTION_TABLE_viii[HEAP32[HEAP32[i4 >> 2] >> 2] & 31](i4, i3, i19);
 i11 = HEAP32[i15 >> 2] | 0;
 if ((i11 | 0) > 0) {
  i12 = i5 + 8 | 0;
  i13 = i5 + 68 | 0;
  i14 = i5 + 92 | 0;
  i1 = i5 + 84 | 0;
  i10 = 0;
  do {
   i2 = (HEAP32[i19 >> 2] | 0) + (HEAP32[i16 >> 2] << 2) | 0;
   i3 = HEAP32[i18 >> 2] | 0;
   i9 = 0;
   do {
    i4 = Math_imul(HEAP32[i15 >> 2] | 0, i9) | 0;
    i5 = Math_imul(HEAP32[i12 >> 2] | 0, i10) | 0;
    i6 = (HEAP32[i13 >> 2] | 0) + (HEAP32[i14 >> 2] << 2) | 0;
    i7 = HEAP32[i1 >> 2] | 0;
    i8 = 0;
    do {
     i21 = i4 + i8 + i5 | 0;
     d22 = +HEAPF32[i2 + ((Math_imul(i3, i21) | 0) << 2) >> 2];
     i21 = i6 + ((Math_imul(i7, i21) | 0) << 2) | 0;
     HEAPF32[i21 >> 2] = d22 + +HEAPF32[i21 >> 2];
     i8 = i8 + 1 | 0;
    } while ((i8 | 0) != (i11 | 0));
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) != (i11 | 0));
   i10 = i10 + 1 | 0;
  } while ((i10 | 0) != (i11 | 0));
 }
 i1 = HEAP32[i17 >> 2] | 0;
 if (!i1) {
  STACKTOP = i20;
  return;
 }
 __ZdlPv(i1);
 STACKTOP = i20;
 return;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSA_INSA_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSA_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES17_EES18_EEE5parseIS16_EENS1_13parser_resultIS1A_T_E4typeERKS1D_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i4 = i11 + 24 | 0;
 i5 = i11 + 12 | 0;
 i6 = i11;
 i8 = i9 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i2 = HEAP32[HEAP32[i10 >> 2] >> 2] | 0;
 do if (i2) {
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 31](i2, i9) | 0;
  if ((i1 | 0) < 0) {
   i1 = HEAP32[i8 >> 2] | 0;
   break;
  } else {
   i10 = i1;
   STACKTOP = i11;
   return i10 | 0;
  }
 } while (0);
 HEAP32[i1 >> 2] = i3;
 i1 = HEAP32[HEAP32[i10 + 4 >> 2] >> 2] | 0;
 if (i1 | 0 ? (i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 31](i1, i9) | 0, (i7 | 0) >= 0) : 0) {
  i10 = i7;
  STACKTOP = i11;
  return i10 | 0;
 }
 i11 = HEAP32[HEAP32[i8 >> 2] >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i6, i10 + 8 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5, i6);
 HEAP32[i4 >> 2] = 21124;
 HEAP32[i4 + 4 >> 2] = i11;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 8 | 0, i5);
 __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i4);
 return 0;
}

function __ZN5boost11multi_index6detail8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_13property_tree11basic_ptreeISD_SD_NS6_4lessISD_EEEEEENSB_ISK_EEEEEEEESL_ED2Ev(i10) {
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if ((HEAP8[i10 + 32 >> 0] | 0) == 0 ? (i6 = i10 + 20 | 0, HEAP32[i6 >> 2] | 0) : 0) {
  i7 = i10 + 16 | 0;
  i9 = 0;
  do {
   i8 = HEAP32[(HEAP32[i7 >> 2] | 0) + (i9 << 3) + 4 >> 2] | 0;
   i5 = HEAP32[i8 + 24 >> 2] | 0;
   i4 = i5 + 4 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
   i2 = HEAP32[i1 + 44 >> 2] | 0;
   i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
   if ((i2 | 0) != (i1 | 0)) {
    i3 = i5 + 8 | 0;
    while (1) {
     i1 = HEAP32[i2 + 44 >> 2] | 0;
     i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
     __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
     __ZdlPv(i2);
     if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
    }
   }
   __ZdlPv(i1);
   __ZdlPv(i5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8 + 12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
   __ZdlPv(HEAP32[(HEAP32[i7 >> 2] | 0) + (i9 << 3) + 4 >> 2] | 0);
   i9 = i9 + 1 | 0;
  } while (i9 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0);
 }
 if (!(HEAP32[i10 + 12 >> 2] | 0)) return;
 __ZdlPv(HEAP32[i10 + 16 >> 2] | 0);
 return;
}

function __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_valueIfNS0_17stream_translatorIcS5_S7_fEEEENS_9enable_ifINS0_6detail13is_translatorIT0_EET_E4typeESI_(i6, i7) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i8 + 56 | 0;
 i9 = i8 + 48 | 0;
 i1 = i8 + 36 | 0;
 i2 = i8 + 24 | 0;
 i3 = i8 + 12 | 0;
 i4 = i8;
 __ZNSt3__16localeC2ERKS0_(i9, i7);
 __ZN5boost13property_tree17stream_translatorIcNSt3__111char_traitsIcEENS2_9allocatorIcEEfE9get_valueERKNS2_12basic_stringIcS4_S6_EE(i5, i9, i6);
 __ZNSt3__16localeD2Ev(i9);
 if (!(HEAP8[i5 >> 0] | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 42806, 28);
  i9 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i4, HEAP32[619] | 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  i9 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i3, 42835) | 0;
  HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i1, i2);
  HEAP32[i1 >> 2] = 2504;
  i9 = __Znwj(16) | 0;
  HEAP32[i9 >> 2] = 21728;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i9 + 4 | 0, i6);
  HEAP32[i1 + 8 >> 2] = i9;
  __ZN5boost16exception_detail16throw_exception_INS_13property_tree14ptree_bad_dataEEEvRKT_PKcS8_i(i1, 42844, 43359, 672);
 } else {
  STACKTOP = i8;
  return +(+HEAPF32[i5 + 4 >> 2]);
 }
 return +(0.0);
}

function __ZN5boost11multi_index6detail8copy_mapINS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS_13property_tree11basic_ptreeISD_SD_NS6_4lessISD_EEEEEENSB_ISK_EEEEEEEESL_E5cloneEPSO_(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3 + 16 | 0;
 i8 = HEAP32[i2 >> 2] | 0;
 i5 = i3 + 20 | 0;
 i7 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 + (i7 << 3) >> 2] = i1;
 i6 = __Znwj(48) | 0;
 HEAP32[i8 + (i7 << 3) + 4 >> 2] = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i6, i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i6 + 12 | 0, i1 + 12 | 0);
 i7 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i7, HEAP32[i1 + 24 >> 2] | 0);
 HEAP32[i6 + 24 >> 2] = i7;
 i1 = (HEAP32[i5 >> 2] | 0) + 1 | 0;
 HEAP32[i5 >> 2] = i1;
 if ((i1 | 0) != (HEAP32[i3 + 4 >> 2] | 0)) {
  STACKTOP = i4;
  return;
 }
 i8 = HEAP32[i2 >> 2] | 0;
 __ZNSt3__16__sortIRNS_6__lessIN5boost11multi_index6detail14copy_map_entryINS4_20sequenced_index_nodeINS4_18ordered_index_nodeINS4_15index_node_baseINS_4pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_13property_tree11basic_ptreeISF_SF_NS_4lessISF_EEEEEENSD_ISM_EEEEEEEEEESR_EEPSR_EEvT0_SV_T_(i8, i8 + (i1 << 3) | 0, i4);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50760] | 0) == 0 ? ___cxa_guard_acquire(50760) | 0 : 0) {
  if ((HEAP8[50768] | 0) == 0 ? ___cxa_guard_acquire(50768) | 0 : 0) {
   i1 = 53864;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 54032);
   ___cxa_guard_release(50768);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53864, 26744) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53876, 26772) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53888, 26800) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53900, 26832) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53912, 26872) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53924, 26908) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53936, 26936) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53948, 26972) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53960, 26988) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53972, 27004) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53984, 27020) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(53996, 27036) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54008, 27052) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54020, 27068) | 0;
  HEAP32[13508] = 53864;
  ___cxa_guard_release(50760);
 }
 return HEAP32[13508] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50680] | 0) == 0 ? ___cxa_guard_acquire(50680) | 0 : 0) {
  if ((HEAP8[50688] | 0) == 0 ? ___cxa_guard_acquire(50688) | 0 : 0) {
   i1 = 53052;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 53220);
   ___cxa_guard_release(50688);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53052, 48324) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53064, 48331) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53076, 48338) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53088, 48346) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53100, 48356) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53112, 48365) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53124, 48372) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53136, 48381) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53148, 48385) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53160, 48389) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53172, 48393) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53184, 48397) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53196, 48401) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53208, 48405) | 0;
  HEAP32[13305] = 53052;
  ___cxa_guard_release(50680);
 }
 return HEAP32[13305] | 0;
}

function __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEED2Ev(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[i6 + 64 >> 2] | 0;
 i2 = i1;
 if (i1 | 0) {
  i3 = i6 + 68 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 i5 = HEAP32[i6 + 60 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 + 44 >> 2] | 0;
 i2 = (i2 | 0) == 0 ? 0 : i2 + -40 | 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + 8 | 0;
  while (1) {
   i1 = HEAP32[i2 + 44 >> 2] | 0;
   i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
   __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE12delete_node_EPNS1_15index_node_baseISH_SX_EE(i3, i2);
   __ZdlPv(i2);
   if ((i1 | 0) == (HEAP32[i4 >> 2] | 0)) break; else i2 = i1;
  }
 }
 __ZdlPv(i1);
 __ZdlPv(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6 + 48 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6 + 36 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6 + 24 | 0);
 __ZN5boost6spirit7classic7grammarINS_13property_tree11json_parser12json_grammarINS3_11basic_ptreeINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESD_NS7_4lessISD_EEEEEENS1_14parser_contextINS1_5nil_tEEEED2Ev(i6);
 return;
}

function __ZN13MarchingCubesD2Ev(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = HEAP16[i6 >> 1] | 0;
 i1 = (i7 & 65535) >>> 8 & 255;
 if ((i7 & 255) << 24 >> 24 != 0 ? (i2 = i6 + 468 | 0, i3 = HEAP32[i2 >> 2] | 0, (i3 | 0) != 0) : 0) {
  i1 = HEAP32[i3 + 40 >> 2] | 0;
  if (i1 | 0) __ZdlPv(i1);
  __ZdlPv(i3);
  HEAP32[i2 >> 2] = 0;
  i1 = HEAP8[i6 + 1 >> 0] | 0;
 }
 if (i1 << 24 >> 24 ? (i4 = i6 + 464 | 0, i5 = HEAP32[i4 >> 2] | 0, i5 | 0) : 0) {
  i1 = HEAP32[i5 + 40 >> 2] | 0;
  if (i1 | 0) __ZdlPv(i1);
  __ZdlPv(i5);
  HEAP32[i4 >> 2] = 0;
 }
 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i6 + 516 | 0, HEAP32[i6 + 520 >> 2] | 0);
 i1 = HEAP32[i6 + 504 >> 2] | 0;
 i2 = i1;
 if (i1 | 0) {
  i3 = i6 + 508 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i6 + 492 >> 2] | 0;
 i2 = i1;
 if (i1 | 0) {
  i3 = i6 + 496 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i6 + 480 >> 2] | 0;
 i2 = i1;
 if (i1 | 0) {
  i3 = i6 + 484 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i6 + 456 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 408 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 360 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 304 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 256 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 208 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 156 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 i1 = HEAP32[i6 + 108 >> 2] | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN5boost13property_tree6detail21prepare_bad_path_whatINS0_11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS0_13id_translatorISA_EEEEEESA_RKSA_RKT_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i4 + 24 | 0;
 i5 = i4 + 12 | 0;
 i6 = i4;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i9 = (i8 & 1) == 0;
 i8 = i9 ? (i8 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj(i5, i9 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, i8, i8 + 2 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i5, 42432, 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i6, i2);
 i3 = HEAP8[i6 >> 0] | 0;
 i2 = (i3 & 1) == 0;
 i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i5, i2 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0, i2 ? (i3 & 255) >>> 1 : HEAP32[i6 + 4 >> 2] | 0) | 0;
 HEAP32[i7 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i7 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i7 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i7, 42435) | 0;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(i5, i10, i4, i3, i6) {
 i5 = i5 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i9 = i11 + 8 | 0;
 i1 = i11 + 4 | 0;
 i2 = i11;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  i8 = HEAP32[(HEAP32[i5 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i8 & 31](i5, i9, i4, i3, i6 & 1) | 0;
 } else {
  i8 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
  HEAP32[i2 >> 2] = i8;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 52992) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i8) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i6) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 63](i9, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 63](i9, i1);
  i4 = HEAP8[i9 >> 0] | 0;
  i5 = i9 + 1 | 0;
  i6 = i9 + 8 | 0;
  i8 = HEAP32[i6 >> 2] | 0;
  i7 = i9 + 4 | 0;
  i1 = i4;
  i2 = i8;
  i8 = (i4 & 1) == 0 ? i5 : i8;
  while (1) {
   i4 = (i1 & 1) == 0;
   if ((i8 | 0) == ((i4 ? i5 : i2) + (i4 ? (i1 & 255) >>> 1 : HEAP32[i7 >> 2] | 0) | 0)) break;
   i1 = HEAP8[i8 >> 0] | 0;
   i2 = HEAP32[i10 >> 2] | 0;
   do if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) != (HEAP32[i2 + 28 >> 2] | 0)) {
     HEAP32[i3 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i1;
     break;
    }
    if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] & 31](i2, i1 & 255) | 0) == -1) HEAP32[i10 >> 2] = 0;
   } while (0);
   i1 = HEAP8[i9 >> 0] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = HEAP32[i10 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 }
 STACKTOP = i11;
 return i1 | 0;
}

function _mbsnrtowcs(i2, i12, i3, i1, i9) {
 i2 = i2 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 i8 = i13 + 8 | 0;
 i11 = i13;
 i7 = HEAP32[i12 >> 2] | 0;
 HEAP32[i11 >> 2] = i7;
 i10 = (i2 | 0) != 0;
 i1 = i10 ? i1 : 256;
 i2 = i10 ? i2 : i8;
 i4 = i7;
 L1 : do if ((i1 | 0) != 0 & (i7 | 0) != 0) {
  i6 = i1;
  i7 = i4;
  i1 = 0;
  while (1) {
   i4 = i3 >>> 2;
   i5 = i4 >>> 0 >= i6 >>> 0;
   if (!(i3 >>> 0 > 131 | i5)) {
    i4 = i7;
    break L1;
   }
   i4 = i5 ? i6 : i4;
   i3 = i3 - i4 | 0;
   i4 = _mbsrtowcs(i2, i11, i4, i9) | 0;
   if ((i4 | 0) == -1) {
    i1 = i3;
    break;
   }
   i14 = (i2 | 0) == (i8 | 0);
   i7 = i14 ? 0 : i4;
   i5 = i6 - i7 | 0;
   i2 = i14 ? i2 : i2 + (i4 << 2) | 0;
   i1 = i4 + i1 | 0;
   i4 = HEAP32[i11 >> 2] | 0;
   if ((i6 | 0) != (i7 | 0) & (i4 | 0) != 0) {
    i6 = i5;
    i7 = i4;
   } else {
    i6 = i5;
    break L1;
   }
  }
  i3 = i1;
  i6 = 0;
  i4 = HEAP32[i11 >> 2] | 0;
  i1 = -1;
 } else {
  i6 = i1;
  i1 = 0;
 } while (0);
 L8 : do if ((i4 | 0) != 0 ? (i6 | 0) != 0 & (i3 | 0) != 0 : 0) {
  i5 = i4;
  i4 = i2;
  while (1) {
   i2 = _mbrtowc(i4, i5, i3, i9) | 0;
   if ((i2 + 2 | 0) >>> 0 < 3) break;
   i5 = (HEAP32[i11 >> 2] | 0) + i2 | 0;
   HEAP32[i11 >> 2] = i5;
   i6 = i6 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i6 | 0) != 0 & (i3 | 0) != (i2 | 0))) break L8; else {
    i3 = i3 - i2 | 0;
    i4 = i4 + 4 | 0;
   }
  }
  switch (i2 | 0) {
  case -1:
   {
    i1 = -1;
    break L8;
   }
  case 0:
   {
    HEAP32[i11 >> 2] = 0;
    break L8;
   }
  default:
   {
    HEAP32[i9 >> 2] = 0;
    break L8;
   }
  }
 } while (0);
 if (i10) HEAP32[i12 >> 2] = HEAP32[i11 >> 2];
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(i5, i9, i4, i3, i6) {
 i5 = i5 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i8 = i10 + 8 | 0;
 i1 = i10 + 4 | 0;
 i2 = i10;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i5 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i5, i8, i4, i3, i6 & 1) | 0;
 } else {
  i7 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
  HEAP32[i2 >> 2] = i7;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 53020) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i7) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i6) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 63](i8, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 63](i8, i1);
  i4 = HEAP8[i8 >> 0] | 0;
  i5 = i8 + 4 | 0;
  i6 = i8 + 8 | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  i1 = i4;
  i2 = i7;
  i7 = (i4 & 1) == 0 ? i5 : i7;
  while (1) {
   i4 = (i1 & 1) == 0;
   if ((i7 | 0) == ((i4 ? i5 : i2) + ((i4 ? (i1 & 255) >>> 1 : HEAP32[i5 >> 2] | 0) << 2) | 0)) break;
   i1 = HEAP32[i7 >> 2] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 28 >> 2] | 0)) i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] & 31](i2, i1) | 0; else {
     HEAP32[i3 >> 2] = i4 + 4;
     HEAP32[i4 >> 2] = i1;
    }
    if ((i1 | 0) == -1) HEAP32[i9 >> 2] = 0;
   }
   i1 = HEAP8[i8 >> 0] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   i7 = i7 + 4 | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE10definitionINS_6spirit7classic7scannerINS4_11__wrap_iterIPcEENSH_16scanner_policiesINSH_28skip_parser_iteration_policyINSH_11alternativeINSO_INSH_12space_parserENSH_13confix_parserINSH_6strlitIPKcEENSH_11kleene_starINSH_14anychar_parserEEENSO_INSH_10eol_parserENSH_10end_parserEEENSH_21unary_parser_categoryENSH_10non_nestedENSH_9is_lexemeEEEEENSQ_ISU_SX_SU_S11_S12_S13_EEEENSH_16iteration_policyEEENSH_12match_policyENSH_13action_policyEEEEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 36 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 32 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 28 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 20 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 12 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = __Znwj(28) | 0;
 HEAP32[i2 >> 2] = 21344;
 i5 = i2 + 4 | 0;
 i4 = __Znwj(32) | 0;
 i3 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i4 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP32[i4 + 16 >> 2] = HEAP32[i3 + 16 >> 2];
 HEAP32[i4 + 20 >> 2] = HEAP32[i3 + 20 >> 2];
 HEAP32[i4 + 24 >> 2] = HEAP32[i3 + 24 >> 2];
 HEAP32[i4 + 28 >> 2] = HEAP32[i3 + 28 >> 2];
 HEAP32[i5 >> 2] = i4;
 i3 = i2 + 8 | 0;
 HEAP32[i3 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i5, i4, i3);
 HEAP32[i2 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 i3 = i2 + 16 | 0;
 i1 = i1 + 16 | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 return i2 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_E16do_parse_virtualERKS1R_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_10differenceINS4_INS1_14anychar_parserENS1_6strlitIPKcEEEES9_EENS_13property_tree11json_parser7contextINSC_11basic_ptreeINSt3__112basic_stringIcNSG_11char_traitsIcEENSG_9allocatorIcEEEESM_NSG_4lessISM_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISM_NS1_4ruleINS1_7scannerINSG_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserIS9_NS1_11kleene_starIS5_EENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS9_S18_S9_S1C_S1D_S1E_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1Q_EEEEEEE5parseIS1P_EENS1_13parser_resultIS1U_T_E4typeERKS1X_(i2 + 4 | 0, i1) | 0;
}

function __ZN5boost11multi_index6detail18ordered_index_findINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_13property_tree11basic_ptreeISC_SC_NS5_4lessISC_EEEEEENSA_ISJ_EEEEEENS0_6memberISJ_SD_XadL_ZNSJ_5firstEEEEESC_SH_EEPT_SQ_SQ_RKT0_RKT1_RKT2_N4mpl_5bool_ILb0EEE(i2, i6, i4, i5, i3, i1) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i7 = 0, i8 = 0;
 if (!i2) return i6 | 0;
 i4 = HEAP8[i5 >> 0] | 0;
 i3 = (i4 & 1) == 0;
 i4 = i3 ? (i4 & 255) >>> 1 : HEAP32[i5 + 4 >> 2] | 0;
 i3 = i3 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0;
 i1 = i6;
 L4 : do {
  while (1) {
   i8 = HEAP8[i2 >> 0] | 0;
   i7 = (i8 & 1) == 0;
   i8 = i7 ? (i8 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0;
   i7 = _memcmp(i7 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, i3, i4 >>> 0 < i8 >>> 0 ? i4 : i8) | 0;
   if ((((i7 | 0) == 0 ? (i8 >>> 0 < i4 >>> 0 ? -2147483648 : 0) : i7) | 0) >= 0) {
    i1 = i2;
    break;
   }
   i8 = HEAP32[i2 + 36 >> 2] | 0;
   i2 = (i8 | 0) == 0 ? 0 : i8 + -28 | 0;
   if (!i2) break L4;
  }
  i2 = HEAP32[i1 + 32 >> 2] | 0;
  i2 = (i2 | 0) == 0 ? 0 : i2 + -28 | 0;
 } while ((i2 | 0) != 0);
 if ((i1 | 0) == (i6 | 0)) return i6 | 0; else {
  i4 = HEAP8[i5 >> 0] | 0;
  i3 = (i4 & 1) == 0;
  i4 = i3 ? (i4 & 255) >>> 1 : HEAP32[i5 + 4 >> 2] | 0;
  i7 = HEAP8[i1 >> 0] | 0;
  i8 = (i7 & 1) == 0;
  i7 = i8 ? (i7 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0;
  i8 = _memcmp(i3 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0, i8 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i7 >>> 0 < i4 >>> 0 ? i7 : i4) | 0;
  return ((((i8 | 0) == 0 ? (i4 >>> 0 < i7 >>> 0 ? -2147483648 : 0) : i8) | 0) < 0 ? i6 : i1) | 0;
 }
 return 0;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 if (i1 & 16 | 0) {
  i1 = i4 + 44 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i3 = HEAP32[i4 + 24 >> 2] | 0;
  if (i2 >>> 0 < i3 >>> 0) HEAP32[i1 >> 2] = i3; else i3 = i2;
  i2 = HEAP32[i4 + 20 >> 2] | 0;
  i5 = i3 - i2 | 0;
  if (i5 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i6);
  if (i5 >>> 0 < 11) {
   HEAP8[i6 >> 0] = i5 << 1;
   i1 = i6 + 1 | 0;
  } else {
   i4 = i5 + 16 & -16;
   i1 = __Znwj(i4) | 0;
   HEAP32[i6 + 8 >> 2] = i1;
   HEAP32[i6 >> 2] = i4 | 1;
   HEAP32[i6 + 4 >> 2] = i5;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i1;
   while (1) {
    HEAP8[i4 >> 0] = HEAP8[i2 >> 0] | 0;
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i3 | 0)) break; else i4 = i4 + 1 | 0;
   }
   i1 = i1 + i5 | 0;
  }
  HEAP8[i1 >> 0] = 0;
  return;
 }
 if (!(i1 & 8)) {
  HEAP32[i6 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  HEAP32[i6 + 8 >> 2] = 0;
  return;
 }
 i2 = HEAP32[i4 + 8 >> 2] | 0;
 i4 = HEAP32[i4 + 16 >> 2] | 0;
 i5 = i4 - i2 | 0;
 if (i5 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i6);
 if (i5 >>> 0 < 11) {
  HEAP8[i6 >> 0] = i5 << 1;
  i1 = i6 + 1 | 0;
 } else {
  i3 = i5 + 16 & -16;
  i1 = __Znwj(i3) | 0;
  HEAP32[i6 + 8 >> 2] = i1;
  HEAP32[i6 >> 2] = i3 | 1;
  HEAP32[i6 + 4 >> 2] = i5;
 }
 if ((i2 | 0) != (i4 | 0)) {
  i3 = i1;
  while (1) {
   HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
   i2 = i2 + 1 | 0;
   if ((i2 | 0) == (i4 | 0)) break; else i3 = i3 + 1 | 0;
  }
  i1 = i1 + i5 | 0;
 }
 HEAP8[i1 >> 0] = 0;
 return;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE16do_parse_virtualERKS1U_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNK5boost6spirit7classic11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS6_11basic_ptreeINSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_NSA_4lessISG_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS3_INS1_11uint_parserImLi16ELj4ELi4EEENSK_9a_unicodeEEEEEE5parseINS1_7scannerINSA_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS2_INS2_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS2_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS15_IS19_S1C_S19_S1G_S1H_S1I_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEEEENS1_13parser_resultISV_T_E4typeERKS1V_(i2 + 4 | 0, i1) | 0;
}

function __ZNSt3__12wsIcNS_11char_traitsIcEEEERNS_13basic_istreamIT_T0_EES7_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6 + 4 | 0;
 i1 = i6;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i4, i5, 1);
 if (!(HEAP8[i4 >> 0] | 0)) {
  STACKTOP = i6;
  return i5 | 0;
 }
 HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
 __ZNSt3__16localeD2Ev(i1);
 i4 = i4 + 8 | 0;
 while (1) {
  i1 = HEAP32[i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0;
   if ((i1 | 0) == -1) {
    i1 = 6;
    break;
   }
  } else i1 = HEAPU8[i2 >> 0] | 0;
  if ((i1 & 255) << 24 >> 24 <= -1) {
   i1 = 12;
   break;
  }
  if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
   i1 = 12;
   break;
  }
  i1 = HEAP32[i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   continue;
  }
 }
 if ((i1 | 0) == 6) {
  i4 = i5 + (HEAP32[(HEAP32[i5 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__18ios_base5clearEj(i4, HEAP32[i4 + 16 >> 2] | 2);
  STACKTOP = i6;
  return i5 | 0;
 } else if ((i1 | 0) == 12) {
  STACKTOP = i6;
  return i5 | 0;
 }
 return 0;
}

function __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9walk_pathERNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 13 | 0;
 i4 = i5;
 i6 = HEAP8[i3 >> 0] | 0;
 i7 = (i6 & 1) == 0;
 if ((HEAP32[i3 + 16 >> 2] | 0) == ((i7 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0) + (i7 ? (i6 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0) | 0)) {
  i7 = i2;
  STACKTOP = i5;
  return i7 | 0;
 }
 __ZN5boost13property_tree11string_pathINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_13id_translatorIS8_EEE6reduceEv(i4, i3);
 i6 = HEAP32[i2 + 12 >> 2] | 0;
 i7 = HEAP32[i6 + 4 >> 2] | 0;
 i2 = HEAP32[i7 + 28 >> 2] & -2;
 HEAP8[i1 >> 0] = HEAP8[i5 + 12 >> 0] | 0;
 i1 = __ZN5boost11multi_index6detail18ordered_index_findINS1_18ordered_index_nodeINS1_15index_node_baseINSt3__14pairIKNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_13property_tree11basic_ptreeISC_SC_NS5_4lessISC_EEEEEENSA_ISJ_EEEEEENS0_6memberISJ_SD_XadL_ZNSJ_5firstEEEEESC_SH_EEPT_SQ_SQ_RKT0_RKT1_RKT2_N4mpl_5bool_ILb0EEE((i2 | 0) == 0 ? 0 : i2 + -28 | 0, i7, i6 + 8 | 0, i4, i6 + 9 | 0, i1) | 0;
 if ((i1 | 0) == (i7 | 0)) i1 = 0; else i1 = __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9walk_pathERNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i1 + 12 | 0, i3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 i7 = i1;
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i8, i7, i2, i4) {
 i3 = i3 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 do if ((i3 | 0) == (HEAP32[i8 + 8 >> 2] | 0)) {
  if ((HEAP32[i8 + 4 >> 2] | 0) == (i7 | 0) ? (i1 = i8 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i2;
 } else {
  if ((i3 | 0) != (HEAP32[i8 >> 2] | 0)) {
   i6 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 3](i6, i8, i7, i2, i4);
   break;
  }
  if ((HEAP32[i8 + 16 >> 2] | 0) != (i7 | 0) ? (i6 = i8 + 20 | 0, (HEAP32[i6 >> 2] | 0) != (i7 | 0)) : 0) {
   HEAP32[i8 + 32 >> 2] = i2;
   i5 = i8 + 44 | 0;
   if ((HEAP32[i5 >> 2] | 0) == 4) break;
   i1 = i8 + 52 | 0;
   HEAP8[i1 >> 0] = 0;
   i2 = i8 + 53 | 0;
   HEAP8[i2 >> 0] = 0;
   i3 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 15](i3, i8, i7, i7, 1, i4);
   if (HEAP8[i2 >> 0] | 0) if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = 1;
    i2 = 13;
   } else i2 = 17; else {
    i1 = 0;
    i2 = 13;
   }
   do if ((i2 | 0) == 13) {
    HEAP32[i6 >> 2] = i7;
    i7 = i8 + 40 | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    if ((HEAP32[i8 + 36 >> 2] | 0) == 1 ? (HEAP32[i8 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i8 + 54 >> 0] = 1;
     if (i1) {
      i2 = 17;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 17; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 17) i1 = 3;
   HEAP32[i5 >> 2] = i1;
   break;
  }
  if ((i2 | 0) == 1) HEAP32[i8 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _wcsnrtombs(i3, i11, i4, i2, i1) {
 i3 = i3 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i7 = i10 + 8 | 0;
 i9 = i10;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i9 >> 2] = i6;
 i8 = (i3 | 0) != 0;
 i1 = i8 ? i2 : 256;
 i2 = i8 ? i3 : i7;
 i3 = i6;
 L1 : do if ((i1 | 0) != 0 & (i6 | 0) != 0) {
  i6 = i1;
  i5 = i3;
  i1 = 0;
  while (1) {
   i3 = i4 >>> 0 >= i6 >>> 0;
   if (!(i3 | i4 >>> 0 > 32)) {
    i3 = i5;
    break L1;
   }
   i3 = i3 ? i6 : i4;
   i4 = i4 - i3 | 0;
   i3 = _wcsrtombs(i2, i9, i3, 0) | 0;
   if ((i3 | 0) == -1) {
    i1 = i4;
    break;
   }
   i13 = (i2 | 0) == (i7 | 0);
   i12 = i13 ? 0 : i3;
   i5 = i6 - i12 | 0;
   i2 = i13 ? i2 : i2 + i3 | 0;
   i1 = i3 + i1 | 0;
   i3 = HEAP32[i9 >> 2] | 0;
   if ((i6 | 0) != (i12 | 0) & (i3 | 0) != 0) {
    i6 = i5;
    i5 = i3;
   } else {
    i6 = i5;
    break L1;
   }
  }
  i4 = i1;
  i6 = 0;
  i3 = HEAP32[i9 >> 2] | 0;
  i1 = -1;
 } else {
  i6 = i1;
  i1 = 0;
 } while (0);
 L8 : do if ((i3 | 0) != 0 ? (i6 | 0) != 0 & (i4 | 0) != 0 : 0) {
  i5 = i3;
  i3 = i2;
  while (1) {
   i2 = _wcrtomb(i3, HEAP32[i5 >> 2] | 0, 0) | 0;
   if ((i2 + 1 | 0) >>> 0 < 2) break;
   i5 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   HEAP32[i9 >> 2] = i5;
   i4 = i4 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i6 | 0) != (i2 | 0) & (i4 | 0) != 0)) break L8; else {
    i6 = i6 - i2 | 0;
    i3 = i3 + i2 | 0;
   }
  }
  if (!i2) HEAP32[i9 >> 2] = 0; else i1 = -1;
 } while (0);
 if (i8) HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN5boost6spirit7classic5chsetIcEC2IcEEPKT_(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i5 = __Znwj(32) | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = 0;
 HEAP32[i5 + 20 >> 2] = 0;
 HEAP32[i5 + 24 >> 2] = 0;
 HEAP32[i5 + 28 >> 2] = 0;
 HEAP32[i6 >> 2] = i5;
 i1 = i6 + 4 | 0;
 HEAP32[i1 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i6, i5, i1);
 i1 = HEAP8[i2 >> 0] | 0;
 if (!(i1 << 24 >> 24)) return;
 i2 = i2 + 1 | 0;
 while (1) {
  i3 = i2 + 1 | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if (i4 << 24 >> 24 == 45) {
   i4 = i2 + 2 | 0;
   i5 = HEAP8[i3 >> 0] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   if (!(i5 << 24 >> 24)) break;
   i3 = i5 << 24 >> 24;
   if (i1 << 24 >> 24 > i5 << 24 >> 24) {
    i2 = i4;
    i1 = i5;
    continue;
   }
   i1 = i1 << 24 >> 24;
   while (1) {
    i8 = i2 + ((i1 >>> 5 & 7) << 2) | 0;
    HEAP32[i8 >> 2] = 1 << (i1 & 31) | HEAP32[i8 >> 2];
    if ((i1 | 0) < (i3 | 0)) i1 = i1 + 1 | 0; else {
     i2 = i4;
     i1 = i5;
     break;
    }
   }
  } else {
   i1 = i1 & 255;
   i2 = (HEAP32[i6 >> 2] | 0) + (i1 >>> 5 << 2) | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1 << (i1 & 31);
   i2 = i3;
   i1 = i4;
  }
  if (!(i1 << 24 >> 24)) {
   i7 = 11;
   break;
  }
 }
 if ((i7 | 0) == 11) return;
 i7 = i1 & 255;
 i8 = i2 + (i7 >>> 5 << 2) | 0;
 HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 1 << (i7 & 31);
 i8 = i2 + 4 | 0;
 HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 8192;
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED0Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 HEAP32[i2 >> 2] = 21240;
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 if ((i1 | 0 ? (i4 = i1 + 4 | 0, i3 = HEAP32[i4 >> 2] | 0, HEAP32[i4 >> 2] = i3 - 1, (i3 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i3 = i1 + 8 | 0, i4 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i4 - 1, (i4 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if (!i1) {
  __ZdlPv(i2);
  return;
 }
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) {
  __ZdlPv(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) {
  __ZdlPv(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i7, i10, i1, i2, i6) {
 i11 = i11 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i12;
 i9 = HEAP32[i11 >> 2] | 0;
 if (!i9) {
  i11 = 0;
  STACKTOP = i12;
  return i11 | 0;
 }
 i13 = i7;
 i4 = i1 - i13 | 0;
 i5 = i2 + 12 | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i4 = (i3 | 0) > (i4 | 0) ? i3 - i4 | 0 : 0;
 i3 = i10;
 i2 = i3 - i13 | 0;
 if ((i2 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 31](i9, i7, i2) | 0) != (i2 | 0) : 0) {
  HEAP32[i11 >> 2] = 0;
  i13 = 0;
  STACKTOP = i12;
  return i13 | 0;
 }
 do if ((i4 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i8, i4, i6);
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 31](i9, (HEAP8[i8 >> 0] & 1) == 0 ? i8 + 1 | 0 : HEAP32[i8 + 8 >> 2] | 0, i4) | 0) == (i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
   break;
  }
  HEAP32[i11 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
  i13 = 0;
  STACKTOP = i12;
  return i13 | 0;
 } while (0);
 i1 = i1 - i3 | 0;
 if ((i1 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i9 >> 2] | 0) + 48 >> 2] & 31](i9, i10, i1) | 0) != (i1 | 0) : 0) {
  HEAP32[i11 >> 2] = 0;
  i13 = 0;
  STACKTOP = i12;
  return i13 | 0;
 }
 HEAP32[i5 >> 2] = 0;
 i13 = i9;
 STACKTOP = i12;
 return i13 | 0;
}

function __ZN5boost21const_multi_array_refIfLj2EPfE20init_multi_array_refIPKiEEvT_(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i8 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i6 >> 2] = i2;
 i7 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i8 + 20 >> 2] = i7;
 HEAP32[i8 + 48 >> 2] = Math_imul(i7, i2) | 0;
 i2 = i8 + 24 | 0;
 i7 = i8 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 HEAP32[i8 + 24 + (i4 << 2) >> 2] = HEAP8[i8 + 12 + i4 >> 0] | 0 ? 1 : -1;
 i4 = HEAP32[i8 + 8 >> 2] | 0;
 HEAP32[i8 + 24 + (i4 << 2) >> 2] = Math_imul(HEAP8[i8 + 12 + i4 >> 0] | 0 ? 1 : -1, HEAP32[i8 + 16 + (HEAP32[i7 >> 2] << 2) >> 2] | 0) | 0;
 i4 = HEAP8[i8 + 12 >> 0] | 0;
 i7 = HEAP8[i8 + 13 >> 0] | 0;
 i5 = i4 << 24 >> 24 != 0 & i7 << 24 >> 24 != 0;
 if (!i5) {
  if (!(i4 << 24 >> 24)) i1 = Math_imul((HEAP32[i6 >> 2] | 0) + -1 | 0, 0 - (HEAP32[i2 >> 2] | 0) | 0) | 0; else i1 = 0;
  if (!(i7 << 24 >> 24)) i1 = i1 - (Math_imul((HEAP32[i8 + 20 >> 2] | 0) + -1 | 0, HEAP32[i8 + 28 >> 2] | 0) | 0) | 0;
 } else i1 = 0;
 i2 = HEAP32[i2 >> 2] | 0;
 i3 = HEAP32[i8 + 28 >> 2] | 0;
 HEAP32[i8 + 40 >> 2] = i1 - ((Math_imul(HEAP32[i8 + 36 >> 2] | 0, i3) | 0) + (Math_imul(HEAP32[i8 + 32 >> 2] | 0, i2) | 0));
 if (i5) {
  i7 = 0;
  i8 = i8 + 44 | 0;
  HEAP32[i8 >> 2] = i7;
  return;
 }
 if (!(i4 << 24 >> 24)) i1 = Math_imul((HEAP32[i6 >> 2] | 0) + -1 | 0, 0 - i2 | 0) | 0; else i1 = 0;
 if (i7 << 24 >> 24) {
  i7 = i1;
  i8 = i8 + 44 | 0;
  HEAP32[i8 >> 2] = i7;
  return;
 }
 i7 = i1 - (Math_imul((HEAP32[i8 + 20 >> 2] | 0) + -1 | 0, i3) | 0) | 0;
 i8 = i8 + 44 | 0;
 HEAP32[i8 >> 2] = i7;
 return;
}

function __Z11getMatrix12PfRKN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_NS3_4lessIS9_EEEE(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, d9 = 0.0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 20 | 0;
 i2 = i7;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 30186, 6);
 HEAP8[i2 + 12 >> 0] = 46;
 HEAP32[i2 + 16 >> 2] = (HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0;
 i3 = __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i1, i2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 i3 = HEAP32[(HEAP32[i3 + 12 >> 2] | 0) + 4 >> 2] | 0;
 i1 = HEAP32[i3 + 44 >> 2] | 0;
 i1 = (i1 | 0) == 0 ? 0 : i1 + -40 | 0;
 if ((i1 | 0) == (i3 | 0)) {
  STACKTOP = i7;
  return;
 }
 i2 = 0;
 while (1) {
  __ZNSt3__16localeC2Ev(i5);
  __ZNSt3__16localeC2ERKS0_(i4, i5);
  d9 = +__ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_valueIfNS0_17stream_translatorIcS5_S7_fEEEENS_9enable_ifINS0_6detail13is_translatorIT0_EET_E4typeESI_(i1 + 12 | 0, i4);
  __ZNSt3__16localeD2Ev(i4);
  __ZNSt3__16localeD2Ev(i5);
  HEAPF32[i6 + (i2 << 2) >> 2] = d9;
  i8 = HEAP32[i1 + 44 >> 2] | 0;
  i1 = (i8 | 0) == 0 ? 0 : i8 + -40 | 0;
  if ((i1 | 0) == (i3 | 0)) break; else i2 = i2 + 1 | 0;
 }
 STACKTOP = i7;
 return;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = __Znwj(48) | 0;
 HEAP32[i2 >> 2] = 21144;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 + 4 >> 2] | 0;
 i5 = i2 + 4 | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i5 + 4 >> 2] = i4;
 i5 = i1 + 12 | 0;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i3 = i2 + 12 | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i4;
 i3 = i1 + 20 | 0;
 i4 = HEAP32[i3 + 4 >> 2] | 0;
 i5 = i2 + 20 | 0;
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i5 + 4 >> 2] = i4;
 i5 = i1 + 28 | 0;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i3 = i2 + 28 | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i4;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 36 | 0, i1 + 36 | 0);
 return i2 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i8 = i6;
 i12 = i6 + 116 | 0;
 i14 = i6 + 104 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[48045] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[48046] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[48047] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[48048] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[48049] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[48050] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 48051, 0, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i8 = i6;
 i12 = i6 + 116 | 0;
 i14 = i6 + 104 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[48045] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[48046] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[48047] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[48048] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[48049] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[48050] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 48051, 1, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i8 = i6;
 i12 = i6 + 56 | 0;
 i14 = i6 + 44 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[48045] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[48046] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[48047] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[48048] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[48049] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[48050] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 48051, 0, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i8 = i6;
 i12 = i6 + 56 | 0;
 i14 = i6 + 44 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[48045] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[48046] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[48047] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[48048] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[48049] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[48050] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 48051, 1, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function _get_v(i4, i6) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  STACKTOP = i7;
  return;
 }
 i3 = HEAP32[12833] | 0;
 i2 = HEAP32[i3 + 492 >> 2] | 0;
 i3 = HEAP32[i3 + 496 >> 2] | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  i1 = 0;
  do {
   HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i2 >> 2];
   HEAP32[i4 + (i1 + 1 << 2) >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i4 + (i1 + 2 << 2) >> 2] = HEAP32[i2 + 8 >> 2];
   i1 = i1 + 3 | 0;
   i2 = i2 + 12 | 0;
  } while (i2 >>> 0 < i3 >>> 0);
 } else i1 = 0;
 if ((i6 * 3 | 0) == (i1 | 0)) {
  STACKTOP = i7;
  return;
 }
 i6 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30478, 18) | 0, +(i1 | 0) / 3.0) | 0, 30497, 1) | 0, i6) | 0;
 HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
 i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
 __ZNSt3__16localeD2Ev(i5);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i4) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
 STACKTOP = i7;
 return;
}

function _get_f(i4, i6) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  STACKTOP = i7;
  return;
 }
 i3 = HEAP32[12833] | 0;
 i2 = HEAP32[i3 + 504 >> 2] | 0;
 i3 = HEAP32[i3 + 508 >> 2] | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  i1 = 0;
  do {
   HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i2 >> 2];
   HEAP32[i4 + (i1 + 1 << 2) >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i4 + (i1 + 2 << 2) >> 2] = HEAP32[i2 + 8 >> 2];
   i1 = i1 + 3 | 0;
   i2 = i2 + 12 | 0;
  } while (i2 >>> 0 < i3 >>> 0);
 } else i1 = 0;
 if ((i6 * 3 | 0) == (i1 | 0)) {
  STACKTOP = i7;
  return;
 }
 i6 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30478, 18) | 0, +(i1 | 0) / 3.0) | 0, 30497, 1) | 0, i6) | 0;
 HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
 i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
 __ZNSt3__16localeD2Ev(i5);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i6, i4) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i6) | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i8, i10, i1) {
 i8 = i8 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i11 + 12 | 0;
 i9 = i11;
 i5 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i8);
 if (!(HEAP8[i9 >> 0] | 0)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
  STACKTOP = i11;
  return i8 | 0;
 }
 i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i7 + 24 >> 2];
 i6 = HEAP32[i7 + 4 >> 2] | 0;
 i3 = i10 + i1 | 0;
 i2 = i7 + 76 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) == -1) {
  HEAP32[i4 >> 2] = __ZNKSt3__18ios_base6getlocEv(i7) | 0;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i4, 52980) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
  __ZNSt3__16localeD2Ev(i4);
  i1 = i1 << 24 >> 24;
  HEAP32[i2 >> 2] = i1;
 }
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 if (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i4, i10, (i6 & 176 | 0) == 32 ? i3 : i10, i3, i7, i1 & 255) | 0) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
  STACKTOP = i11;
  return i8 | 0;
 }
 i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__18ios_base5clearEj(i10, HEAP32[i10 + 16 >> 2] | 5);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i8 | 0;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i8, i10, i2, i3, i7) {
 i11 = i11 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i12;
 i1 = HEAP32[i11 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i8;
  i5 = i2 - i13 >> 2;
  i6 = i3 + 12 | 0;
  i3 = HEAP32[i6 >> 2] | 0;
  i5 = (i3 | 0) > (i5 | 0) ? i3 - i5 | 0 : 0;
  i3 = i10;
  i13 = i3 - i13 | 0;
  i4 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i8, i4) | 0) != (i4 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i5 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i9, i5, i7);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, (HEAP8[i9 >> 0] & 1) == 0 ? i9 + 4 | 0 : HEAP32[i9 + 8 >> 2] | 0, i5) | 0) == (i5 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    break;
   } else {
    HEAP32[i11 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i13 = i2 - i3 | 0;
  i2 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i10, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i6 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i13, i12, i11, i14, i15) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i12 = i12 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 if ((i1 | 0) == (HEAP32[i13 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i13, i12, i11, i14); else {
  i7 = i13 + 52 | 0;
  i10 = HEAP16[i7 >> 1] | 0;
  i8 = i10 & 255;
  i9 = i13 + 53 | 0;
  i10 = (i10 & 65535) >>> 8 & 255;
  i6 = HEAP32[i1 + 12 >> 2] | 0;
  i3 = i1 + 16 + (i6 << 3) | 0;
  HEAP8[i7 >> 0] = 0;
  HEAP8[i9 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i13, i12, i11, i14, i15);
  L4 : do if ((i6 | 0) > 1) {
   i4 = i13 + 24 | 0;
   i5 = i1 + 8 | 0;
   i6 = i13 + 54 | 0;
   i2 = i1 + 24 | 0;
   do {
    if (HEAP8[i6 >> 0] | 0) break L4;
    i1 = HEAP16[i7 >> 1] | 0;
    if (!((i1 & 255) << 24 >> 24)) {
     if ((i1 & 65535) >= 256 ? (HEAP32[i5 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i4 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i5 >> 2] & 2)) break L4;
    }
    HEAP8[i7 >> 0] = 0;
    HEAP8[i9 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i2, i13, i12, i11, i14, i15);
    i2 = i2 + 8 | 0;
   } while (i2 >>> 0 < i3 >>> 0);
  } while (0);
  HEAP8[i7 >> 0] = i8;
  HEAP8[i9 >> 0] = i10;
 }
 return;
}

function ___dynamic_cast(i2, i3, i12, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i13 = i14;
 i11 = HEAP32[i2 >> 2] | 0;
 i10 = i2 + (HEAP32[i11 + -8 >> 2] | 0) | 0;
 i11 = HEAP32[i11 + -4 >> 2] | 0;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i13 + 4 >> 2] = i2;
 HEAP32[i13 + 8 >> 2] = i3;
 HEAP32[i13 + 12 >> 2] = i1;
 i7 = i13 + 16 | 0;
 i1 = i13 + 20 | 0;
 i2 = i13 + 24 | 0;
 i3 = i13 + 28 | 0;
 i4 = i13 + 32 | 0;
 i5 = i13 + 40 | 0;
 i6 = (i11 | 0) == (i12 | 0);
 i8 = i7;
 i9 = i8 + 36 | 0;
 do {
  HEAP32[i8 >> 2] = 0;
  i8 = i8 + 4 | 0;
 } while ((i8 | 0) < (i9 | 0));
 HEAP16[i7 + 36 >> 1] = 0;
 HEAP8[i7 + 38 >> 0] = 0;
 L1 : do if (i6) {
  HEAP32[i13 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 15](i12, i13, i10, i10, 1, 0);
  i1 = (HEAP32[i2 >> 2] | 0) == 1 ? i10 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 24 >> 2] & 3](i11, i13, i10, 1, 0);
  switch (HEAP32[i13 + 36 >> 2] | 0) {
  case 0:
   {
    i1 = (HEAP32[i5 >> 2] | 0) == 1 & (HEAP32[i3 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1 ? HEAP32[i1 >> 2] | 0 : 0;
    break L1;
   }
  case 1:
   break;
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  if ((HEAP32[i2 >> 2] | 0) != 1 ? !((HEAP32[i5 >> 2] | 0) == 0 & (HEAP32[i3 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1) : 0) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSI_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSI_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSK_ISO_SR_SO_SV_SW_SX_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEE5parseIS18_EENS1_13parser_resultIS1B_T_E4typeERKS1E_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = i8 + 24 | 0;
 i2 = i8 + 12 | 0;
 i3 = i8;
 i4 = HEAP32[HEAP32[i7 >> 2] >> 2] | 0;
 if (i4 | 0 ? (i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 31](i4, i6) | 0, (i5 | 0) >= 0) : 0) {
  STACKTOP = i8;
  return i5 | 0;
 }
 i8 = HEAP32[HEAP32[i6 + 4 >> 2] >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i7 + 4 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 HEAP32[i1 >> 2] = 21124;
 HEAP32[i1 + 4 >> 2] = i8;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i2);
 __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i1);
 return 0;
}

function __ZN5boost11multi_index6detail10index_baseINSt3__14pairIKNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13property_tree11basic_ptreeISA_SA_NS3_4lessISA_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EEEENS0_18ordered_non_uniqueINSK_INSG_4subs7by_nameESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS0_6memberISH_SB_XadL_ZNSH_5firstEEEEESF_EESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EENS8_ISH_EEE7insert_ERKSH_RPNS1_20sequenced_index_nodeINS1_18ordered_index_nodeINS1_15index_node_baseISH_SX_EEEEEENS1_10lvalue_tagE(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = __Znwj(48) | 0;
 HEAP32[i4 >> 2] = i2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 12 | 0, i3 + 12 | 0);
 i1 = __Znwj(16) | 0;
 __ZN5boost11multi_index21multi_index_containerINSt3__14pairIKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13property_tree11basic_ptreeIS9_S9_NS2_4lessIS9_EEEEEENS0_10indexed_byINS0_9sequencedINS0_3tagIN4mpl_2naESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EEEENS0_18ordered_non_uniqueINSJ_INSF_4subs7by_nameESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS0_6memberISG_SA_XadL_ZNSG_5firstEEEEESE_EESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EENS7_ISG_EEEC2ERKSX_(i1, HEAP32[i3 + 24 >> 2] | 0);
 HEAP32[i2 + 24 >> 2] = i1;
 return HEAP32[i4 >> 2] | 0;
}

function _vfprintf(i15, i11, i1) {
 i15 = i15 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i16 + 120 | 0;
 i14 = i16 + 80 | 0;
 i13 = i16;
 i12 = i16 + 136 | 0;
 i2 = i14;
 i3 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i3 | 0));
 HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
 if ((_printf_core(0, i11, i10, i13, i14) | 0) < 0) i1 = -1; else {
  if ((HEAP32[i15 + 76 >> 2] | 0) > -1) i8 = ___lockfile(i15) | 0; else i8 = 0;
  i1 = HEAP32[i15 >> 2] | 0;
  i9 = i1 & 32;
  if ((HEAP8[i15 + 74 >> 0] | 0) < 1) HEAP32[i15 >> 2] = i1 & -33;
  i1 = i15 + 48 | 0;
  if (!(HEAP32[i1 >> 2] | 0)) {
   i3 = i15 + 44 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i12;
   i5 = i15 + 28 | 0;
   HEAP32[i5 >> 2] = i12;
   i6 = i15 + 20 | 0;
   HEAP32[i6 >> 2] = i12;
   HEAP32[i1 >> 2] = 80;
   i7 = i15 + 16 | 0;
   HEAP32[i7 >> 2] = i12 + 80;
   i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
   if (i4) {
    FUNCTION_TABLE_iiii[HEAP32[i15 + 36 >> 2] & 31](i15, 0, 0) | 0;
    i2 = (HEAP32[i6 >> 2] | 0) == 0 ? -1 : i2;
    HEAP32[i3 >> 2] = i4;
    HEAP32[i1 >> 2] = 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
   }
  } else i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  HEAP32[i15 >> 2] = i1 | i9;
  if (i8 | 0) ___unlockfile(i15);
  i1 = (i1 & 32 | 0) == 0 ? i2 : -1;
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj(i3, i13) {
 i3 = i3 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i14 + 16 | 0;
 i1 = i14 + 8 | 0;
 i10 = i14 + 4 | 0;
 i9 = i14;
 i12 = (i13 | 0) == -1;
 do if (!i12) {
  HEAP32[i1 >> 2] = i13;
  if (HEAP8[i3 + 44 >> 0] | 0) if ((_fwrite(i1, 4, 1, HEAP32[i3 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i10 >> 2] = i11;
  i7 = i1 + 4 | 0;
  i8 = i3 + 36 | 0;
  i4 = i3 + 40 | 0;
  i5 = i11 + 8 | 0;
  i6 = i11;
  i3 = i3 + 32 | 0;
  while (1) {
   i2 = HEAP32[i8 >> 2] | 0;
   i2 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 15](i2, HEAP32[i4 >> 2] | 0, i1, i7, i9, i11, i5, i10) | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i2 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i1 = (HEAP32[i10 >> 2] | 0) - i6 | 0;
   if ((_fwrite(i11, 1, i1, HEAP32[i3 >> 2] | 0) | 0) != (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 1) i1 = HEAP32[i9 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i1, 1, 1, HEAP32[i3 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i12 ? 0 : i13;
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIcE8overflowEi(i3, i13) {
 i3 = i3 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i14 + 16 | 0;
 i1 = i14 + 8 | 0;
 i10 = i14 + 4 | 0;
 i9 = i14;
 i12 = (i13 | 0) == -1;
 do if (!i12) {
  HEAP8[i1 >> 0] = i13;
  if (HEAP8[i3 + 44 >> 0] | 0) if ((_fwrite(i1, 1, 1, HEAP32[i3 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i10 >> 2] = i11;
  i8 = i1 + 1 | 0;
  i4 = i3 + 36 | 0;
  i5 = i3 + 40 | 0;
  i6 = i11 + 8 | 0;
  i7 = i11;
  i3 = i3 + 32 | 0;
  while (1) {
   i2 = HEAP32[i4 >> 2] | 0;
   i2 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 15](i2, HEAP32[i5 >> 2] | 0, i1, i8, i9, i11, i6, i10) | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i2 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i1 = (HEAP32[i10 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i11, 1, i1, HEAP32[i3 >> 2] | 0) | 0) != (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 1) i1 = HEAP32[i9 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i1, 1, 1, HEAP32[i3 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i12 ? 0 : i13;
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i8 + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(i6, i1) | 0;
 i5 = i8 + 44 | 0;
 HEAP32[i5 >> 2] = 0;
 i7 = i8 + 48 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 if (i4 & 8 | 0) {
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) {
   i1 = ((i1 & 255) >>> 1) + (i6 + 1) | 0;
   HEAP32[i5 >> 2] = i1;
   i2 = i6 + 1 | 0;
   i3 = i6 + 1 | 0;
  } else {
   i3 = HEAP32[i8 + 40 >> 2] | 0;
   i1 = i3 + (HEAP32[i8 + 36 >> 2] | 0) | 0;
   HEAP32[i5 >> 2] = i1;
   i2 = i3;
  }
  HEAP32[i8 + 8 >> 2] = i2;
  HEAP32[i8 + 12 >> 2] = i3;
  HEAP32[i8 + 16 >> 2] = i1;
 }
 if (!(i4 & 16)) return;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) {
  i4 = (i1 & 255) >>> 1;
  HEAP32[i5 >> 2] = i6 + 1 + i4;
  i1 = 10;
  i5 = i4;
 } else {
  i4 = HEAP32[i8 + 36 >> 2] | 0;
  HEAP32[i5 >> 2] = (HEAP32[i8 + 40 >> 2] | 0) + i4;
  i1 = (HEAP32[i6 >> 2] & -2) + -1 | 0;
  i5 = i4;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i6, i1, 0);
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) {
  i4 = i6 + 1 | 0;
  i3 = (i1 & 255) >>> 1;
  i2 = i6 + 1 | 0;
 } else {
  i2 = HEAP32[i8 + 40 >> 2] | 0;
  i4 = i2;
  i3 = HEAP32[i8 + 36 >> 2] | 0;
 }
 i1 = i8 + 24 | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i8 + 20 >> 2] = i2;
 HEAP32[i8 + 28 >> 2] = i4 + i3;
 if (!(HEAP32[i7 >> 2] & 3)) return;
 HEAP32[i1 >> 2] = i2 + i5;
 return;
}

function _mbrtowc(i4, i3, i7, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i9;
 i6 = (i1 | 0) == 0 ? 51428 : i1;
 i1 = HEAP32[i6 >> 2] | 0;
 L1 : do if (!i3) if (!i1) i1 = 0; else i8 = 15; else {
  i5 = (i4 | 0) == 0 ? i2 : i4;
  if (!i7) i1 = -2; else {
   if (!i1) {
    i1 = HEAP8[i3 >> 0] | 0;
    i2 = i1 & 255;
    if (i1 << 24 >> 24 > -1) {
     HEAP32[i5 >> 2] = i2;
     i1 = i1 << 24 >> 24 != 0 & 1;
     break;
    }
    i1 = i2 + -194 | 0;
    if (i1 >>> 0 > 50) {
     i8 = 15;
     break;
    }
    i1 = HEAP32[22096 + (i1 << 2) >> 2] | 0;
    i2 = i7 + -1 | 0;
    if (i2) {
     i3 = i3 + 1 | 0;
     i8 = 9;
    }
   } else {
    i2 = i7;
    i8 = 9;
   }
   L11 : do if ((i8 | 0) == 9) {
    i4 = HEAP8[i3 >> 0] | 0;
    i10 = (i4 & 255) >>> 3;
    if ((i10 + -16 | i10 + (i1 >> 26)) >>> 0 > 7) {
     i8 = 15;
     break L1;
    }
    while (1) {
     i3 = i3 + 1 | 0;
     i1 = (i4 & 255) + -128 | i1 << 6;
     i2 = i2 + -1 | 0;
     if ((i1 | 0) >= 0) break;
     if (!i2) break L11;
     i4 = HEAP8[i3 >> 0] | 0;
     if ((i4 & -64) << 24 >> 24 != -128) {
      i8 = 15;
      break L1;
     }
    }
    HEAP32[i6 >> 2] = 0;
    HEAP32[i5 >> 2] = i1;
    i1 = i7 - i2 | 0;
    break L1;
   } while (0);
   HEAP32[i6 >> 2] = i1;
   i1 = -2;
  }
 } while (0);
 if ((i8 | 0) == 15) {
  HEAP32[i6 >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  i1 = -1;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 HEAP32[i2 >> 2] = 21240;
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 if ((i1 | 0 ? (i4 = i1 + 4 | 0, i3 = HEAP32[i4 >> 2] | 0, HEAP32[i4 >> 2] = i3 - 1, (i3 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i3 = i1 + 8 | 0, i4 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i4 - 1, (i4 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if (!i1) return;
 i3 = i1 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i10 = i6;
 i5 = i6 + 180 | 0;
 i7 = i6 + 160 | 0;
 i8 = i6 + 8 | 0;
 i12 = i6 + 156 | 0;
 i11 = i6 + 4 | 0;
 HEAP8[i5 >> 0] = HEAP8[48058] | 0;
 HEAP8[i5 + 1 >> 0] = HEAP8[48059] | 0;
 HEAP8[i5 + 2 >> 0] = HEAP8[48060] | 0;
 HEAP8[i5 + 3 >> 0] = HEAP8[48061] | 0;
 HEAP8[i5 + 4 >> 0] = HEAP8[48062] | 0;
 HEAP8[i5 + 5 >> 0] = HEAP8[48063] | 0;
 i9 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i10 >> 2] = i4;
 i5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i7, 20, i9, i5, i10) | 0;
 i9 = i7 + i5 | 0;
 i4 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i9, i2) | 0;
 i13 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i7, i9, i8) | 0;
 i5 = i8 + (i5 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i4 | 0) == (i9 | 0) ? i5 : i8 + (i4 - i7 << 2) | 0, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES17_EEE5parseIS16_EENS1_13parser_resultIS19_T_E4typeERKS1C_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = i8 + 24 | 0;
 i2 = i8 + 12 | 0;
 i3 = i8;
 i4 = HEAP32[HEAP32[i7 >> 2] >> 2] | 0;
 if (i4 | 0 ? (i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 31](i4, i6) | 0, (i5 | 0) >= 0) : 0) {
  STACKTOP = i8;
  return i5 | 0;
 }
 i8 = HEAP32[HEAP32[i6 + 4 >> 2] >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i7 + 4 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 HEAP32[i1 >> 2] = 21124;
 HEAP32[i1 + 4 >> 2] = i8;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i2);
 __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i1);
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i10 = i6;
 i5 = i6 + 72 | 0;
 i7 = i6 + 52 | 0;
 i8 = i6 + 12 | 0;
 i12 = i6 + 8 | 0;
 i11 = i6 + 4 | 0;
 HEAP8[i5 >> 0] = HEAP8[48058] | 0;
 HEAP8[i5 + 1 >> 0] = HEAP8[48059] | 0;
 HEAP8[i5 + 2 >> 0] = HEAP8[48060] | 0;
 HEAP8[i5 + 3 >> 0] = HEAP8[48061] | 0;
 HEAP8[i5 + 4 >> 0] = HEAP8[48062] | 0;
 HEAP8[i5 + 5 >> 0] = HEAP8[48063] | 0;
 i9 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i10 >> 2] = i4;
 i5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i7, 20, i9, i5, i10) | 0;
 i9 = i7 + i5 | 0;
 i4 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i9, i2) | 0;
 i13 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i7, i9, i8) | 0;
 i5 = i8 + i5 | 0;
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i4 | 0) == (i9 | 0) ? i5 : i8 + (i4 - i7) | 0, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 204 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 48053, 0, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 23, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 196 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 48053, 1, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 22, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 75 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 48053, 0, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 23, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 74 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 48053, 1, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 22, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(i10, i8) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53036) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i2 & 31](i7, i5, i3, i1 & 255, i8) | 0)) {
   i8 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(i10, i8) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53036) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i2 & 31](i7, i5, i3, i1 & 255, i8) | 0)) {
   i8 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(i10, d8) {
 i10 = i10 | 0;
 d8 = +d8;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53036) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiid[i2 & 7](i7, i5, i3, i1 & 255, d8) | 0)) {
   i7 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(i10, d8) {
 i10 = i10 | 0;
 d8 = +d8;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 53036) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 52980) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiid[i2 & 7](i7, i5, i3, i1 & 255, d8) | 0)) {
   i7 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZN5boost6spirit7classicrsINS1_5chsetIcEENS1_8optionalIS4_EEEENS1_8sequenceIT_T0_EERKNS1_6parserIS8_EERKNSB_IS9_EE(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = __Znwj(32) | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i5 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i5 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i5 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP32[i5 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 HEAP32[i5 + 24 >> 2] = HEAP32[i4 + 24 >> 2];
 HEAP32[i5 + 28 >> 2] = HEAP32[i4 + 28 >> 2];
 HEAP32[i2 >> 2] = i5;
 i4 = i2 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i2, i5, i4);
 i4 = i2 + 8 | 0;
 i1 = __Znwj(32) | 0;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i1 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP32[i1 + 16 >> 2] = HEAP32[i3 + 16 >> 2];
 HEAP32[i1 + 20 >> 2] = HEAP32[i3 + 20 >> 2];
 HEAP32[i1 + 24 >> 2] = HEAP32[i3 + 24 >> 2];
 HEAP32[i1 + 28 >> 2] = HEAP32[i3 + 28 >> 2];
 HEAP32[i4 >> 2] = i1;
 i3 = i2 + 12 | 0;
 HEAP32[i3 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i4, i1, i3);
 return;
}

function __ZN5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9get_childERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i4 = i6 + 24 | 0;
 i2 = i6 + 12 | 0;
 i3 = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4, i5);
 HEAP8[i4 + 12 >> 0] = HEAP8[i5 + 12 >> 0] | 0;
 HEAP32[i4 + 16 >> 2] = ((HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0) + ((HEAP32[i5 + 16 >> 2] | 0) - ((HEAP8[i5 >> 0] & 1) == 0 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0));
 i1 = __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9walk_pathERNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i1, i4) | 0;
 if (!i1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i3, 43819, 12);
  __ZN5boost13property_tree14ptree_bad_pathC2INS0_11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS0_13id_translatorISA_EEEEEERKSA_RKT_(i2, i3, i5);
  __ZN5boost16exception_detail16throw_exception_INS_13property_tree14ptree_bad_pathEEEvRKT_PKcS8_i(i2, 43832, 43359, 576);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
  STACKTOP = i6;
  return i1 | 0;
 }
 return 0;
}

function __ZNK12mp5_implicit15double_mushroom6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 32 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 36 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNK12mp5_implicit11unit_sphere6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 20 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 24 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNK12mp5_implicit11transformed6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 4 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9 + 16 | 0;
 i6 = i9 + 8 | 0;
 i3 = i9 + 4 | 0;
 i4 = i9;
 i8 = i5 + 52 | 0;
 i2 = (HEAP8[i8 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i5 + 48 >> 2] | 0;
  HEAP8[i8 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  do if (i2) {
   i2 = i5 + 48 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   i10 = HEAP32[i5 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 15](i10, HEAP32[i5 + 40 >> 2] | 0, i3, i3 + 4 | 0, i4, i7, i7 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i1 = -1;
     break L1;
    }
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i6 >> 2] = i7 + 1;
     break;
    }
   default:
    {}
   }
   i3 = i5 + 32 | 0;
   while (1) {
    i4 = HEAP32[i6 >> 2] | 0;
    if (i4 >>> 0 <= i7 >>> 0) {
     i3 = 13;
     break;
    }
    i10 = i4 + -1 | 0;
    HEAP32[i6 >> 2] = i10;
    if ((_ungetc(HEAP8[i10 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) {
     i3 = 12;
     break;
    }
   }
   if ((i3 | 0) == 12) {
    i1 = -1;
    break L1;
   } else if ((i3 | 0) == 13) break;
  } else i2 = i5 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i8 >> 0] = 1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNK12mp5_implicit9scylinder6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 32 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 36 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9 + 16 | 0;
 i6 = i9 + 4 | 0;
 i3 = i9 + 8 | 0;
 i4 = i9;
 i8 = i5 + 52 | 0;
 i2 = (HEAP8[i8 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i5 + 48 >> 2] | 0;
  HEAP8[i8 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  do if (i2) {
   i2 = i5 + 48 | 0;
   HEAP8[i3 >> 0] = HEAP32[i2 >> 2];
   i10 = HEAP32[i5 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 15](i10, HEAP32[i5 + 40 >> 2] | 0, i3, i3 + 1 | 0, i4, i7, i7 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i1 = -1;
     break L1;
    }
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i6 >> 2] = i7 + 1;
     break;
    }
   default:
    {}
   }
   i3 = i5 + 32 | 0;
   while (1) {
    i4 = HEAP32[i6 >> 2] | 0;
    if (i4 >>> 0 <= i7 >>> 0) {
     i3 = 13;
     break;
    }
    i10 = i4 + -1 | 0;
    HEAP32[i6 >> 2] = i10;
    if ((_ungetc(HEAP8[i10 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) {
     i3 = 12;
     break;
    }
   }
   if ((i3 | 0) == 12) {
    i1 = -1;
    break L1;
   } else if ((i3 | 0) == 13) break;
  } else i2 = i5 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i8 >> 0] = 1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNK12mp5_implicit5scone6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 32 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 36 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = __Znwj(56) | 0;
 HEAP32[i2 >> 2] = 21168;
 i5 = i1 + 4 | 0;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i3 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i4;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 12 | 0, i1 + 12 | 0);
 HEAP8[i2 + 24 >> 0] = HEAP8[i1 + 24 >> 0] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 28 | 0, i1 + 28 | 0);
 HEAP32[i2 + 40 >> 2] = HEAP32[i1 + 40 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 44 | 0, i1 + 44 | 0);
 return i2 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_E16do_parse_virtualERKS1G_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNK5boost6spirit7classic8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS4_INS1_6strlitIPKcEENS7_INS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS4_ISM_SO_SM_SS_ST_SU_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES16_EEEES6_SS_ST_NS1_10non_lexemeEEEEEE5parseINS9_ISD_NSE_IS10_S12_S13_EEEEEENS1_13parser_resultIS1C_T_E4typeERKS1H_(i2 + 4 | 0, i1) | 0;
}

function __ZNK12mp5_implicit4cube6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 88 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 92 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZNK12mp5_implicit3egg6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i3, d1, i2) {
 i3 = i3 | 0;
 d1 = +d1;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, i15 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i5 = i4;
 d7 = +Math_cos(+d1);
 d12 = +Math_sin(+d1);
 i15 = (HEAP32[i2 >> 2] | 0) + (HEAP32[i2 + 40 >> 2] << 2) | 0;
 d9 = +HEAPF32[i15 >> 2];
 i2 = HEAP32[i2 + 28 >> 2] | 0;
 d8 = +HEAPF32[i15 + (i2 << 2) >> 2];
 d6 = +HEAPF32[i15 + (i2 << 1 << 2) >> 2];
 d1 = +Math_sqrt(+(d9 * d9 + d8 * d8 + d6 * d6));
 d9 = d9 / d1;
 d8 = d8 / d1;
 d1 = d6 / d1;
 d6 = 1.0 - d7;
 HEAPF32[i5 >> 2] = d7 + d6 * (d9 * d9);
 d13 = d6 * (d9 * d8);
 d14 = d12 * d1;
 HEAPF32[i5 + 4 >> 2] = d13 - d14;
 d11 = d6 * (d9 * d1);
 d10 = d12 * d8;
 HEAPF32[i5 + 8 >> 2] = d10 + d11;
 HEAPF32[i5 + 12 >> 2] = 0.0;
 HEAPF32[i5 + 16 >> 2] = d14 + d13;
 HEAPF32[i5 + 20 >> 2] = d7 + d6 * (d8 * d8);
 d8 = d6 * (d8 * d1);
 d9 = d12 * d9;
 HEAPF32[i5 + 24 >> 2] = d8 - d9;
 HEAPF32[i5 + 28 >> 2] = 0.0;
 HEAPF32[i5 + 32 >> 2] = d11 - d10;
 HEAPF32[i5 + 36 >> 2] = d9 + d8;
 HEAPF32[i5 + 40 >> 2] = d7 + d6 * (d1 * d1);
 HEAPF32[i5 + 44 >> 2] = 0.0;
 i2 = i3 + 28 | 0;
 __Z21Matrix_Matrix_ProductPfPKf(HEAP32[i2 >> 2] | 0, i5) | 0;
 __Z12InvertMatrixPKfPf(HEAP32[i2 >> 2] | 0, HEAP32[i3 + 32 >> 2] | 0) | 0;
 STACKTOP = i4;
 return;
}

function __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = __Znwj(32) | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i3 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP32[i3 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 HEAP32[i3 + 24 >> 2] = HEAP32[i4 + 24 >> 2];
 HEAP32[i3 + 28 >> 2] = HEAP32[i4 + 28 >> 2];
 HEAP32[i2 >> 2] = i3;
 i4 = i2 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i2, i3, i4);
 i4 = i2 + 8 | 0;
 i3 = __Znwj(32) | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
 HEAP32[i3 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 HEAP32[i3 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i3 + 24 >> 2] = HEAP32[i1 + 24 >> 2];
 HEAP32[i3 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
 HEAP32[i4 >> 2] = i3;
 i2 = i2 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i4, i3, i2);
 return;
}

function ___stdio_read(i8, i7, i9) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i3 = i10 + 16 | 0;
 i2 = i10;
 i1 = i10 + 32 | 0;
 HEAP32[i1 >> 2] = i7;
 i4 = i1 + 4 | 0;
 i6 = i8 + 48 | 0;
 i11 = HEAP32[i6 >> 2] | 0;
 HEAP32[i4 >> 2] = i9 - ((i11 | 0) != 0 & 1);
 i5 = i8 + 44 | 0;
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 12 >> 2] = i11;
 if (!(HEAP32[12845] | 0)) {
  HEAP32[i3 >> 2] = HEAP32[i8 + 60 >> 2];
  HEAP32[i3 + 4 >> 2] = i1;
  HEAP32[i3 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(219, i8 | 0);
  HEAP32[i2 >> 2] = HEAP32[i8 + 60 >> 2];
  HEAP32[i2 + 4 >> 2] = i1;
  HEAP32[i2 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i2 | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
 }
 if ((i1 | 0) >= 1) {
  i4 = HEAP32[i4 >> 2] | 0;
  if (i1 >>> 0 > i4 >>> 0) {
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = i8 + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i8 + 8 >> 2] = i2 + (i1 - i4);
   if (!(HEAP32[i6 >> 2] | 0)) i1 = i9; else {
    HEAP32[i3 >> 2] = i2 + 1;
    HEAP8[i7 + (i9 + -1) >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i9;
   }
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | i1 & 48 ^ 16;
  HEAP32[i8 + 8 >> 2] = 0;
  HEAP32[i8 + 4 >> 2] = 0;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(44) | 0;
 i4 = i1 + 4 | 0;
 HEAP32[i2 >> 2] = 21320;
 i3 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i3 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP8[i2 + 24 >> 0] = HEAP8[i1 + 24 >> 0] | 0;
 HEAP32[i2 + 28 >> 2] = HEAP32[i1 + 28 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 32 | 0, i1 + 32 | 0);
 return i2 | 0;
}

function __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEES1M_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 + 4 >> 2] = 1;
 HEAP32[i2 + 8 >> 2] = 1;
 HEAP32[i2 >> 2] = 20948;
 HEAP32[i2 + 12 >> 2] = i1;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2;
 if (!i1) return;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 return;
}

function __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEED0Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 HEAP32[i4 >> 2] = 20928;
 i1 = HEAP32[i4 + 24 >> 2] | 0;
 if ((i1 | 0 ? (i2 = i1 + 4 | 0, i3 = HEAP32[i2 >> 2] | 0, HEAP32[i2 >> 2] = i3 - 1, (i3 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i2 = i1 + 8 | 0, i3 = HEAP32[i2 >> 2] | 0, HEAP32[i2 >> 2] = i3 - 1, (i3 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 if (!i1) {
  __ZdlPv(i4);
  return;
 }
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) != (i1 | 0)) HEAP32[i2 >> 2] = i3 + (~((i3 + -4 - i1 | 0) >>> 2) << 2);
 __ZdlPv(i1);
 __ZdlPv(i4);
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED0Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 HEAP32[i2 >> 2] = 21344;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (!i1) {
  __ZdlPv(i2);
  return;
 }
 i4 = i1 + 4 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) {
  __ZdlPv(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i3 = i1 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) {
  __ZdlPv(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__16vectorIPN5boost6spirit7classic4impl19grammar_helper_baseINS3_7grammarINS1_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESG_NS_4lessISG_EEEEEENS3_14parser_contextINS3_5nil_tEEEEEEENSE_ISQ_EEE21__push_back_slow_pathIRKSQ_EEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIiEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i5, i2, i1) {
 i5 = i5 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 4 | 0;
 i4 = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i1);
 HEAP8[i3 + 12 >> 0] = HEAP8[i1 + 12 >> 0] | 0;
 HEAP32[i3 + 16 >> 2] = ((HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0) + ((HEAP32[i1 + 16 >> 2] | 0) - ((HEAP8[i1 >> 0] & 1) == 0 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0));
 i1 = __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9walk_pathERNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i2, i3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 if (!i1) {
  HEAP8[i5 >> 0] = 0;
  STACKTOP = i6;
  return;
 } else {
  __ZNSt3__16localeC2Ev(i4);
  __ZNSt3__16localeC2ERKS0_(i3, i4);
  __ZN5boost13property_tree17stream_translatorIcNSt3__111char_traitsIcEENS2_9allocatorIcEEiE9get_valueERKNS2_12basic_stringIcS4_S6_EE(i5, i3, i1);
  __ZNSt3__16localeD2Ev(i3);
  __ZNSt3__16localeD2Ev(i4);
  STACKTOP = i6;
  return;
 }
}

function __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE12get_optionalIfEENS_8optionalIT_EERKNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i5, i2, i1) {
 i5 = i5 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 4 | 0;
 i4 = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i1);
 HEAP8[i3 + 12 >> 0] = HEAP8[i1 + 12 >> 0] | 0;
 HEAP32[i3 + 16 >> 2] = ((HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0) + ((HEAP32[i1 + 16 >> 2] | 0) - ((HEAP8[i1 >> 0] & 1) == 0 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0));
 i1 = __ZNK5boost13property_tree11basic_ptreeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_NS2_4lessIS8_EEE9walk_pathERNS0_11string_pathIS8_NS0_13id_translatorIS8_EEEE(i2, i3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 if (!i1) {
  HEAP8[i5 >> 0] = 0;
  STACKTOP = i6;
  return;
 } else {
  __ZNSt3__16localeC2Ev(i4);
  __ZNSt3__16localeC2ERKS0_(i3, i4);
  __ZN5boost13property_tree17stream_translatorIcNSt3__111char_traitsIcEENS2_9allocatorIcEEfE9get_valueERKNS2_12basic_stringIcS4_S6_EE(i5, i3, i1);
  __ZNSt3__16localeD2Ev(i3);
  __ZNSt3__16localeD2Ev(i4);
  STACKTOP = i6;
  return;
 }
}

function __ZNK5boost13property_tree11json_parser7contextINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEE8a_escapeclEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 switch (i1 << 24 >> 24 | 0) {
 case 34:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 34);
   return;
  }
 case 92:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 92);
   return;
  }
 case 47:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 47);
   return;
  }
 case 98:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 8);
   return;
  }
 case 102:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 12);
   return;
  }
 case 110:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 10);
   return;
  }
 case 114:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 13);
   return;
  }
 case 116:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(HEAP32[i2 >> 2] | 0, 9);
   return;
  }
 default:
  return;
 }
}

function __ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 HEAP32[i2 >> 2] = 20928;
 i1 = HEAP32[i2 + 24 >> 2] | 0;
 if ((i1 | 0 ? (i4 = i1 + 4 | 0, i3 = HEAP32[i4 >> 2] | 0, HEAP32[i4 >> 2] = i3 - 1, (i3 | 0) == 1) : 0) ? (FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1), i3 = i1 + 8 | 0, i4 = HEAP32[i3 >> 2] | 0, HEAP32[i3 >> 2] = i4 - 1, (i4 | 0) == 1) : 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i3 = HEAP32[i2 + 4 >> 2] | 0;
 if (!i3) return;
 i1 = i2 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (i3 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i3 | 0) >>> 2) << 2);
 __ZdlPv(i3);
 return;
}

function _mbtowc(i2, i6, i4) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 L1 : do if (!i6) i1 = 0; else {
  do if (i4 | 0) {
   i5 = (i2 | 0) == 0 ? i1 : i2;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = i1 & 255;
   if (i1 << 24 >> 24 > -1) {
    HEAP32[i5 >> 2] = i2;
    i1 = i1 << 24 >> 24 != 0 & 1;
    break L1;
   }
   i1 = i2 + -194 | 0;
   if (i1 >>> 0 <= 50) {
    i2 = i6 + 1 | 0;
    i3 = HEAP32[22096 + (i1 << 2) >> 2] | 0;
    if (i4 >>> 0 < 4 ? i3 & -2147483648 >>> ((i4 * 6 | 0) + -6 | 0) | 0 : 0) break;
    i1 = HEAPU8[i2 >> 0] | 0;
    i4 = i1 >>> 3;
    if ((i4 + -16 | i4 + (i3 >> 26)) >>> 0 <= 7) {
     i1 = i1 + -128 | i3 << 6;
     if ((i1 | 0) >= 0) {
      HEAP32[i5 >> 2] = i1;
      i1 = 2;
      break L1;
     }
     i2 = HEAPU8[i6 + 2 >> 0] | 0;
     if ((i2 & 192 | 0) == 128) {
      i2 = i2 + -128 | i1 << 6;
      if ((i2 | 0) >= 0) {
       HEAP32[i5 >> 2] = i2;
       i1 = 3;
       break L1;
      }
      i1 = HEAPU8[i6 + 3 >> 0] | 0;
      if ((i1 & 192 | 0) == 128) {
       HEAP32[i5 >> 2] = i1 + -128 | i2 << 6;
       i1 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  i1 = -1;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi(i9, i7) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i10 + 24 | 0;
 i1 = i10 + 20 | 0;
 i3 = i10 + 16 | 0;
 i4 = i10 + 12 | 0;
 i11 = i10 + 28 | 0;
 i6 = i10 + 8 | 0;
 i8 = i10 + 4 | 0;
 i5 = i10;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i11, i9, 0);
 if (HEAP8[i11 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 53004) | 0;
  i11 = i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i13 = HEAP32[(HEAP32[i12 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i13 & 63](i12, i1, i2, i11, i6, i8) | 0;
  __ZNSt3__16localeD2Ev(i5);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  i8 = i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i11 = i8 + 16 | 0;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i8 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i10;
 return i9 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i5 = HEAP32[i8 + 8 >> 2] | 0;
 i3 = i8 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i5 - i1 >> 2 >>> 0 < i2 >>> 0) {
  i3 = HEAP32[i8 >> 2] | 0;
  i6 = i1 - i3 >> 2;
  i4 = i6 + i2 | 0;
  if (i4 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = i5 - i3 | 0;
  if (i1 >> 2 >>> 0 < 536870911) {
   i1 = i1 >> 1;
   i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  } else i1 = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i7, i1, i6, i8 + 16 | 0);
  i6 = i7 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  _memset(i5 | 0, 0, i2 << 2 | 0) | 0;
  HEAP32[i6 >> 2] = i5 + (i2 << 2);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i8, i7);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i7);
 } else do {
  HEAP32[i1 >> 2] = 0;
  i1 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 STACKTOP = i9;
 return;
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i8, i1, i3, i5, i4, i2) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i7;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i6 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = HEAP8[i2 >> 0] | 0;
 i10 = (i9 & 1) == 0;
 i1 = i10 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0;
 i2 = i1 + (i10 ? (i9 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 i1 = _catgets((i3 | 0) == -1 ? -1 : i3 << 1, i5, i4, (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0) | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i8 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = i1 + (_strlen(i1) | 0) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i8, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 STACKTOP = i7;
 return;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_E16do_parse_virtualERKS18_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNK5boost6spirit7classic16assertive_parserINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_4ruleINS1_7scannerINS3_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSH_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSH_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSJ_ISN_SQ_SN_SU_SV_SW_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES17_EEE5parseIS16_EENS1_13parser_resultIS19_T_E4typeERKS1C_(i2 + 4 | 0, i1) | 0;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i5, i7, i4, i8) {
 i5 = i5 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i9 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i3 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 do if (((i1 & 1) == 0 ? (i1 & 255) >>> 1 : i2) | 0) {
  if ((i7 | 0) != (i4 | 0)) {
   i1 = i4;
   i2 = i7;
   while (1) {
    i1 = i1 + -4 | 0;
    if (i2 >>> 0 >= i1 >>> 0) break;
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i1 >> 2] = i6;
    i2 = i2 + 4 | 0;
   }
   i1 = HEAP8[i5 >> 0] | 0;
   i2 = HEAP32[i3 >> 2] | 0;
  }
  i3 = (i1 & 1) == 0;
  i5 = i3 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0;
  i6 = i4 + -4 | 0;
  i4 = i5 + (i3 ? (i1 & 255) >>> 1 : i2) | 0;
  i2 = i7;
  while (1) {
   i1 = HEAP8[i5 >> 0] | 0;
   i3 = i1 << 24 >> 24 < 1 | i1 << 24 >> 24 == 127;
   if (i2 >>> 0 >= i6 >>> 0) break;
   if (!i3 ? (i1 << 24 >> 24 | 0) != (HEAP32[i2 >> 2] | 0) : 0) {
    i9 = 10;
    break;
   }
   i5 = (i4 - i5 | 0) > 1 ? i5 + 1 | 0 : i5;
   i2 = i2 + 4 | 0;
  }
  if ((i9 | 0) == 10) {
   HEAP32[i8 >> 2] = 4;
   break;
  }
  if (!i3 ? ((HEAP32[i6 >> 2] | 0) + -1 | 0) >>> 0 >= i1 << 24 >> 24 >>> 0 : 0) HEAP32[i8 >> 2] = 4;
 } while (0);
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 21344;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (!i1) return;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 - 1;
 if ((i2 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i1 = HEAP8[i8 >> 0] | 0;
 if (!(i1 & 1)) i3 = 10; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i7 = (i1 & 255) >>> 1; else i7 = HEAP32[i8 + 4 >> 2] | 0;
 i2 = i7 >>> 0 > i2 >>> 0 ? i7 : i2;
 if (i2 >>> 0 < 11) i6 = 10; else i6 = (i2 + 16 & -16) + -1 | 0;
 do if ((i6 | 0) != (i3 | 0)) {
  do if ((i6 | 0) != 10) {
   i2 = __Znwj(i6 + 1 | 0) | 0;
   if (!(i1 & 1)) {
    i3 = 1;
    i4 = i8 + 1 | 0;
    i5 = 0;
    break;
   } else {
    i3 = 1;
    i4 = HEAP32[i8 + 8 >> 2] | 0;
    i5 = 1;
    break;
   }
  } else {
   i2 = i8 + 1 | 0;
   i3 = 0;
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   i5 = 1;
  } while (0);
  if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i8 + 4 >> 2] | 0;
  _memcpy(i2 | 0, i4 | 0, i1 + 1 | 0) | 0;
  if (i5) __ZdlPv(i4);
  if (i3) {
   HEAP32[i8 >> 2] = i6 + 1 | 1;
   HEAP32[i8 + 4 >> 2] = i7;
   HEAP32[i8 + 8 >> 2] = i2;
   break;
  } else {
   HEAP8[i8 >> 0] = i7 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i1 = HEAP8[i8 >> 0] | 0;
 if (!(i1 & 1)) i3 = 1; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i7 = (i1 & 255) >>> 1; else i7 = HEAP32[i8 + 4 >> 2] | 0;
 i2 = i7 >>> 0 > i2 >>> 0 ? i7 : i2;
 if (i2 >>> 0 < 2) i6 = 1; else i6 = (i2 + 4 & -4) + -1 | 0;
 do if ((i6 | 0) != (i3 | 0)) {
  do if ((i6 | 0) != 1) {
   i2 = __Znwj((i6 << 2) + 4 | 0) | 0;
   if (!(i1 & 1)) {
    i3 = 1;
    i4 = i8 + 4 | 0;
    i5 = 0;
    break;
   } else {
    i3 = 1;
    i4 = HEAP32[i8 + 8 >> 2] | 0;
    i5 = 1;
    break;
   }
  } else {
   i2 = i8 + 4 | 0;
   i3 = 0;
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   i5 = 1;
  } while (0);
  if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i8 + 4 >> 2] | 0;
  _wmemcpy(i2, i4, i1 + 1 | 0) | 0;
  if (i5) __ZdlPv(i4);
  if (i3) {
   HEAP32[i8 >> 2] = i6 + 1 | 1;
   HEAP32[i8 + 4 >> 2] = i7;
   HEAP32[i8 + 8 >> 2] = i2;
   break;
  } else {
   HEAP8[i8 >> 0] = i7 << 1;
   break;
  }
 } while (0);
 return;
}

function _set_object(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i4 + 12 | 0;
 i2 = i4;
 if (!(HEAP32[12834] | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i3, _strlen(i3) | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i1);
  HEAP32[12834] = __Z14object_factoryNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERb(i2, i4 + 24 | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  STACKTOP = i4;
  return;
 } else {
  i3 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30553, 63) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 31](i2, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i2) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  STACKTOP = i4;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i10, i5, i7, i8, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i11 + 4 | 0;
 i4 = i11;
 i9 = i1 + 8 | 0;
 i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 8 >> 2] & 127](i9) | 0;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) i2 = (i1 & 255) >>> 1; else i2 = HEAP32[i9 + 4 >> 2] | 0;
 i1 = HEAP8[i9 + 12 >> 0] | 0;
 if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i9 + 16 >> 2] | 0;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i3, i9, i9 + 24 | 0, i6, i8, 0) | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) == (i9 | 0) & (i2 | 0) == 12) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 - i9 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i10, i5, i7, i8, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i11 + 4 | 0;
 i4 = i11;
 i9 = i1 + 8 | 0;
 i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 8 >> 2] & 127](i9) | 0;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) i2 = (i1 & 255) >>> 1; else i2 = HEAP32[i9 + 4 >> 2] | 0;
 i1 = HEAP8[i9 + 12 >> 0] | 0;
 if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i9 + 16 >> 2] | 0;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i3, i9, i9 + 24 | 0, i6, i8, 0) | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) == (i9 | 0) & (i2 | 0) == 12) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 - i9 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i9 + 20 | 0;
 i1 = i9 + 16 | 0;
 i3 = i9 + 12 | 0;
 i4 = i9 + 8 | 0;
 i10 = i9 + 24 | 0;
 i6 = i9 + 4 | 0;
 i5 = i9;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i10, i8, 0);
 if (HEAP8[i10 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  HEAP32[i5 >> 2] = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 53004) | 0;
  i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i12 = HEAP32[(HEAP32[i11 >> 2] | 0) + 40 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i12 & 63](i11, i1, i2, i10, i6, i7) | 0;
  __ZNSt3__16localeD2Ev(i5);
  i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i10 = i7 + 16 | 0;
  HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i7 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i9;
 return i8 | 0;
}

function __ZNSt3__16vectorIPN5boost13property_tree11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_NS_4lessIS9_EEEENS7_ISD_EEE21__push_back_slow_pathIRKSD_EEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__16vectorIPN5boost13property_tree11basic_ptreeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_NS_4lessIS9_EEEENS7_ISD_EEE21__push_back_slow_pathISD_EEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i3 = i5;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) {
  i7 = (i1 & 255) >>> 1;
  i2 = 1;
 } else {
  i1 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i6 = i8 - i3 >> 2;
 do if (i6 | 0) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0, 0);
   i1 = HEAP8[i9 >> 0] | 0;
  }
  if (!(i1 & 1)) i4 = i9 + 4 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
  i3 = i7 + ((i8 - i3 | 0) >>> 2) | 0;
  i1 = i5;
  i2 = i4 + (i7 << 2) | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i1 = i1 + 4 | 0;
   i2 = i2 + 4 | 0;
  }
  HEAP32[i4 + (i3 << 2) >> 2] = 0;
  i1 = i7 + i6 | 0;
  if (!(HEAP8[i9 >> 0] & 1)) {
   HEAP8[i9 >> 0] = i1 << 1;
   break;
  } else {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  }
 } while (0);
 return i9 | 0;
}

function _memchr(i1, i5, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 & 255;
 i3 = (i2 | 0) != 0;
 L1 : do if (i3 & (i1 & 3 | 0) != 0) {
  i4 = i5 & 255;
  while (1) {
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) {
    i7 = 6;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i2 + -1 | 0;
   i3 = (i2 | 0) != 0;
   if (!(i3 & (i1 & 3 | 0) != 0)) {
    i7 = 5;
    break;
   }
  }
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) if (i3) i7 = 6; else i2 = 0;
 L8 : do if ((i7 | 0) == 6) {
  i4 = i5 & 255;
  if ((HEAP8[i1 >> 0] | 0) != i4 << 24 >> 24) {
   i3 = Math_imul(i6, 16843009) | 0;
   L11 : do if (i2 >>> 0 > 3) while (1) {
    i6 = HEAP32[i1 >> 2] ^ i3;
    if ((i6 & -2139062144 ^ -2139062144) & i6 + -16843009 | 0) break;
    i1 = i1 + 4 | 0;
    i2 = i2 + -4 | 0;
    if (i2 >>> 0 <= 3) {
     i7 = 11;
     break L11;
    }
   } else i7 = 11; while (0);
   if ((i7 | 0) == 11) if (!i2) {
    i2 = 0;
    break;
   }
   while (1) {
    if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break L8;
    i1 = i1 + 1 | 0;
    i2 = i2 + -1 | 0;
    if (!i2) {
     i2 = 0;
     break;
    }
   }
  }
 } while (0);
 return (i2 | 0 ? i1 : 0) | 0;
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i5 + 32 | 0;
 i3 = i5 + 24 | 0;
 i8 = i5 + 16 | 0;
 i6 = i5;
 i5 = i5 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if (i1 | 0 ? (i4 = HEAP32[i1 >> 2] | 0, i4 | 0) : 0) {
  i1 = i4 + 48 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i2 & -256 | 0) == 1126902528 & (i1 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = 50262;
   _abort_message(50357, i3);
  }
  if ((i2 | 0) == 1126902529 & (i1 | 0) == 1129074247) i1 = HEAP32[i4 + 44 >> 2] | 0; else i1 = i4 + 80 | 0;
  HEAP32[i5 >> 2] = i1;
  i4 = HEAP32[i4 >> 2] | 0;
  i1 = HEAP32[i4 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[582] | 0) + 16 >> 2] & 31](2328, i4, i5) | 0) {
   i8 = HEAP32[i5 >> 2] | 0;
   i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 127](i8) | 0;
   HEAP32[i6 >> 2] = 50262;
   HEAP32[i6 + 4 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = i8;
   _abort_message(50271, i6);
  } else {
   HEAP32[i8 >> 2] = 50262;
   HEAP32[i8 + 4 >> 2] = i1;
   _abort_message(50316, i8);
  }
 }
 _abort_message(50395, i7);
}

function __ZN5boost13property_tree14ptree_bad_pathC2INS0_11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS0_13id_translatorISA_EEEEEERKSA_RKT_(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i5;
 __ZN5boost13property_tree6detail21prepare_bad_path_whatINS0_11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS0_13id_translatorISA_EEEEEESA_RKSA_RKT_(i2, i1, i3);
 __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i4, i2);
 HEAP32[i4 >> 2] = 19952;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 HEAP32[i4 >> 2] = 2524;
 i1 = __Znwj(24) | 0;
 HEAP32[i1 >> 2] = 21488;
 i2 = i1 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i3);
 HEAP8[i1 + 16 >> 0] = HEAP8[i3 + 12 >> 0] | 0;
 if (!(HEAP8[i2 >> 0] & 1)) i2 = i1 + 5 | 0; else i2 = HEAP32[i1 + 12 >> 2] | 0;
 HEAP32[i1 + 20 >> 2] = i2 + ((HEAP32[i3 + 16 >> 2] | 0) - ((HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0));
 HEAP32[i4 + 8 >> 2] = i1;
 STACKTOP = i5;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i3 = i5;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) {
  i7 = (i1 & 255) >>> 1;
  i2 = 10;
 } else {
  i1 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i6 = i8 - i3 | 0;
 do if ((i8 | 0) != (i5 | 0)) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0, 0);
   i1 = HEAP8[i9 >> 0] | 0;
  }
  if (!(i1 & 1)) i4 = i9 + 1 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
  i3 = i8 + (i7 - i3) | 0;
  i1 = i5;
  i2 = i4 + i7 | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP8[i4 + i3 >> 0] = 0;
  i1 = i7 + i6 | 0;
  if (!(HEAP8[i9 >> 0] & 1)) {
   HEAP8[i9 >> 0] = i1 << 1;
   break;
  } else {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  }
 } while (0);
 return i9 | 0;
}

function __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEEvRKT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i2 = ___cxa_allocate_exception(44) | 0;
 HEAP32[i1 >> 2] = 21124;
 HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i5 + 8 | 0);
 i4 = i1 + 20 | 0;
 HEAP32[i4 >> 2] = 20880;
 i3 = HEAP32[i5 + 24 >> 2] | 0;
 HEAP32[i1 + 24 >> 2] = i3;
 if (i3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 255](i3);
 i3 = i1 + 28 | 0;
 i5 = i5 + 28 | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i1 >> 2] = 21088;
 HEAP32[i4 >> 2] = 21108;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEC1ERKSH_(i2, i1);
 ___cxa_throw(i2 | 0, 544, 68);
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(32) | 0;
 HEAP32[i2 >> 2] = 21240;
 i3 = i2 + 4 | 0;
 i4 = i1 + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 HEAP16[i3 + 4 >> 1] = HEAP16[i4 + 4 >> 1] | 0;
 HEAP8[i3 + 6 >> 0] = HEAP8[i4 + 6 >> 0] | 0;
 __ZN5boost7details19compressed_pair_impINS_6spirit7classic5chsetIcEENS3_8optionalIS5_EELi0EEC2ERKS8_(i2 + 12 | 0, i1 + 12 | 0);
 HEAP8[i2 + 28 >> 0] = HEAP8[i1 + 28 >> 0] | 0;
 return i2 | 0;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i2 & 1024) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 i6 = i2 & 260;
 i4 = i2 >>> 14;
 i7 = (i6 | 0) == 260;
 if (i7) i5 = 0; else {
  HEAP8[i1 >> 0] = 46;
  HEAP8[i1 + 1 >> 0] = 42;
  i1 = i1 + 2 | 0;
  i5 = 1;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L14 : do switch (i6 | 0) {
 case 4:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 102;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 70;
   break L14;
  }
 case 256:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 101;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 69;
   break L14;
  }
 default:
  {
   i2 = (i4 & 1 | 0) != 0;
   if (i7) if (i2) {
    HEAP8[i1 >> 0] = 65;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 97;
    break L14;
   } else if (i2) {
    HEAP8[i1 >> 0] = 71;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return i5 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = __Znwj(40) | 0;
 HEAP32[i2 >> 2] = 20980;
 i5 = i1 + 4 | 0;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i3 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i4;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 12 | 0, i1 + 12 | 0);
 HEAP8[i2 + 24 >> 0] = HEAP8[i1 + 24 >> 0] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 28 | 0, i1 + 28 | 0);
 return i2 | 0;
}

function __ZN5boost6spirit7classic4impl14object_with_idINS2_11grammar_tagEjED2Ev(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i6 + 8 >> 2] | 0;
 i3 = HEAP32[i6 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 do if ((HEAP32[i3 >> 2] | 0) != (i2 | 0)) {
  i4 = i3 + 8 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 12 >> 2] | 0)) {
   __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_(i3 + 4 | 0, i1);
   break;
  } else {
   HEAP32[i5 >> 2] = i2;
   HEAP32[i4 >> 2] = i5 + 4;
   break;
  }
 } else HEAP32[i3 >> 2] = i2 + -1; while (0);
 i1 = HEAP32[i6 + 4 >> 2] | 0;
 if (!i1) {
  STACKTOP = i7;
  return;
 }
 i5 = i1 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i6 - 1;
 if ((i6 | 0) != 1) {
  STACKTOP = i7;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i5 = i1 + 8 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i6 - 1;
 if ((i6 | 0) != 1) {
  STACKTOP = i7;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 STACKTOP = i7;
 return;
}

function __ZNSt3__16vectorIP17implicit_functionNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoll_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  L7 : do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   do if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0) {
     i1 = 2147483647;
     break L7;
    }
   } else {
    if ((i2 | 0) < -1 | (i2 | 0) == -1 & i1 >>> 0 < 2147483648) {
     HEAP32[i7 >> 2] = 4;
     break;
    }
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 2147483647) {
     HEAP32[i7 >> 2] = 4;
     i1 = 2147483647;
     break L7;
    } else break L7;
   } while (0);
   i1 = -2147483648;
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 }
 STACKTOP = i9;
 return i1 | 0;
}

function _unset_x() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 i2 = HEAP32[12835] | 0;
 if (!i2) {
  i2 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30704, 41) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i4) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  STACKTOP = i3;
  return;
 }
 i1 = HEAP32[i2 + 56 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 __ZdlPv(i2);
 i1 = HEAP32[12837] | 0;
 if (i1 | 0) {
  i2 = HEAP32[i1 + 40 >> 2] | 0;
  if (i2 | 0) __ZdlPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[12836] | 0;
 if (i1 | 0) {
  i2 = HEAP32[i1 + 56 >> 2] | 0;
  if (i2 | 0) __ZdlPv(i2);
  __ZdlPv(i1);
 }
 HEAP32[12835] = 0;
 HEAP32[12837] = 0;
 HEAP32[12836] = 0;
 STACKTOP = i3;
 return;
}

function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i6 = i10 + 4 | 0;
 i7 = HEAP32[i10 >> 2] | 0;
 i1 = ((HEAP32[i6 >> 2] | 0) - i7 >> 2) + 1 | 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
 i8 = i10 + 8 | 0;
 i2 = (HEAP32[i8 >> 2] | 0) - i7 | 0;
 if (i2 >> 2 >>> 0 < 536870911) {
  i3 = i2 >> 1;
  i1 = i3 >>> 0 < i1 >>> 0 ? i1 : i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = i3 - i7 >> 2;
  if (!i1) {
   i5 = 0;
   i4 = 0;
   i1 = i3;
  } else i11 = 6;
 } else {
  i2 = HEAP32[i6 >> 2] | 0;
  i1 = 1073741823;
  i3 = i2;
  i2 = i2 - i7 >> 2;
  i11 = 6;
 }
 if ((i11 | 0) == 6) {
  i5 = i1;
  i4 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 i11 = i4 + (i2 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 i3 = i1 - i7 | 0;
 i9 = i11 + (0 - (i3 >> 2) << 2) | 0;
 _memcpy(i9 | 0, i7 | 0, i3 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i6 >> 2] = i11 + 4;
 HEAP32[i8 >> 2] = i4 + (i5 << 2);
 if (!i7) return;
 __ZdlPv(i7);
 return;
}

function _finish_geometry() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i4;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  STACKTOP = i4;
  return;
 }
 i1 = HEAP32[12833] | 0;
 if (!i1) {
  i1 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52104, 30499, 53) | 0;
  HEAP32[i2 >> 2] = __ZNKSt3__18ios_base6getlocEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 52980) | 0;
  i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, 10) | 0;
  __ZNSt3__16localeD2Ev(i2);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i1, i5) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  i1 = HEAP32[12833] | 0;
  if (i1 | 0) i3 = 5;
 } else i3 = 5;
 if ((i3 | 0) == 5) {
  __ZN13MarchingCubesD2Ev(i1);
  __ZdlPv(i1);
 }
 HEAP8[51328] = 0;
 HEAP32[12833] = 0;
 STACKTOP = i4;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i11, i10, i1, i4, i8, i9, i7, i5) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 if ((1073741806 - i10 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i11);
 if (!(HEAP8[i11 >> 0] & 1)) i6 = i11 + 4 | 0; else i6 = HEAP32[i11 + 8 >> 2] | 0;
 if (i10 >>> 0 < 536870887) {
  i2 = i1 + i10 | 0;
  i3 = i10 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 2 ? 2 : i2 + 4 & -4;
 } else i2 = 1073741807;
 i3 = __Znwj(i2 << 2) | 0;
 if (i8 | 0) _wmemcpy(i3, i6, i8) | 0;
 if (i7 | 0) _wmemcpy(i3 + (i8 << 2) | 0, i5, i7) | 0;
 i1 = i4 - i9 | 0;
 if ((i1 | 0) != (i8 | 0)) _wmemcpy(i3 + (i8 << 2) + (i7 << 2) | 0, i6 + (i8 << 2) + (i9 << 2) | 0, i1 - i8 | 0) | 0;
 if ((i10 | 0) != 1) __ZdlPv(i6);
 HEAP32[i11 + 8 >> 2] = i3;
 HEAP32[i11 >> 2] = i2 | 1;
 i10 = i1 + i7 | 0;
 HEAP32[i11 + 4 >> 2] = i10;
 HEAP32[i3 + (i10 << 2) >> 2] = 0;
 return;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE5cloneEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i1 = __Znwj(44) | 0;
 i2 = i1 + 40 | 0;
 HEAP32[i2 >> 2] = 20780;
 HEAP32[i1 >> 2] = 21124;
 HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1 + 8 | 0, i5 + 8 | 0);
 i4 = i1 + 20 | 0;
 HEAP32[i4 >> 2] = 20880;
 i3 = HEAP32[i5 + 24 >> 2] | 0;
 HEAP32[i1 + 24 >> 2] = i3;
 if (i3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 255](i3);
 i3 = i1 + 28 | 0;
 i6 = i5 + 28 | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i1 >> 2] = 21008;
 HEAP32[i4 >> 2] = 21036;
 HEAP32[i2 >> 2] = 21064;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i4, i5 + 20 | 0);
 return i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_ED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21168;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 __ZdlPv(i1);
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_ED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21168;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function ___fwritex(i3, i4, i6) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i7 = 0;
 i1 = i6 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) if (!(___towrite(i6) | 0)) {
  i2 = HEAP32[i1 >> 2] | 0;
  i5 = 5;
 } else i1 = 0; else i5 = 5;
 L5 : do if ((i5 | 0) == 5) {
  i7 = i6 + 20 | 0;
  i1 = HEAP32[i7 >> 2] | 0;
  i5 = i1;
  if ((i2 - i1 | 0) >>> 0 < i4 >>> 0) {
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 31](i6, i3, i4) | 0;
   break;
  }
  L10 : do if ((HEAP8[i6 + 75 >> 0] | 0) > -1) {
   i1 = i4;
   while (1) {
    if (!i1) {
     i2 = i5;
     i1 = 0;
     break L10;
    }
    i2 = i1 + -1 | 0;
    if ((HEAP8[i3 + i2 >> 0] | 0) == 10) break; else i1 = i2;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 31](i6, i3, i1) | 0) >>> 0 < i1 >>> 0) break L5;
   i4 = i4 - i1 | 0;
   i3 = i3 + i1 | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  } else {
   i2 = i5;
   i1 = 0;
  } while (0);
  _memcpy(i2 | 0, i3 | 0, i4 | 0) | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i4;
  i1 = i1 + i4 | 0;
 } while (0);
 return i1 | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE5cloneEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i3 = __Znwj(36) | 0;
 i4 = i3 + 32 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i3, i5);
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 i1 = i3 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i5 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i3 + 20 | 0;
 i6 = i5 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i3 >> 2] = 21372;
 HEAP32[i1 >> 2] = 21400;
 HEAP32[i4 >> 2] = 21428;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i1, i5 + 12 | 0);
 return i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE5cloneEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i3 = __Znwj(36) | 0;
 i4 = i3 + 32 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i3, i5);
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 i1 = i3 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i5 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i3 + 20 | 0;
 i6 = i5 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i3 >> 2] = 21612;
 HEAP32[i1 >> 2] = 21640;
 HEAP32[i4 >> 2] = 21668;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i1, i5 + 12 | 0);
 return i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = __Znwj(52) | 0;
 HEAP32[i3 >> 2] = 21216;
 i4 = i3 + 4 | 0;
 i1 = i1 + 4 | 0;
 i2 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  i4 = i4 + 4 | 0;
  i1 = i1 + 4 | 0;
 } while ((i4 | 0) < (i2 | 0));
 return i3 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i11, i10, i1, i4, i8, i9, i7, i5) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 if ((-18 - i10 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i11);
 if (!(HEAP8[i11 >> 0] & 1)) i6 = i11 + 1 | 0; else i6 = HEAP32[i11 + 8 >> 2] | 0;
 if (i10 >>> 0 < 2147483623) {
  i2 = i1 + i10 | 0;
  i3 = i10 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwj(i2) | 0;
 if (i8 | 0) _memcpy(i3 | 0, i6 | 0, i8 | 0) | 0;
 if (i7 | 0) _memcpy(i3 + i8 | 0, i5 | 0, i7 | 0) | 0;
 i1 = i4 - i9 | 0;
 if ((i1 | 0) != (i8 | 0)) _memcpy(i3 + i8 + i7 | 0, i6 + i8 + i9 | 0, i1 - i8 | 0) | 0;
 if ((i10 | 0) != 10) __ZdlPv(i6);
 HEAP32[i11 + 8 >> 2] = i3;
 HEAP32[i11 >> 2] = i2 | 1;
 i10 = i1 + i7 | 0;
 HEAP32[i11 + 4 >> 2] = i10;
 HEAP8[i3 + i10 >> 0] = 0;
 return;
}

function __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEEvRKT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = ___cxa_allocate_exception(36) | 0;
 __ZNSt13runtime_errorC2ERKS_(i3, i5);
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 i1 = i3 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i5 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i3 + 20 | 0;
 i5 = i5 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i3 >> 2] = 21692;
 HEAP32[i1 >> 2] = 21712;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEC1ERKS5_(i4, i3);
 ___cxa_throw(i4 | 0, 872, 117);
}

function __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEEvRKT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = ___cxa_allocate_exception(36) | 0;
 __ZNSt13runtime_errorC2ERKS_(i3, i5);
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 i1 = i3 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i5 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i3 + 20 | 0;
 i5 = i5 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i3 >> 2] = 21452;
 HEAP32[i1 >> 2] = 21472;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEC1ERKS5_(i4, i3);
 ___cxa_throw(i4 | 0, 760, 99);
}

function _vsnprintf(i3, i1, i10, i8) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i2 = i11 + 112 | 0;
 i9 = i11;
 i4 = i9;
 i5 = 22332;
 i6 = i4 + 112 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
 } while ((i4 | 0) < (i6 | 0));
 if ((i1 + -1 | 0) >>> 0 > 2147483646) if (!i1) {
  i1 = 1;
  i7 = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  i1 = -1;
 } else {
  i2 = i3;
  i7 = 4;
 }
 if ((i7 | 0) == 4) {
  i7 = -2 - i2 | 0;
  i7 = i1 >>> 0 > i7 >>> 0 ? i7 : i1;
  HEAP32[i9 + 48 >> 2] = i7;
  i3 = i9 + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i9 + 44 >> 2] = i2;
  i1 = i2 + i7 | 0;
  i2 = i9 + 16 | 0;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i9 + 28 >> 2] = i1;
  i1 = _vfprintf(i9, i10, i8) | 0;
  if (i7) {
   i10 = HEAP32[i3 >> 2] | 0;
   HEAP8[i10 + (((i10 | 0) == (HEAP32[i2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
  }
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i14 = i6 + 8 | 0;
 i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i14 >> 2] | 0) + 20 >> 2] & 127](i14) | 0;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i12 = HEAP8[i14 >> 0] | 0;
 i13 = (i12 & 1) == 0;
 i2 = i14 + 4 | 0;
 i1 = i13 ? i2 : HEAP32[i14 + 8 >> 2] | 0;
 i2 = i1 + ((i13 ? (i12 & 255) >>> 1 : HEAP32[i2 >> 2] | 0) << 2) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i6, i9, i8, i4, i3, i5, i1, i2) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZN13MarchingCubes12reset_resultEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 HEAP32[i5 + 528 >> 2] = 0;
 i1 = i5 + 492 | 0;
 i2 = i5 + 500 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i2 >> 2] | 0) - i4 >> 2 >>> 0 < 30 ? (i7 = i5 + 496 | 0, i10 = (HEAP32[i7 >> 2] | 0) - i4 | 0, i9 = i10 >> 2, i6 = __Znwj(120) | 0, i8 = i6 + (i9 << 2) | 0, i9 = i8 + (0 - i9 << 2) | 0, i3 = i4, _memcpy(i9 | 0, i3 | 0, i10 | 0) | 0, HEAP32[i1 >> 2] = i9, HEAP32[i7 >> 2] = i8, HEAP32[i2 >> 2] = i6 + 120, i4 | 0) : 0) __ZdlPv(i3);
 i2 = i5 + 504 | 0;
 i3 = i5 + 512 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 if ((HEAP32[i3 >> 2] | 0) - i4 >> 2 >>> 0 >= 30) return;
 i9 = i5 + 508 | 0;
 i6 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
 i7 = i6 >> 2;
 i10 = __Znwj(120) | 0;
 i8 = i10 + (i7 << 2) | 0;
 i7 = i8 + (0 - i7 << 2) | 0;
 i1 = i4;
 _memcpy(i7 | 0, i1 | 0, i6 | 0) | 0;
 HEAP32[i2 >> 2] = i7;
 HEAP32[i9 >> 2] = i8;
 HEAP32[i3 >> 2] = i10 + 120;
 if (!i4) return;
 __ZdlPv(i1);
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEC1ERKSH_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i1 = i3 + 40 | 0;
 HEAP32[i1 >> 2] = 20780;
 HEAP32[i3 >> 2] = 21124;
 HEAP32[i3 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3 + 8 | 0, i4 + 8 | 0);
 HEAP32[i3 + 20 >> 2] = 20880;
 i2 = HEAP32[i4 + 24 >> 2] | 0;
 HEAP32[i3 + 24 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i3 + 28 | 0;
 i5 = i4 + 28 | 0;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i3 >> 2] = 21008;
 i3 = i3 + 20 | 0;
 HEAP32[i3 >> 2] = 21036;
 HEAP32[i1 >> 2] = 21064;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i3, i4 + 20 | 0);
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_ED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21144;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 36 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i6 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP8[i12 >> 0] | 0;
 i13 = (i2 & 1) == 0;
 i1 = i13 ? i12 + 1 | 0 : HEAP32[i12 + 8 >> 2] | 0;
 i2 = i1 + (i13 ? (i2 & 255) >>> 1 : HEAP32[i12 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i6, i9, i8, i4, i3, i5, i1, i2) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_ED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21144;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 36 | 0);
 return;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(i6, i7, i1, i2, i5, i3, i4) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i1 = i8 + 4 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i6 + 8 | 0, i1, i2, i5, i3, i4);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i3 = HEAP8[i5 >> 0] | 0;
  do if (i1) {
   i4 = i1 + 24 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) {
    i7 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i3 & 255) | 0) == -1;
    i1 = i7 ? 0 : i1;
    break;
   } else {
    HEAP32[i4 >> 2] = i2 + 1;
    HEAP8[i2 >> 0] = i3;
    break;
   }
  } else i1 = 0; while (0);
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEC1ERKS5_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i2 = i3 + 32 | 0;
 HEAP32[i2 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i3, i4);
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i4 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = HEAP32[i4 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i1;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = i3 + 20 | 0;
 i5 = i4 + 20 | 0;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i3 >> 2] = 21372;
 i3 = i3 + 12 | 0;
 HEAP32[i3 >> 2] = 21400;
 HEAP32[i2 >> 2] = 21428;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i3, i4 + 12 | 0);
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEC1ERKS5_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i2 = i3 + 32 | 0;
 HEAP32[i2 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i3, i4);
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i4 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = HEAP32[i4 + 16 >> 2] | 0;
 HEAP32[i3 + 16 >> 2] = i1;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 i1 = i3 + 20 | 0;
 i5 = i4 + 20 | 0;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
 HEAP32[i3 >> 2] = 21612;
 i3 = i3 + 12 | 0;
 HEAP32[i3 >> 2] = 21640;
 HEAP32[i2 >> 2] = 21668;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i3, i4 + 12 | 0);
 return;
}

function ___shgetc(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i2 = i6 + 104 | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 if ((i5 | 0) != 0 ? (HEAP32[i6 + 108 >> 2] | 0) >= (i5 | 0) : 0) i7 = 4; else {
  i1 = ___uflow(i6) | 0;
  if ((i1 | 0) >= 0) {
   i2 = HEAP32[i2 >> 2] | 0;
   i5 = HEAP32[i6 + 8 >> 2] | 0;
   if (i2) {
    i4 = HEAP32[i6 + 4 >> 2] | 0;
    i2 = i2 - (HEAP32[i6 + 108 >> 2] | 0) | 0;
    i3 = i5;
    if ((i5 - i4 | 0) < (i2 | 0)) i7 = 9; else HEAP32[i6 + 100 >> 2] = i4 + (i2 + -1);
   } else {
    i3 = i5;
    i7 = 9;
   }
   if ((i7 | 0) == 9) HEAP32[i6 + 100 >> 2] = i5;
   i2 = i6 + 4 | 0;
   if (!i3) i2 = HEAP32[i2 >> 2] | 0; else {
    i2 = HEAP32[i2 >> 2] | 0;
    i6 = i6 + 108 | 0;
    HEAP32[i6 >> 2] = i3 + 1 - i2 + (HEAP32[i6 >> 2] | 0);
   }
   i2 = i2 + -1 | 0;
   if ((HEAPU8[i2 >> 0] | 0 | 0) != (i1 | 0)) HEAP8[i2 >> 0] = i1;
  } else i7 = 4;
 }
 if ((i7 | 0) == 4) {
  HEAP32[i6 + 100 >> 2] = 0;
  i1 = -1;
 }
 return i1 | 0;
}

function _calculate_implicit_gradients() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5;
 i2 = HEAP32[12835] | 0;
 i3 = HEAP32[12836] | 0;
 i4 = HEAP32[12834] | 0;
 if ((i2 | 0) == 0 | (i3 | 0) == 0 | (i4 | 0) == 0) {
  i4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30746, 50) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 31](i3, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i3) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  STACKTOP = i5;
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] & 31](i4, i2, i3);
  STACKTOP = i5;
  return;
 }
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE3getEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i6;
 i5 = i4 + 4 | 0;
 HEAP32[i5 >> 2] = 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i3, i4, 1);
 do if (!(HEAP8[i3 >> 0] | 0)) i1 = -1; else {
  i2 = HEAP32[i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i3 = i2 + 12 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
   i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
   if ((i1 | 0) == -1) {
    i5 = i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0;
    i1 = i5 + 16 | 0;
    HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | (HEAP32[i5 + 24 >> 2] | 0) == 0 | 6;
    i1 = -1;
    break;
   }
  } else {
   HEAP32[i3 >> 2] = i1 + 1;
   i1 = HEAPU8[i1 >> 0] | 0;
  }
  HEAP32[i5 >> 2] = 1;
 } while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_ED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21320;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 32 | 0);
 __ZdlPv(i1);
 return;
}

function __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i1 | 0) != 0 ? (i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i1) | 0, (i2 | 0) != 0) : 0) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
  FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  i5 = i2;
 } else i5 = 0;
 HEAP32[i3 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
 HEAP32[i3 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
 i1 = i3 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i1 >> 2] = i5;
 if (!i5) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 255](i5);
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i5) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i8;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i6, i7);
 L1 : do if (HEAP8[i6 >> 0] | 0) {
  i3 = HEAP32[i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i4 = i3;
  do if (i3 | 0) {
   i1 = i4 + 24 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 28 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] & 31](i4, i5 & 255) | 0) == -1) break; else break L1; else {
    HEAP32[i1 >> 2] = i2 + 1;
    HEAP8[i2 >> 0] = i5;
    break L1;
   }
  } while (0);
  i5 = i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
  HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 1;
 } while (0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
 STACKTOP = i8;
 return i7 | 0;
}

function _calculate_implicit_values() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5;
 i2 = HEAP32[12835] | 0;
 i3 = HEAP32[12837] | 0;
 i4 = HEAP32[12834] | 0;
 if ((i2 | 0) == 0 | (i3 | 0) == 0 | (i4 | 0) == 0) {
  i4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30746, 50) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 31](i3, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i3) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  STACKTOP = i5;
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[HEAP32[i4 >> 2] >> 2] & 31](i4, i2, i3);
  STACKTOP = i5;
  return;
 }
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_ED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21320;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 32 | 0);
 return;
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(i6, i7, i1, i2, i5, i3, i4) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 i1 = i8 + 8 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(i6 + 8 | 0, i1, i2, i5, i3, i4);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i4 = i1 + 24 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i2) | 0; else {
    HEAP32[i4 >> 2] = i3 + 4;
    HEAP32[i3 >> 2] = i2;
   }
   i1 = (i2 | 0) == -1 ? 0 : i1;
  }
  i5 = i5 + 4 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN5boost10shared_ptrINS_6spirit7classic4impl26object_with_id_base_supplyIjEEEC2IS5_EEPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3;
 HEAP32[i2 >> 2] = i1;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = 0;
 __ZN5boost6detail12shared_countC2INS_6spirit7classic4impl26object_with_id_base_supplyIjEEEEPT_(i4, i1);
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i1;
 i2 = i1;
 if (!i1) {
  STACKTOP = i3;
  return;
 }
 i5 = i2 + 4 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i4 - 1;
 if ((i4 | 0) != 1) {
  STACKTOP = i3;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i2);
 i4 = i2 + 8 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = i5 - 1;
 if ((i5 | 0) != 1) {
  STACKTOP = i3;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i2);
 STACKTOP = i3;
 return;
}

function __ZNK12mp5_implicit15double_mushroom6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 32 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit11unit_sphere6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 20 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 24 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 65535 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else {
   i1 = i1 & 65535;
   break;
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 >> 2] = 21296;
 i3 = i2 + 4 | 0;
 i1 = i1 + 4 | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 return i2 | 0;
}

function __ZNK12mp5_implicit11transformed6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 4 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 8 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit9scylinder6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 32 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function _get_gradients_size() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2;
 if ((HEAP32[12835] | 0) == 0 | (HEAP32[12837] | 0) == 0 | (HEAP32[12834] | 0) == 0) {
  i3 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30746, 50) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i4) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  i1 = 0;
  STACKTOP = i2;
  return i1 | 0;
 } else {
  i4 = (HEAP32[(HEAP32[12836] | 0) + 16 >> 2] | 0) * 3 | 0;
  STACKTOP = i2;
  return i4 | 0;
 }
 return 0;
}

function __ZNK12mp5_implicit5scone6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 32 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function __ZN5boost6spirit7classic7grammarINS_13property_tree11json_parser12json_grammarINS3_11basic_ptreeINSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEESD_NS7_4lessISD_EEEEEENS1_14parser_contextINS1_5nil_tEEEED2Ev(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i4 = i5 + 16 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = i5 + 12 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) != (i3 | 0)) {
  do {
   i1 = i1 + -4 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
   FUNCTION_TABLE_iii[HEAP32[HEAP32[i6 >> 2] >> 2] & 31](i6, i5) | 0;
  } while ((i1 | 0) != (i3 | 0));
  i1 = HEAP32[i2 >> 2] | 0;
 }
 if (!i1) {
  __ZN5boost6spirit7classic4impl14object_with_idINS2_11grammar_tagEjED2Ev(i5);
  return;
 }
 i2 = HEAP32[i4 >> 2] | 0;
 if ((i2 | 0) != (i1 | 0)) HEAP32[i4 >> 2] = i2 + (~((i2 + -4 - i1 | 0) >>> 2) << 2);
 __ZdlPv(i1);
 __ZN5boost6spirit7classic4impl14object_with_idINS2_11grammar_tagEjED2Ev(i5);
 return;
}

function __ZNK12mp5_implicit4cube6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 88 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 92 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit3egg6resizeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, i4 = 0;
 i3 = i2 + 28 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 8 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 16 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 24 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 32 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 36 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 i4 = (HEAP32[i3 >> 2] | 0) + 40 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i4 >> 2] * d1;
 __Z12InvertMatrixPKfPf(HEAP32[i3 >> 2] | 0, HEAP32[i2 + 32 >> 2] | 0) | 0;
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEC2ERKS5_(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 __ZNSt13runtime_errorC2ERKS_(i4, i1);
 HEAP32[i4 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 8 | 0, i1 + 8 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 20 | 0, i1 + 20 | 0);
 HEAP32[i4 + 32 >> 2] = HEAP32[i1 + 32 >> 2];
 HEAP32[i4 >> 2] = 20840;
 i3 = i4 + 36 | 0;
 HEAP32[i3 >> 2] = 20880;
 i2 = HEAP32[i1 + 40 >> 2] | 0;
 HEAP32[i4 + 40 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i4 + 44 | 0;
 i1 = i1 + 44 | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i4 >> 2] = 20804;
 HEAP32[i3 >> 2] = 20824;
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEC1ERKSI_(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = i5 + 40 | 0;
 HEAP32[i2 >> 2] = 20780;
 HEAP32[i5 >> 2] = 21124;
 HEAP32[i5 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5 + 8 | 0, i1 + 8 | 0);
 i4 = i5 + 20 | 0;
 HEAP32[i4 >> 2] = 20880;
 i3 = HEAP32[i1 + 24 >> 2] | 0;
 HEAP32[i5 + 24 >> 2] = i3;
 if (i3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 255](i3);
 i3 = i5 + 28 | 0;
 i1 = i1 + 28 | 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i5 >> 2] = 21008;
 HEAP32[i4 >> 2] = 21036;
 HEAP32[i2 >> 2] = 21064;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i2, i5, i3, i1, i4) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 HEAP8[i5 + 53 >> 0] = 1;
 do if ((HEAP32[i5 + 4 >> 2] | 0) == (i1 | 0)) {
  HEAP8[i5 + 52 >> 0] = 1;
  i1 = i5 + 16 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i5 + 24 >> 2] = i4;
   HEAP32[i5 + 36 >> 2] = 1;
   if (!((i4 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i5 + 36 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  i2 = i5 + 24 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i2 >> 2] = i4;
   i1 = i4;
  }
  if ((i1 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0) HEAP8[i5 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i10, i9, i1, i4, i7, i8, i6) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((1073741807 - i9 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i10);
 if (!(HEAP8[i10 >> 0] & 1)) i5 = i10 + 4 | 0; else i5 = HEAP32[i10 + 8 >> 2] | 0;
 if (i9 >>> 0 < 536870887) {
  i2 = i1 + i9 | 0;
  i3 = i9 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 2 ? 2 : i2 + 4 & -4;
 } else i2 = 1073741807;
 i3 = __Znwj(i2 << 2) | 0;
 if (i7 | 0) _wmemcpy(i3, i5, i7) | 0;
 i1 = i4 - i8 | 0;
 if ((i1 | 0) != (i7 | 0)) _wmemcpy(i3 + (i7 << 2) + (i6 << 2) | 0, i5 + (i7 << 2) + (i8 << 2) | 0, i1 - i7 | 0) | 0;
 if ((i9 | 0) != 1) __ZdlPv(i5);
 HEAP32[i10 + 8 >> 2] = i3;
 HEAP32[i10 >> 2] = i2 | 1;
 return;
}

function __ZN5boost13property_tree11json_parser12json_grammarINS0_11basic_ptreeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_NS4_4lessISA_EEEEEC2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = __ZN5boost6spirit7classic4impl19object_with_id_baseINS2_11grammar_tagEjE17acquire_object_idEv(i2) | 0;
 i1 = i2 + 60 | 0;
 i3 = i2 + 12 | 0;
 i4 = i3 + 48 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 i4 = __Znwj(16) | 0;
 i5 = __Znwj(48) | 0;
 HEAP32[i4 + 4 >> 2] = i5;
 i3 = i5 + 28 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i5 + 32 >> 2] = i3;
 HEAP32[i5 + 36 >> 2] = i3;
 i3 = i5 + 40 | 0;
 HEAP32[i5 + 44 >> 2] = i3;
 HEAP32[i3 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i1 >> 2] = i4;
 HEAP32[i2 + 64 >> 2] = 0;
 HEAP32[i2 + 68 >> 2] = 0;
 HEAP32[i2 + 72 >> 2] = 0;
 return;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function _get_gradients_ptr() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2;
 if ((HEAP32[12835] | 0) == 0 | (HEAP32[12837] | 0) == 0 | (HEAP32[12834] | 0) == 0) {
  i3 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30746, 50) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i4) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
  i1 = 0;
  STACKTOP = i2;
  return i1 | 0;
 } else {
  i4 = HEAP32[HEAP32[12836] >> 2] | 0;
  STACKTOP = i2;
  return i4 | 0;
 }
 return 0;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEC1ERKS6_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = i5 + 32 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i5, i3);
 HEAP32[i5 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i5 + 8 >> 2] = i1;
 i1 = i5 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i3 + 16 >> 2] | 0;
 HEAP32[i5 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i5 + 20 | 0;
 i3 = i3 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i5 >> 2] = 21372;
 HEAP32[i1 >> 2] = 21400;
 HEAP32[i4 >> 2] = 21428;
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEC1ERKS6_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = i5 + 32 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZNSt13runtime_errorC2ERKS_(i5, i3);
 HEAP32[i5 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i5 + 8 >> 2] = i1;
 i1 = i5 + 12 | 0;
 HEAP32[i1 >> 2] = 20880;
 i2 = HEAP32[i3 + 16 >> 2] | 0;
 HEAP32[i5 + 16 >> 2] = i2;
 if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 255](i2);
 i2 = i5 + 20 | 0;
 i3 = i3 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i5 >> 2] = 21612;
 HEAP32[i1 >> 2] = 21640;
 HEAP32[i4 >> 2] = 21668;
 return;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i2 = 0;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    i1 = -1;
    i2 = -1;
   }
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 } while (0);
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN5boost13property_tree17file_parser_errorC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_m(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 __ZN5boost13property_tree17file_parser_error11format_whatERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_m(i6, i3, i1, i2);
 __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i4, i6);
 HEAP32[i4 >> 2] = 19952;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 HEAP32[i4 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 8 | 0, i3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 20 | 0, i1);
 HEAP32[i4 + 32 >> 2] = i2;
 STACKTOP = i5;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i10, i9, i1, i4, i7, i8, i6) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((-17 - i9 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i10);
 if (!(HEAP8[i10 >> 0] & 1)) i5 = i10 + 1 | 0; else i5 = HEAP32[i10 + 8 >> 2] | 0;
 if (i9 >>> 0 < 2147483623) {
  i2 = i1 + i9 | 0;
  i3 = i9 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwj(i2) | 0;
 if (i7 | 0) _memcpy(i3 | 0, i5 | 0, i7 | 0) | 0;
 i1 = i4 - i8 | 0;
 if ((i1 | 0) != (i7 | 0)) _memcpy(i3 + i7 + i6 | 0, i5 + i7 + i8 | 0, i1 - i7 | 0) | 0;
 if ((i9 | 0) != 10) __ZdlPv(i5);
 HEAP32[i10 + 8 >> 2] = i3;
 HEAP32[i10 >> 2] = i2 | 1;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i5, i3, i1, i2, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i3 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i7 >> 2] = i3;
 i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 53012) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 48 >> 2] & 7](i8, 47802, 47834, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 53020) | 0;
 HEAP32[i2 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i4 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i5, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i3) | 0;
 STACKTOP = i6;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (HEAP32[i5 + 8 >> 2] | 0)) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  i2 = i1 + 16 + (i3 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i5, i4, i6);
  if ((i3 | 0) > 1) {
   i3 = i5 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6);
    if (HEAP8[i3 >> 0] | 0) break L1;
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i2 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i5, i4, i6); while (0);
 return;
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i5, i3, i1, i2, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i3 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i7 >> 2] = i3;
 i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 52980) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 32 >> 2] & 7](i8, 47802, 47834, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 52992) | 0;
 HEAP8[i2 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP8[i4 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i5, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i3) | 0;
 STACKTOP = i6;
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_ED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20980;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 do if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  if ((HEAP32[i4 + 4 >> 2] | 0) == (i3 | 0) ? (i2 = i4 + 28 | 0, (HEAP32[i2 >> 2] | 0) != 1) : 0) HEAP32[i2 >> 2] = i5;
 } else if ((i6 | 0) == (HEAP32[i4 >> 2] | 0)) {
  if ((HEAP32[i4 + 16 >> 2] | 0) != (i3 | 0) ? (i1 = i4 + 20 | 0, (HEAP32[i1 >> 2] | 0) != (i3 | 0)) : 0) {
   HEAP32[i4 + 32 >> 2] = i5;
   HEAP32[i1 >> 2] = i3;
   i7 = i4 + 40 | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
   if ((HEAP32[i4 + 36 >> 2] | 0) == 1 ? (HEAP32[i4 + 24 >> 2] | 0) == 2 : 0) HEAP8[i4 + 54 >> 0] = 1;
   HEAP32[i4 + 44 >> 2] = 4;
   break;
  }
  if ((i5 | 0) == 1) HEAP32[i4 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN5boost16exception_detail16throw_exception_INS_13property_tree11json_parser17json_parser_errorEEEvRKT_PKcS9_i(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 __ZNSt13runtime_errorC2ERKS_(i5, i4);
 HEAP32[i5 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5 + 8 | 0, i4 + 8 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5 + 20 | 0, i4 + 20 | 0);
 HEAP32[i5 + 32 >> 2] = HEAP32[i4 + 32 >> 2];
 HEAP32[i5 + 40 >> 2] = 0;
 HEAP32[i5 >> 2] = 20804;
 HEAP32[i5 + 36 >> 2] = 20824;
 HEAP32[i5 + 44 >> 2] = i1;
 HEAP32[i5 + 48 >> 2] = i2;
 HEAP32[i5 + 52 >> 2] = i3;
 __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEEEvRKT_(i5);
}

function __ZN5boost15throw_exceptionINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_11__wrap_iterIPcEEEEEEvRKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i2 = ___cxa_allocate_exception(44) | 0;
 HEAP32[i3 >> 2] = 21124;
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3 + 8 | 0, i1 + 8 | 0);
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAP32[i3 + 32 >> 2] = 0;
 HEAP32[i3 + 36 >> 2] = -1;
 HEAP32[i3 >> 2] = 21088;
 HEAP32[i3 + 20 >> 2] = 21108;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEC1ERKSH_(i2, i3);
 ___cxa_throw(i2 | 0, 544, 68);
}

function _unset_object() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 i2 = HEAP32[12834] | 0;
 if (!i2) {
  i2 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 30553, 63) | 0;
  HEAP32[i1 >> 2] = __ZNKSt3__18ios_base6getlocEv(i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 52980) | 0;
  i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 31](i4, 10) | 0;
  __ZNSt3__16localeD2Ev(i1);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i2, i4) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) | 0;
  STACKTOP = i3;
  return;
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 255](i2);
  HEAP32[12834] = 0;
  STACKTOP = i3;
  return;
 }
}

function __ZN5boost16exception_detail16throw_exception_INS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEEEvRKT_PKcSK_i(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 HEAP32[i5 >> 2] = 21124;
 HEAP32[i5 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i5 + 8 | 0, i4 + 8 | 0);
 HEAP32[i5 + 24 >> 2] = 0;
 HEAP32[i5 >> 2] = 21088;
 HEAP32[i5 + 20 >> 2] = 21108;
 HEAP32[i5 + 28 >> 2] = i1;
 HEAP32[i5 + 32 >> 2] = i2;
 HEAP32[i5 + 36 >> 2] = i3;
 __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEEvRKT_(i5);
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE7disposeEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 return;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoll_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    i2 = (i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0;
    i1 = i2 ? -1 : 0;
    i2 = i2 ? 2147483647 : -2147483648;
   }
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 }
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIwE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 8 | 0;
 i7 = i10;
 i3 = i1 + 36 | 0;
 i4 = i1 + 40 | 0;
 i5 = i8 + 8 | 0;
 i6 = i8;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i3 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i4 >> 2] | 0, i8, i5, i7) | 0;
  i11 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
  if ((_fwrite(i8, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 8 | 0;
 i7 = i10;
 i3 = i1 + 36 | 0;
 i4 = i1 + 40 | 0;
 i5 = i8 + 8 | 0;
 i6 = i8;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i3 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i4 >> 2] | 0, i8, i5, i7) | 0;
  i11 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
  if ((_fwrite(i8, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_ED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20980;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if (i5 | 0) {
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) i2 = 10; else {
   i1 = HEAP32[i6 >> 2] | 0;
   i2 = (i1 & -2) + -1 | 0;
   i1 = i1 & 255;
  }
  if (!(i1 & 1)) i3 = (i1 & 255) >>> 1; else i3 = HEAP32[i6 + 4 >> 2] | 0;
  if ((i2 - i3 | 0) >>> 0 < i5 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i6, i2, i5 - i2 + i3 | 0, i3, i3, 0, 0);
   i1 = HEAP8[i6 >> 0] | 0;
  }
  if (!(i1 & 1)) i2 = i6 + 1 | 0; else i2 = HEAP32[i6 + 8 >> 2] | 0;
  _memset(i2 + i3 | 0, i4 | 0, i5 | 0) | 0;
  i1 = i3 + i5 | 0;
  if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = i1 << 1; else HEAP32[i6 + 4 >> 2] = i1;
  HEAP8[i2 + i1 >> 0] = 0;
 }
 return i6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i3 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i2 = (i1 & 1) == 0;
 do if (i3 >>> 0 >= i4 >>> 0) {
  if (i2) i1 = i6 + 1 | 0; else i1 = HEAP32[i6 + 8 >> 2] | 0;
  _memmove(i1 | 0, i5 | 0, i4 | 0) | 0;
  HEAP8[i1 + i4 >> 0] = 0;
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 >> 0] = i4 << 1;
   break;
  } else {
   HEAP32[i6 + 4 >> 2] = i4;
   break;
  }
 } else {
  if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i6 + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i3, i4 - i3 | 0, i1, 0, i1, i4, i5);
 } while (0);
 return i6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i2 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i3 = (i1 & 255) >>> 1; else i3 = HEAP32[i6 + 4 >> 2] | 0;
 if ((i2 - i3 | 0) >>> 0 >= i4 >>> 0) {
  if (i4 | 0) {
   if (!(i1 & 1)) i2 = i6 + 1 | 0; else i2 = HEAP32[i6 + 8 >> 2] | 0;
   _memcpy(i2 + i3 | 0, i5 | 0, i4 | 0) | 0;
   i1 = i3 + i4 | 0;
   if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = i1 << 1; else HEAP32[i6 + 4 >> 2] = i1;
   HEAP8[i2 + i1 >> 0] = 0;
  }
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i2, i4 - i2 + i3 | 0, i3, i3, 0, i4, i5);
 return i6 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i3 = 1; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i2 = (i1 & 1) == 0;
 do if (i3 >>> 0 >= i4 >>> 0) {
  if (i2) i1 = i6 + 4 | 0; else i1 = HEAP32[i6 + 8 >> 2] | 0;
  _wmemmove(i1, i5, i4) | 0;
  HEAP32[i1 + (i4 << 2) >> 2] = 0;
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 >> 0] = i4 << 1;
   break;
  } else {
   HEAP32[i6 + 4 >> 2] = i4;
   break;
  }
 } else {
  if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i6 + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i6, i3, i4 - i3 | 0, i1, 0, i1, i4, i5);
 } while (0);
 return i6 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = i6 + 44 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i3 = HEAP32[i6 + 24 >> 2] | 0;
 if (i1 >>> 0 < i3 >>> 0) {
  HEAP32[i2 >> 2] = i3;
  i1 = i3;
 }
 i4 = i6 + 12 | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i6 + 8 >> 2] | 0) >>> 0 >= i2 >>> 0) {
  i6 = -1;
  return i6 | 0;
 }
 if ((i5 | 0) == -1) {
  HEAP32[i4 >> 2] = i2 + -1;
  HEAP32[i6 + 16 >> 2] = i1;
  i6 = 0;
  return i6 | 0;
 }
 if (!(HEAP32[i6 + 48 >> 2] & 16)) {
  i3 = i5 & 255;
  i2 = i2 + -1 | 0;
  if (i3 << 24 >> 24 != (HEAP8[i2 >> 0] | 0)) {
   i6 = -1;
   return i6 | 0;
  }
 } else {
  i3 = i5 & 255;
  i2 = i2 + -1 | 0;
 }
 HEAP32[i4 >> 2] = i2;
 HEAP32[i6 + 16 >> 2] = i1;
 HEAP8[i2 >> 0] = i3;
 i6 = i5;
 return i6 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i6, i1, i4) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i7;
 if ((i6 | 0) != (i1 | 0)) if ((i1 | 0) != 0 ? (i3 = ___dynamic_cast(i1, 2368, 2336, 0) | 0, (i3 | 0) != 0) : 0) {
  i1 = i5;
  i2 = i1 + 56 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i5 >> 2] = i3;
  HEAP32[i5 + 8 >> 2] = i6;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 15](i3, i5, HEAP32[i4 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i4 >> 2] = HEAP32[i5 + 16 >> 2];
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i7;
 return i1 | 0;
}

function _wcrtomb(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 do if (i1) {
  if (i3 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i3;
   i1 = 1;
   break;
  }
  if (i3 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i3 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i3 & 63 | 128;
   i1 = 2;
   break;
  }
  if (i3 >>> 0 < 55296 | (i3 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i3 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 & 63 | 128;
   i1 = 3;
   break;
  }
  if ((i3 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i3 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i3 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i3 & 63 | 128;
   i1 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   i1 = -1;
   break;
  }
 } else i1 = 1; while (0);
 return i1 | 0;
}

function __ZNK5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_E5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(20) | 0;
 HEAP32[i2 >> 2] = 21192;
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 8 | 0, i1 + 8 | 0);
 return i2 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 16 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 24 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 16 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 24 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i2, i4, i3, i5, i6) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 HEAP32[i6 >> 2] = i3;
 i3 = _uselocale(HEAP32[i2 + 8 >> 2] | 0) | 0;
 i2 = _wcrtomb(i1, 0, i4) | 0;
 if (i3 | 0) _uselocale(i3) | 0;
 L4 : do switch (i2 | 0) {
 case 0:
 case -1:
  {
   i1 = 2;
   break;
  }
 default:
  {
   i2 = i2 + -1 | 0;
   if (i2 >>> 0 > (i5 - (HEAP32[i6 >> 2] | 0) | 0) >>> 0) i1 = 1; else while (1) {
    if (!i2) {
     i1 = 0;
     break L4;
    }
    i4 = HEAP8[i1 >> 0] | 0;
    i5 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i4;
    i2 = i2 + -1 | 0;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 53012) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 20 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 52980) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 20 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 288 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 288 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) != 0;
 if (i2) {
  i3 = (HEAP32[i5 >> 2] & -2) + -1 | 0;
  i4 = HEAP32[i5 + 4 >> 2] | 0;
 } else {
  i3 = 1;
  i4 = (i1 & 255) >>> 1;
 }
 if ((i4 | 0) == (i3 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i5, i3, 1, i3, i3, 0, 0);
  if (!(HEAP8[i5 >> 0] & 1)) i2 = 7; else i2 = 8;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = (i4 << 1) + 2;
  i1 = i5 + 4 | 0;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 + 8 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i4 + 1;
 }
 i5 = i1 + (i4 << 2) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i5 + 4 >> 2] = 0;
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_ED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i4, i1, i6) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i5 = i1;
 i2 = i6 - i5 | 0;
 i3 = i2 >> 2;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i4);
 if (i3 >>> 0 < 2) {
  HEAP8[i4 >> 0] = i2 >>> 1;
  i4 = i4 + 4 | 0;
 } else {
  i7 = i3 + 4 & -4;
  i2 = __Znwj(i7 << 2) | 0;
  HEAP32[i4 + 8 >> 2] = i2;
  HEAP32[i4 >> 2] = i7 | 1;
  HEAP32[i4 + 4 >> 2] = i3;
  i4 = i2;
 }
 i3 = (i6 - i5 | 0) >>> 2;
 i2 = i4;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 }
 HEAP32[i4 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 168 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 168 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) != 0;
 if (i2) {
  i3 = (HEAP32[i5 >> 2] & -2) + -1 | 0;
  i4 = HEAP32[i5 + 4 >> 2] | 0;
 } else {
  i3 = 10;
  i4 = (i1 & 255) >>> 1;
 }
 if ((i4 | 0) == (i3 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i5, i3, 1, i3, i3, 0, 0);
  if (!(HEAP8[i5 >> 0] & 1)) i2 = 7; else i2 = 8;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = (i4 << 1) + 2;
  i1 = i5 + 1 | 0;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 + 8 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i4 + 1;
 }
 i5 = i1 + i4 | 0;
 HEAP8[i5 >> 0] = i6;
 HEAP8[i5 + 1 >> 0] = 0;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE11get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function ___remdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i5 | 0;
 i7 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i10 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i1 = _i64Subtract(i7 ^ i1 | 0, i6 ^ i2 | 0, i7 | 0, i6 | 0) | 0;
 i2 = tempRet0;
 ___udivmoddi4(i1, i2, _i64Subtract(i10 ^ i3 | 0, i9 ^ i4 | 0, i10 | 0, i9 | 0) | 0, tempRet0, i8) | 0;
 i4 = _i64Subtract(HEAP32[i8 >> 2] ^ i7 | 0, HEAP32[i8 + 4 >> 2] ^ i6 | 0, i7 | 0, i6 | 0) | 0;
 i3 = tempRet0;
 STACKTOP = i5;
 return (tempRet0 = i3, i4) | 0;
}

function __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEEEvRKT_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = ___cxa_allocate_exception(60) | 0;
 __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEC2ERKS5_(i3, i1);
 i4 = i2 + 56 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEC2ERKS5_(i2, i3);
 HEAP32[i2 >> 2] = 20700;
 i1 = i2 + 36 | 0;
 HEAP32[i1 >> 2] = 20728;
 HEAP32[i4 >> 2] = 20756;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i1, i3 + 36 | 0);
 ___cxa_throw(i2 | 0, 384, 41);
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i1, i2, i5, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 if (i4 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (!(i4 & 512)) i3 = i2; else {
  HEAP8[i1 >> 0] = 35;
  i3 = i2;
  i1 = i1 + 1 | 0;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L10 : do switch (i4 & 74 | 0) {
 case 64:
  {
   HEAP8[i1 >> 0] = 111;
   break;
  }
 case 8:
  if (!(i4 & 16384)) {
   HEAP8[i1 >> 0] = 120;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 88;
   break L10;
  }
 default:
  if (i5) {
   HEAP8[i1 >> 0] = 100;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 117;
   break L10;
  }
 } while (0);
 return;
}

function _fputc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 if ((HEAP32[i6 + 76 >> 2] | 0) >= 0 ? (___lockfile(i6) | 0) != 0 : 0) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i2 = i6 + 20 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i2 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i5;
   i1 = i5 & 255;
  } else i1 = ___overflow(i6, i5) | 0;
  ___unlockfile(i6);
 } else i7 = 3;
 do if ((i7 | 0) == 3) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i4 = i6 + 20 | 0, i1 = HEAP32[i4 >> 2] | 0, i1 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i4 >> 2] = i1 + 1;
   HEAP8[i1 >> 0] = i5;
   i1 = i5 & 255;
   break;
  }
  i1 = ___overflow(i6, i5) | 0;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 222;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 223;
 HEAP32[i8 >> 2] = i1 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + (i3 >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 222;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 223;
 HEAP32[i8 >> 2] = i1 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + (i3 >>> 2 << 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i1, i6) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i4 = i1;
 i2 = i6 - i4 | 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i3);
 if (i2 >>> 0 < 11) {
  HEAP8[i3 >> 0] = i2 << 1;
  i5 = i3 + 1 | 0;
 } else {
  i7 = i2 + 16 & -16;
  i5 = __Znwj(i7) | 0;
  HEAP32[i3 + 8 >> 2] = i5;
  HEAP32[i3 >> 2] = i7 | 1;
  HEAP32[i3 + 4 >> 2] = i2;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i5 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 i2 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i6 >> 2] = i2;
 i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 53012) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 48 >> 2] & 7](i7, 47802, 47828, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 53020) | 0;
 HEAP32[i3 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i4, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 STACKTOP = i5;
 return;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE19get_untyped_deleterEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 i2 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i6 >> 2] = i2;
 i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 52980) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] & 7](i7, 47802, 47828, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 52992) | 0;
 HEAP8[i3 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 63](i4, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 STACKTOP = i5;
 return;
}

function ___overflow(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i9;
 i5 = i6 & 255;
 HEAP8[i7 >> 0] = i5;
 i2 = i8 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) if (!(___towrite(i8) | 0)) {
  i3 = HEAP32[i2 >> 2] | 0;
  i4 = 4;
 } else i1 = -1; else i4 = 4;
 do if ((i4 | 0) == 4) {
  i2 = i8 + 20 | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 < i3 >>> 0 ? (i1 = i6 & 255, (i1 | 0) != (HEAP8[i8 + 75 >> 0] | 0)) : 0) {
   HEAP32[i2 >> 2] = i4 + 1;
   HEAP8[i4 >> 0] = i5;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i8 + 36 >> 2] & 31](i8, i7, 1) | 0) == 1) i1 = HEAPU8[i7 >> 0] | 0; else i1 = -1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 222;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 | 0;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 223;
 HEAP32[i8 >> 2] = i1 + i5;
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + i3;
 return;
}

function __ZN5boost16exception_detail16throw_exception_INS_13property_tree14ptree_bad_pathEEEvRKT_PKcS8_i(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 __ZNSt13runtime_errorC2ERKS_(i2, i1);
 HEAP32[i2 >> 2] = 2524;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i2 + 8 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 >> 2] = 21452;
 HEAP32[i2 + 12 >> 2] = 21472;
 HEAP32[i2 + 20 >> 2] = i3;
 HEAP32[i2 + 24 >> 2] = i4;
 HEAP32[i2 + 28 >> 2] = i5;
 __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEEvRKT_(i2);
}

function __ZN5boost16exception_detail16throw_exception_INS_13property_tree14ptree_bad_dataEEEvRKT_PKcS8_i(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 __ZNSt13runtime_errorC2ERKS_(i2, i1);
 HEAP32[i2 >> 2] = 2504;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (!i1) i1 = 0; else i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i2 + 8 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 >> 2] = 21692;
 HEAP32[i2 + 12 >> 2] = 21712;
 HEAP32[i2 + 20 >> 2] = i3;
 HEAP32[i2 + 24 >> 2] = i4;
 HEAP32[i2 + 28 >> 2] = i5;
 __ZN5boost15throw_exceptionINS_16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEEvRKT_(i2);
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_ED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21192;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50792] | 0) == 0 ? ___cxa_guard_acquire(50792) | 0 : 0) {
  if ((HEAP8[50800] | 0) == 0 ? ___cxa_guard_acquire(50800) | 0 : 0) {
   i1 = 54328;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 54616);
   ___cxa_guard_release(50800);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54328, 27604) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54340, 27616) | 0;
  HEAP32[13654] = 54328;
  ___cxa_guard_release(50792);
 }
 return HEAP32[13654] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[50712] | 0) == 0 ? ___cxa_guard_acquire(50712) | 0 : 0) {
  if ((HEAP8[50720] | 0) == 0 ? ___cxa_guard_acquire(50720) | 0 : 0) {
   i1 = 53516;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 53804);
   ___cxa_guard_release(50720);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53516, 48539) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53528, 48542) | 0;
  HEAP32[13451] = 53516;
  ___cxa_guard_release(50712);
 }
 return HEAP32[13451] | 0;
}

function _fflush(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (i2) {
  if ((HEAP32[i2 + 76 >> 2] | 0) <= -1) {
   i1 = ___fflush_unlocked(i2) | 0;
   break;
  }
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = ___fflush_unlocked(i2) | 0;
  if (!i3) ___unlockfile(i2);
 } else {
  if (!(HEAP32[5465] | 0)) i1 = 0; else i1 = _fflush(HEAP32[5465] | 0) | 0;
  ___lock(51408);
  i2 = HEAP32[12851] | 0;
  if (i2) do {
   if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
   if ((HEAP32[i2 + 20 >> 2] | 0) >>> 0 > (HEAP32[i2 + 28 >> 2] | 0) >>> 0) i1 = ___fflush_unlocked(i2) | 0 | i1;
   if (i3 | 0) ___unlockfile(i2);
   i2 = HEAP32[i2 + 56 >> 2] | 0;
  } while ((i2 | 0) != 0);
  ___unlock(51408);
 } while (0);
 return i1 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if (HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i1, i2);
  if (HEAP8[i1 >> 0] | 0 ? (i4 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0) == -1) : 0) {
   i4 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 1;
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1);
 }
 STACKTOP = i3;
 return i2 | 0;
}

function _pad(i6, i2, i5, i4, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 i7 = i8;
 do if ((i5 | 0) > (i4 | 0) & (i1 & 73728 | 0) == 0) {
  i1 = i5 - i4 | 0;
  _memset(i7 | 0, i2 | 0, (i1 >>> 0 > 256 ? 256 : i1) | 0) | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = (i2 & 32 | 0) == 0;
  if (i1 >>> 0 > 255) {
   i4 = i5 - i4 | 0;
   do {
    if (i3) {
     ___fwritex(i7, 256, i6) | 0;
     i2 = HEAP32[i6 >> 2] | 0;
    }
    i1 = i1 + -256 | 0;
    i3 = (i2 & 32 | 0) == 0;
   } while (i1 >>> 0 > 255);
   if (i3) i1 = i4 & 255; else break;
  } else if (!i3) break;
  ___fwritex(i7, i1, i6) | 0;
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_ED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21192;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZN5boost6detail20sp_pointer_constructINS_6spirit7classic11basic_chsetIcEES5_EEvPNS_10shared_ptrIT_EEPT0_RNS0_12shared_countE(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 + 4 >> 2] = 1;
 HEAP32[i2 + 8 >> 2] = 1;
 HEAP32[i2 >> 2] = 21264;
 HEAP32[i2 + 12 >> 2] = i1;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2;
 if (!i1) return;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i3 - 1;
 if ((i3 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 255](i1);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i6, i9, i8, i4, i3, i5, 26552, 26584) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i6, i9, i8, i4, i3, i5, 48276, 48284) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(i4, i5, i6, i3, i1, i2) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i10 = i7 + 16 | 0;
 i11 = i7 + 12 | 0;
 i8 = i7;
 i9 = i7 + 8 | 0;
 HEAP32[i11 >> 2] = i10 + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i4, i10, i11, i3, i1, i2);
 i2 = i8;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i9 >> 2] = i10;
 i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
 i1 = _uselocale(HEAP32[i4 >> 2] | 0) | 0;
 i2 = _mbsrtowcs(i5, i9, i2, i8) | 0;
 if (i1 | 0) _uselocale(i1) | 0;
 HEAP32[i6 >> 2] = i5 + (i2 << 2);
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i5, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i3, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 + -69 | 0) >>> 0 < 31 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i5, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i3, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 + -69 | 0) >>> 0 < 31 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj(i5, i6, i2, i7, i8) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i4 = (i1 & 1) == 0;
 if (i4) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i5 + 4 >> 2] | 0;
 if ((i8 | 0) == -1 | i1 >>> 0 < i6 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(i5);
 i3 = i1 - i6 | 0;
 i3 = i3 >>> 0 < i2 >>> 0 ? i3 : i2;
 if (i4) i1 = i5 + 1 | 0; else i1 = HEAP32[i5 + 8 >> 2] | 0;
 i2 = i3 >>> 0 > i8 >>> 0;
 i1 = _memcmp(i1 + i6 | 0, i7, i2 ? i8 : i3) | 0;
 if (!i1) return (i3 >>> 0 < i8 >>> 0 ? -1 : i2 & 1) | 0; else return i1 | 0;
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function _scalbn(d1, i3) {
 d1 = +d1;
 i3 = i3 | 0;
 var i2 = 0;
 if ((i3 | 0) > 1023) {
  d1 = d1 * 8988465674311579538646525.0e283;
  i2 = i3 + -1023 | 0;
  if ((i2 | 0) > 1023) {
   i2 = i3 + -2046 | 0;
   i2 = (i2 | 0) > 1023 ? 1023 : i2;
   d1 = d1 * 8988465674311579538646525.0e283;
  }
 } else if ((i3 | 0) < -1022) {
  d1 = d1 * 2.2250738585072014e-308;
  i2 = i3 + 1022 | 0;
  if ((i2 | 0) < -1022) {
   i2 = i3 + 2044 | 0;
   i2 = (i2 | 0) < -1022 ? -1022 : i2;
   d1 = d1 * 2.2250738585072014e-308;
  }
 } else i2 = i3;
 i2 = _bitshift64Shl(i2 + 1023 | 0, 0, 52) | 0;
 i3 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = i2;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(d1 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if ((((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) ? (i2 = HEAP32[i1 >> 2] | 0, i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0) == -1) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
 }
 return;
}

function __ZN5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_ED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 L1 : do switch (HEAP32[i2 + 4 >> 2] & 176 | 0) {
 case 16:
  {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 43:
   case 45:
    {
     i1 = i1 + 1 | 0;
     break L1;
    }
   default:
    {}
   }
   if ((i3 - i1 | 0) > 1 & i2 << 24 >> 24 == 48) {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i4 = 7;
      break L1;
     }
    }
    i1 = i1 + 2 | 0;
   } else i4 = 7;
   break;
  }
 case 32:
  {
   i1 = i3;
   break;
  }
 default:
  i4 = 7;
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 25728;
 HEAP32[i3 + 32 >> 2] = i1;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 54780) | 0;
 __ZNSt3__16localeD2Ev(i5);
 HEAP32[i3 + 36 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP8[i3 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 STACKTOP = i4;
 return;
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 25600;
 HEAP32[i3 + 32 >> 2] = i1;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 54772) | 0;
 __ZNSt3__16localeD2Ev(i5);
 HEAP32[i3 + 36 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP8[i3 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 STACKTOP = i4;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1 + -1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1 + -1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _frexp(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 i4 = i4 & 2047;
 switch (i4 | 0) {
 case 0:
  {
   if (d1 != 0.0) {
    d1 = +_frexp(d1 * 18446744073709551616.0, i5);
    i2 = (HEAP32[i5 >> 2] | 0) + -64 | 0;
   } else i2 = 0;
   HEAP32[i5 >> 2] = i2;
   break;
  }
 case 2047:
  break;
 default:
  {
   HEAP32[i5 >> 2] = i4 + -1022;
   HEAP32[tempDoublePtr >> 2] = i2;
   HEAP32[tempDoublePtr + 4 >> 2] = i3 & -2146435073 | 1071644672;
   d1 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d1;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 1) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 1) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _ungetc(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 do if ((i1 | 0) != -1) {
  if ((HEAP32[i5 + 76 >> 2] | 0) > -1) i4 = ___lockfile(i5) | 0; else i4 = 0;
  if (!((HEAP32[i5 + 8 >> 2] | 0) == 0 ? (___toread(i5) | 0) != 0 : 0)) i6 = 6;
  if ((i6 | 0) == 6 ? (i2 = i5 + 4 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 > ((HEAP32[i5 + 44 >> 2] | 0) + -8 | 0) >>> 0) : 0) {
   i6 = i3 + -1 | 0;
   HEAP32[i2 >> 2] = i6;
   HEAP8[i6 >> 0] = i1;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & -17;
   if (!i4) break;
   ___unlockfile(i5);
   break;
  }
  if (i4) {
   ___unlockfile(i5);
   i1 = -1;
  } else i1 = -1;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 return;
}

function ___divdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i5 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i8 = _i64Subtract(i10 ^ i1 | 0, i9 ^ i2 | 0, i10 | 0, i9 | 0) | 0;
 i7 = tempRet0;
 i1 = i6 ^ i10;
 i2 = i5 ^ i9;
 return _i64Subtract((___udivmoddi4(i8, i7, _i64Subtract(i6 ^ i3 | 0, i5 ^ i4 | 0, i6 | 0, i5 | 0) | 0, tempRet0, 0) | 0) ^ i1 | 0, tempRet0 ^ i2 | 0, i1 | 0, i2 | 0) | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i10, i2, i8, i9) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = i8;
 i6 = i1 + 8 | 0;
 i1 = 0;
 i5 = 0;
 L1 : while (1) {
  if ((i2 | 0) == (i8 | 0) | i5 >>> 0 >= i9 >>> 0) break;
  i4 = _uselocale(HEAP32[i6 >> 2] | 0) | 0;
  i3 = _mbrlen(i2, i7 - i2 | 0, i10) | 0;
  if (i4 | 0) _uselocale(i4) | 0;
  switch (i3 | 0) {
  case -2:
  case -1:
   break L1;
  case 0:
   {
    i2 = i2 + 1 | 0;
    i3 = 1;
    break;
   }
  default:
   i2 = i2 + i3 | 0;
  }
  i1 = i3 + i1 | 0;
  i5 = i5 + 1 | 0;
 }
 return i1 | 0;
}

function ___fflush_unlocked(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i1 = i7 + 20 | 0;
 i5 = i7 + 28 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i5 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i7 + 36 >> 2] & 31](i7, 0, 0) | 0, (HEAP32[i1 >> 2] | 0) == 0) : 0) i1 = -1; else {
  i6 = i7 + 4 | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = i7 + 8 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if (i2 >>> 0 < i4 >>> 0) FUNCTION_TABLE_iiii[HEAP32[i7 + 40 >> 2] & 31](i7, i2 - i4 | 0, 1) | 0;
  HEAP32[i7 + 16 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNK5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEE5cloneEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = __Znwj(24) | 0;
 i2 = i4 + 4 | 0;
 HEAP32[i1 >> 2] = 21488;
 i3 = i1 + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i2);
 HEAP8[i1 + 16 >> 0] = HEAP8[i4 + 16 >> 0] | 0;
 if (!(HEAP8[i3 >> 0] & 1)) i3 = i1 + 5 | 0; else i3 = HEAP32[i1 + 12 >> 2] | 0;
 HEAP32[i1 + 20 >> 2] = i3 + ((HEAP32[i4 + 20 >> 2] | 0) - ((HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i4 + 12 >> 2] | 0));
 return i1 | 0;
}

function _strtox_255(i7, i6, i1) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i5 = i8;
 i3 = i5;
 i4 = i3 + 112 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i7;
 i4 = i5 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i5 + 44 >> 2] = i7;
 HEAP32[i5 + 76 >> 2] = -1;
 ___shlim(i5, 0);
 d2 = +___floatscan(i5, i1, 1);
 i1 = (HEAP32[i3 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) + (HEAP32[i5 + 108 >> 2] | 0) | 0;
 if (i6 | 0) HEAP32[i6 >> 2] = i1 | 0 ? i7 + i1 | 0 : i7;
 STACKTOP = i8;
 return +d2;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZThn36_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + -36 | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function _vasprintf(i7, i6, i5) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i8;
 i2 = _malloc(240) | 0;
 do if (i2) {
  HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
  i1 = _vsnprintf(i2, 240, i6, i1) | 0;
  if (i1 >>> 0 < 240) {
   i6 = _realloc(i2, i1 + 1 | 0) | 0;
   HEAP32[i7 >> 2] = i6 | 0 ? i6 : i2;
   break;
  }
  _free(i2);
  if ((i1 | 0) >= 0 ? (i4 = i1 + 1 | 0, i3 = _malloc(i4) | 0, HEAP32[i7 >> 2] = i3, (i3 | 0) != 0) : 0) i1 = _vsnprintf(i3, i4, i6, i5) | 0; else i1 = -1;
 } else i1 = -1; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function _getc(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) >= 0 ? (___lockfile(i4) | 0) != 0 : 0) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
  } else i1 = ___uflow(i4) | 0;
  ___unlockfile(i4);
 } else i3 = 3;
 do if ((i3 | 0) == 3) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
   break;
  } else {
   i1 = ___uflow(i4) | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function _memcpy(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i2 | 0) >= 4096) return _emscripten_memcpy_big(i1 | 0, i4 | 0, i2 | 0) | 0;
 i3 = i1 | 0;
 if ((i1 & 3) == (i4 & 3)) {
  while (i1 & 3) {
   if (!i2) return i3 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
   i2 = i2 - 1 | 0;
  }
  while ((i2 | 0) >= 4) {
   HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
   i1 = i1 + 4 | 0;
   i4 = i4 + 4 | 0;
   i2 = i2 - 4 | 0;
  }
 }
 while ((i2 | 0) > 0) {
  HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i4 = i4 + 1 | 0;
  i2 = i2 - 1 | 0;
 }
 return i3 | 0;
}

function __ZThn36_N5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED0Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + -36 | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4 + -28 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(60) | 0;
 i4 = i2 + 56 | 0;
 HEAP32[i4 >> 2] = 20780;
 __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEC2ERKS5_(i2, i1);
 HEAP32[i2 >> 2] = 20700;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = 20728;
 HEAP32[i4 >> 2] = 20756;
 __ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i3, i1 + 36 | 0);
 return i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 28 | 0;
 i2 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i4 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 52 >> 2] & 31](i7, HEAP32[i2 >> 2] | 0) | 0) == -1) break;
  } else {
   i8 = HEAP32[i2 >> 2] | 0;
   HEAP32[i4 >> 2] = i3 + 4;
   HEAP32[i3 >> 2] = i8;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i7 + 12 | 0;
 i5 = i7 + 16 | 0;
 i3 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
   HEAP32[i4 >> 2] = i2 + 1;
   i2 = HEAP8[i2 >> 0] | 0;
  } else {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0;
   if ((i2 | 0) == -1) break;
   i2 = i2 & 255;
  }
  HEAP8[i3 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZThn36_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + -36 | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 return;
}

function __ZNK12mp5_implicit15double_mushroom4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 32 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function _realloc(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0;
 if (!i3) {
  i3 = _malloc(i2) | 0;
  return i3 | 0;
 }
 if (i2 >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  i3 = 0;
  return i3 | 0;
 }
 i1 = _try_realloc_chunk(i3 + -8 | 0, i2 >>> 0 < 11 ? 16 : i2 + 11 & -8) | 0;
 if (i1 | 0) {
  i3 = i1 + 8 | 0;
  return i3 | 0;
 }
 i1 = _malloc(i2) | 0;
 if (!i1) {
  i3 = 0;
  return i3 | 0;
 }
 i4 = HEAP32[i3 + -4 >> 2] | 0;
 i4 = (i4 & -8) - ((i4 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy(i1 | 0, i3 | 0, (i4 >>> 0 < i2 >>> 0 ? i4 : i2) | 0) | 0;
 _free(i3);
 i3 = i1;
 return i3 | 0;
}

function __ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -20 >> 2] | 0) | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 28 | 0;
 i2 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i4 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 52 >> 2] & 31](i7, HEAPU8[i2 >> 0] | 0) | 0) == -1) break;
  } else {
   i8 = HEAP8[i2 >> 0] | 0;
   HEAP32[i4 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i8;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 4) | 0;
 if (!(HEAP32[i6 >> 2] & 4)) HEAP32[i7 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 4) | 0;
 if (!(HEAP32[i6 >> 2] & 4)) HEAP32[i7 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNK12mp5_implicit11unit_sphere4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 20 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 24 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit11transformed4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 4 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 8 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit9scylinder4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 32 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function __ZThn36_N5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED1Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + -36 | 0;
 HEAP32[i1 + 36 >> 2] = 20880;
 i2 = i1 + 40 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4 + -28 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 return;
}

function __ZNK12mp5_implicit5scone4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 32 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 36 >> 2] | 0) | 0;
 return;
}

function __ZNK12mp5_implicit4cube4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 88 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 92 >> 2] | 0) | 0;
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 36 >> 2] = 20880;
 i1 = i3 + 40 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function ___toread(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 74 | 0;
 i2 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i2 + 255 | i2;
 i1 = i3 + 20 | 0;
 i2 = i3 + 44 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i2 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[i3 + 36 >> 2] & 31](i3, 0, 0) | 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i1 & 20) if (!(i1 & 4)) i1 = -1; else {
  HEAP32[i3 >> 2] = i1 | 32;
  i1 = -1;
 } else {
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i3 + 8 >> 2] = i1;
  HEAP32[i3 + 4 >> 2] = i1;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNK12mp5_implicit3egg4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = (HEAP32[i1 >> 2] | 0) + (HEAP32[i1 + 40 >> 2] << 2) | 0;
 i3 = HEAP32[i2 + 28 >> 2] | 0;
 i4 = i3 + 12 | 0;
 HEAPF32[i4 >> 2] = +HEAPF32[i5 >> 2] + +HEAPF32[i4 >> 2];
 i4 = HEAP32[i1 + 28 >> 2] | 0;
 i1 = i3 + 28 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 2) >> 2] + +HEAPF32[i1 >> 2];
 i1 = i3 + 44 | 0;
 HEAPF32[i1 >> 2] = +HEAPF32[i5 + (i4 << 1 << 2) >> 2] + +HEAPF32[i1 >> 2];
 __Z12InvertMatrixPKfPf(i3, HEAP32[i2 + 32 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i4, i5) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv(i4);
 i3 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i2 + 12 >> 2] | 0) - i1 >> 2 >>> 0 > i5 >>> 0) i2 = i3; else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(i3, i5 + 1 | 0);
  i2 = i3;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 i1 = HEAP32[i1 + (i5 << 2) >> 2] | 0;
 if (i1 | 0) __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 HEAP32[(HEAP32[i2 >> 2] | 0) + (i5 << 2) >> 2] = i4;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i7 + 12 | 0;
 i5 = i7 + 16 | 0;
 i3 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0;
   if ((i2 | 0) == -1) break;
  } else {
   HEAP32[i4 >> 2] = i2 + 4;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i3 >> 2] = i2;
  i3 = i3 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + 44 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i4 + 24 >> 2] | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  HEAP32[i1 >> 2] = i3;
  i1 = i3;
 } else i1 = i2;
 if (!(HEAP32[i4 + 48 >> 2] & 8)) {
  i4 = -1;
  return i4 | 0;
 }
 i3 = i4 + 16 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 if (i2 >>> 0 < i1 >>> 0) {
  HEAP32[i3 >> 2] = i1;
  i2 = i1;
 }
 i1 = HEAP32[i4 + 12 >> 2] | 0;
 if (i1 >>> 0 >= i2 >>> 0) {
  i4 = -1;
  return i4 | 0;
 }
 i4 = HEAPU8[i1 >> 0] | 0;
 return i4 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i5, i4, i3) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) == 0;
 if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i5 + 4 >> 2] | 0;
 do if (i1 >>> 0 >= i4 >>> 0) if (i2) {
  HEAP8[i5 + 1 + i4 >> 0] = 0;
  HEAP8[i5 >> 0] = i4 << 1;
  break;
 } else {
  HEAP8[(HEAP32[i5 + 8 >> 2] | 0) + i4 >> 0] = 0;
  HEAP32[i5 + 4 >> 2] = i4;
  break;
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i5, i4 - i1 | 0, i3) | 0; while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i4, i3, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i1 = i4 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  if ((i2 | 0) != (i3 | 0)) {
   i5 = i4 + 36 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i4 + 24 >> 2] = 2;
   HEAP8[i4 + 54 >> 0] = 1;
   break;
  }
  i1 = i4 + 24 | 0;
  if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[i1 >> 2] = i5;
 } else {
  HEAP32[i1 >> 2] = i3;
  HEAP32[i4 + 24 >> 2] = i5;
  HEAP32[i4 + 36 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 25664;
 HEAP32[i3 + 32 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP32[i3 + 48 >> 2] = -1;
 HEAP8[i3 + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(i3, i5);
 __ZNSt3__16localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 25536;
 HEAP32[i3 + 32 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP32[i3 + 48 >> 2] = -1;
 HEAP8[i3 + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(i3, i5);
 __ZNSt3__16localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i9, i5, i6, i7, i3, i4) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10;
 HEAP8[i8 >> 0] = 37;
 i1 = i8 + 1 | 0;
 HEAP8[i1 >> 0] = i3;
 i2 = i8 + 2 | 0;
 HEAP8[i2 >> 0] = i4;
 HEAP8[i8 + 3 >> 0] = 0;
 if (i4 << 24 >> 24) {
  HEAP8[i1 >> 0] = i4;
  HEAP8[i2 >> 0] = i3;
 }
 HEAP32[i6 >> 2] = i5 + (_strftime_l(i5 | 0, (HEAP32[i6 >> 2] | 0) - i5 | 0, i8 | 0, i7 | 0, HEAP32[i9 >> 2] | 0) | 0);
 STACKTOP = i10;
 return;
}

function _strtox(i8, i7, i3, i1, i2) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i6 = i9;
 HEAP32[i6 >> 2] = 0;
 i4 = i6 + 4 | 0;
 HEAP32[i4 >> 2] = i8;
 HEAP32[i6 + 44 >> 2] = i8;
 i5 = i6 + 8 | 0;
 HEAP32[i5 >> 2] = (i8 | 0) < 0 ? -1 : i8 + 2147483647 | 0;
 HEAP32[i6 + 76 >> 2] = -1;
 ___shlim(i6, 0);
 i1 = ___intscan(i6, i3, 1, i1, i2) | 0;
 if (i7 | 0) HEAP32[i7 >> 2] = i8 + ((HEAP32[i4 >> 2] | 0) + (HEAP32[i6 + 108 >> 2] | 0) - (HEAP32[i5 >> 2] | 0));
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 36 >> 2] = 20880;
 i1 = i3 + 40 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = i1 - i3 >> 2;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 << 2) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i5;
    i1 = i5;
   }
  }
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 36 >> 2] = 20880;
 i1 = i3 + 40 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZThn20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + -20 | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function _fmt_u(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 if (i3 >>> 0 > 0 | (i3 | 0) == 0 & i2 >>> 0 > 4294967295) while (1) {
  i4 = ___uremdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = i4 | 48;
  i4 = ___udivdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  if (i3 >>> 0 > 9 | (i3 | 0) == 9 & i2 >>> 0 > 4294967295) {
   i2 = i4;
   i3 = tempRet0;
  } else {
   i2 = i4;
   break;
  }
 }
 if (i2) while (1) {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = (i2 >>> 0) % 10 | 0 | 48;
  if (i2 >>> 0 < 10) break; else i2 = (i2 >>> 0) / 10 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i5, i3, i4, i1) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = i1;
 do if (i3) {
  i2 = i1 + 112 | 0;
  if (i3 >>> 0 < 29 & (HEAP8[i2 >> 0] | 0) == 0) {
   HEAP8[i2 >> 0] = 1;
   break;
  } else {
   i1 = __Znwj(i3 << 2) | 0;
   break;
  }
 } else i1 = 0; while (0);
 HEAP32[i5 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i5 + 8 >> 2] = i4;
 HEAP32[i5 + 4 >> 2] = i4;
 HEAP32[i5 + 12 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_(i3, i1, i6, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i4 = 0, i7 = 0;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i6 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if (i3 << 24 >> 24 < i4 << 24 >> 24) {
   i1 = -1;
   break;
  }
  if (i4 << 24 >> 24 < i3 << 24 >> 24) {
   i1 = 1;
   break;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i6 | 0) & 1;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) return; else {
  __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, HEAP32[i1 + 4 >> 2] | 0);
  __ZdlPv(i1);
  return;
 }
}

function __ZThn20_N5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED0Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + -20 | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4 + -12 | 0);
 __ZdlPv(i1);
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZNSt3__16locale5__impD2Ev(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i5 >> 2] = 28432;
 i2 = i5 + 8 | 0;
 i3 = i5 + 12 | 0;
 i4 = 0;
 while (1) {
  i1 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 >= (HEAP32[i3 >> 2] | 0) - i1 >> 2 >>> 0) break;
  i1 = HEAP32[i1 + (i4 << 2) >> 2] | 0;
  if (i1 | 0) __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
  i4 = i4 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5 + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i2);
 return;
}

function __ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -12 | 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 36 >> 2] = 20880;
 i1 = i3 + 40 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZThn20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + -20 | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZThn20_N5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED1Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + -20 | 0;
 HEAP32[i1 + 20 >> 2] = 20880;
 i2 = i1 + 24 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i3 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0 : 0) HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4 + -12 | 0);
 return;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1;
 L1 : do if (!(i4 & 3)) i3 = 4; else {
  i2 = i1;
  i1 = i4;
  while (1) {
   if (!(HEAP8[i2 >> 0] | 0)) break L1;
   i2 = i2 + 1 | 0;
   i1 = i2;
   if (!(i1 & 3)) {
    i1 = i2;
    i3 = 4;
    break;
   }
  }
 } while (0);
 if ((i3 | 0) == 4) {
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) i1 = i1 + 4 | 0; else break;
  }
  if ((i2 & 255) << 24 >> 24) do i1 = i1 + 1 | 0; while ((HEAP8[i1 >> 0] | 0) != 0);
 }
 return i1 - i4 | 0;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 20 >> 2] = 20880;
 i1 = i3 + 24 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZdlPv(i3);
 return;
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_(i3, i1, i6, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i4 = 0, i7 = 0;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i6 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP32[i1 >> 2] | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) < (i4 | 0)) {
   i1 = -1;
   break;
  }
  if ((i4 | 0) < (i3 | 0)) {
   i1 = 1;
   break;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i6 | 0) & 1;
 return i1 | 0;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i1 >> 2] = 19976;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 20016;
 HEAP32[i1 + 8 >> 2] = 19996;
 i3 = i1 + 12 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i1 >>> 0 < 11) {
  HEAP8[i2 >> 0] = i4 << 1;
  i1 = i2 + 1 | 0;
 } else {
  i5 = i1 + 16 & -16;
  i1 = __Znwj(i5) | 0;
  HEAP32[i2 + 8 >> 2] = i1;
  HEAP32[i2 >> 2] = i5 | 1;
  HEAP32[i2 + 4 >> 2] = i4;
 }
 _memcpy(i1 | 0, i3 | 0, i4 | 0) | 0;
 HEAP8[i1 + i4 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 1 | 0;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2524;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 12 >> 2] = 20880;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 2504;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i3);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i3);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 2) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 4 | 0;
 } else {
  i5 = i3 + 4 & -4;
  i4 = __Znwj(i5 << 2) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _wmemcpy(i1, i2, i3) | 0;
 HEAP32[i1 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 1 | 0;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _memset(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 20 >> 2] = 20880;
 i1 = i3 + 24 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 2) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 4 | 0;
 } else {
  i5 = i3 + 4 & -4;
  i4 = __Znwj(i5 << 2) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _wmemset(i1, i2, i3) | 0;
 HEAP32[i1 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = 19976;
 i1 = i3 + 64 | 0;
 HEAP32[i1 >> 2] = 20016;
 HEAP32[i3 + 8 >> 2] = 19996;
 i2 = i3 + 12 | 0;
 HEAP32[i2 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1);
 return;
}

function _memset(i2, i6, i1) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i3 = i2 + i1 | 0;
 if ((i1 | 0) >= 20) {
  i6 = i6 & 255;
  i5 = i2 & 3;
  i7 = i6 | i6 << 8 | i6 << 16 | i6 << 24;
  i4 = i3 & ~3;
  if (i5) {
   i5 = i2 + 4 - i5 | 0;
   while ((i2 | 0) < (i5 | 0)) {
    HEAP8[i2 >> 0] = i6;
    i2 = i2 + 1 | 0;
   }
  }
  while ((i2 | 0) < (i4 | 0)) {
   HEAP32[i2 >> 2] = i7;
   i2 = i2 + 4 | 0;
  }
 }
 while ((i2 | 0) < (i3 | 0)) {
  HEAP8[i2 >> 0] = i6;
  i2 = i2 + 1 | 0;
 }
 return i2 - i1 | 0;
}

function __ZN5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 20 >> 2] = 20880;
 i1 = i3 + 24 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 __ZdlPv(i3);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i2 = HEAP32[i4 >> 2] | 0;
 do if (i2 | 0) {
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  if ((i1 | 0) == (i2 | 0)) {
   HEAP8[i1 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 _pthread_mutex_lock(54820) | 0;
 while (1) {
  if ((HEAP32[i2 >> 2] | 0) != 1) break;
  _pthread_cond_wait(54848, 54820) | 0;
 }
 if (!(HEAP32[i2 >> 2] | 0)) {
  HEAP32[i2 >> 2] = 1;
  _pthread_mutex_unlock(54820) | 0;
  FUNCTION_TABLE_vi[i3 & 255](i1);
  _pthread_mutex_lock(54820) | 0;
  HEAP32[i2 >> 2] = -1;
  _pthread_mutex_unlock(54820) | 0;
  _pthread_cond_broadcast(54848) | 0;
 } else _pthread_mutex_unlock(54820) | 0;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 >> 2] = 0;
 i3 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP8[i2 + 128 >> 0] = 0;
 if (i1 | 0) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj(i2, i1);
  i2 = HEAP32[i3 >> 2] | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   i1 = i1 + -1 | 0;
  } while ((i1 | 0) != 0);
 }
 return;
}

function __ZN5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 + 20 >> 2] = 20880;
 i1 = i3 + 24 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 | 0 ? FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0 : 0) HEAP32[i1 >> 2] = 0;
 HEAP32[i3 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 8 | 0);
 return;
}

function __ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i1 >> 2] = 21516;
 i2 = i1 + 60 | 0;
 HEAP32[i2 >> 2] = 21536;
 i3 = i1 + 8 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 40 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 __ZdlPv(i1);
 return;
}

function _strerror(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = 0;
 while (1) {
  if ((HEAPU8[44639 + i2 >> 0] | 0) == (i1 | 0)) {
   i3 = 2;
   break;
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == 87) {
   i2 = 87;
   i1 = 44727;
   i3 = 5;
   break;
  }
 }
 if ((i3 | 0) == 2) if (!i2) i1 = 44727; else {
  i1 = 44727;
  i3 = 5;
 }
 if ((i3 | 0) == 5) while (1) {
  i3 = i1;
  while (1) {
   i1 = i3 + 1 | 0;
   if (!(HEAP8[i3 >> 0] | 0)) break; else i3 = i1;
  }
  i2 = i2 + -1 | 0;
  if (!i2) break; else i3 = 5;
 }
 return i1 | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = ___cxa_allocate_exception(44) | 0;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEEC1ERKSI_(i2, i1);
 ___cxa_throw(i2 | 0, 544, 68);
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 8 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if ((i1 | 0 ? (i2 = HEAP32[i1 >> 2] | 0, i2 | 0) : 0) ? (i1 = i2 + 48 | 0, (HEAP32[i1 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i1 + 4 >> 2] | 0) == 1129074247 : 0) : 0) {
  FUNCTION_TABLE_v[HEAP32[i2 + 12 >> 2] & 3]();
  _abort_message(50407, i3);
 }
 i3 = HEAP32[7213] | 0;
 HEAP32[7213] = i3 + 0;
 FUNCTION_TABLE_v[i3 & 3]();
 _abort_message(50407, i4);
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4); else {
  i5 = HEAP32[i5 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 15](i5, i3, i2, i1, i4, i6);
 }
 return;
}

function __ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = 21516;
 i1 = i3 + 60 | 0;
 HEAP32[i1 >> 2] = 21536;
 i2 = i3 + 8 | 0;
 HEAP32[i2 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 40 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1);
 return;
}

function __ZN5boost6spirit7classic4impl15abstract_parserINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + -8 | 0;
 HEAP32[i1 >> 2] = 19976;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 20016;
 HEAP32[i1 + 8 >> 2] = 19996;
 i3 = i1 + 12 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 __ZdlPv(i1);
 return;
}

function __ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 return __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE5cloneEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = ___cxa_allocate_exception(60) | 0;
 i3 = i2 + 56 | 0;
 HEAP32[i3 >> 2] = 20780;
 __ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEC2ERKS5_(i2, i1);
 HEAP32[i2 >> 2] = 20700;
 HEAP32[i2 + 36 >> 2] = 20728;
 HEAP32[i3 >> 2] = 20756;
 ___cxa_throw(i2 | 0, 384, 41);
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + -8 | 0;
 HEAP32[i3 >> 2] = 19976;
 i1 = i3 + 64 | 0;
 HEAP32[i1 >> 2] = 20016;
 HEAP32[i3 + 8 >> 2] = 19996;
 i2 = i3 + 12 | 0;
 HEAP32[i2 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1);
 return;
}

function __ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE7rethrowEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -16 >> 2] | 0) | 0);
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i7, i5, i4, i3, i6, i8) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i7 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i7 = HEAP32[i7 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 20 >> 2] & 15](i7, i5, i4, i3 + i1 | 0, i2 & 2 | 0 ? i6 : 2, i8);
 return;
}

function ___stdio_seek(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i5;
 i3 = i5 + 20 | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i3;
 HEAP32[i6 + 16 >> 2] = i4;
 if ((___syscall_ret(___syscall140(140, i6 | 0) | 0) | 0) < 0) {
  HEAP32[i3 >> 2] = -1;
  i1 = -1;
 } else i1 = HEAP32[i3 >> 2] | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK12mp5_implicit15double_mushroom15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0;
 d4 = +HEAPF32[i2 + 4 >> 2];
 d5 = d4 * +HEAPF32[i2 + 16 >> 2];
 d3 = +HEAPF32[i2 + 8 >> 2] + d5;
 d5 = +HEAPF32[i2 + 12 >> 2] + d5;
 d3 = d5 * d5 + (d4 * d4 + d3 * d3);
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 19976;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 20016;
 HEAP32[i1 + 8 >> 2] = 19996;
 i3 = i1 + 12 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 do if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -4 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  if ((i4 + 16 | 0) == (i1 | 0)) {
   HEAP8[i4 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i1);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 L1 : do if (!(HEAP8[i4 + 44 >> 0] | 0)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, HEAP32[i2 >> 2] | 0) | 0) == -1) break L1;
   i2 = i2 + 4 | 0;
   i1 = i1 + 1 | 0;
  }
 } else i1 = _fwrite(i1, 4, i3, HEAP32[i4 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 L1 : do if (!(HEAP8[i4 + 44 >> 0] | 0)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, HEAPU8[i2 >> 0] | 0) | 0) == -1) break L1;
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
 } else i1 = _fwrite(i1, 1, i3, HEAP32[i4 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNK12mp5_implicit5scone15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0;
 d4 = +HEAPF32[i2 + 4 >> 2];
 d5 = d4 * +HEAPF32[i2 + 16 >> 2];
 d3 = +HEAPF32[i2 + 8 >> 2] + d5;
 d5 = +HEAPF32[i2 + 12 >> 2] + d5;
 d3 = d5 * d5 + (d4 * d4 + d3 * d3);
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function _wmemmove(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0;
 if (i4 - i3 >> 2 >>> 0 < i1 >>> 0) {
  if (!i2) do {
   i1 = i1 + -1 | 0;
   HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i3 + (i1 << 2) >> 2];
  } while ((i1 | 0) != 0);
 } else if (!i2) {
  i2 = i3;
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i3);
 i1 = i3 + 128 | 0;
 if (i2 >>> 0 < 29 & (HEAP8[i1 >> 0] | 0) == 0) {
  HEAP8[i1 >> 0] = 1;
  i1 = i3 + 16 | 0;
 } else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i3 + 4 >> 2] = i1;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 19976;
 i2 = i1 + 64 | 0;
 HEAP32[i2 >> 2] = 20016;
 HEAP32[i1 + 8 >> 2] = 19996;
 i3 = i1 + 12 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 return;
}

function __ZNK12mp5_implicit17transformed_union15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 d5 = +HEAPF32[i2 >> 2];
 d4 = +HEAPF32[i2 + 16 >> 2];
 d3 = +HEAPF32[i2 + 32 >> 2];
 d3 = d5 * d5 + d4 * d4 + d3 * d3;
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 3](i6, i4, i3 + i1 | 0, i2 & 2 | 0 ? i5 : 2, i7);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3); else {
  i4 = HEAP32[i4 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 15](i4, i2, i1, i3);
 }
 return;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 54780) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i1 = i2 + 44 | 0;
 HEAP32[i1 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP8[i2 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 54772) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i1 = i2 + 44 | 0;
 HEAP32[i1 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP8[i2 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 return;
}

function ___towrite(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = i2 + 74 | 0;
 i3 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i3 + 255 | i3;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!(i1 & 8)) {
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  HEAP32[i2 + 28 >> 2] = i1;
  HEAP32[i2 + 20 >> 2] = i1;
  HEAP32[i2 + 16 >> 2] = i1 + (HEAP32[i2 + 48 >> 2] | 0);
  i1 = 0;
 } else {
  HEAP32[i2 >> 2] = i1 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 21516;
 i2 = i1 + 60 | 0;
 HEAP32[i2 >> 2] = 21536;
 i3 = i1 + 8 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 40 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 __ZdlPv(i1);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i6, i4, i3, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 15](i6, i4, i3 + i1 | 0, i2 & 2 | 0 ? i5 : 2);
 return;
}

function copyTempDouble(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[i1 + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[i1 + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[i1 + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[i1 + 7 >> 0];
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt(i1, i6, i5, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = (i5 - i6 | 0) >>> 2;
 i3 = i6;
 while (1) {
  if ((i3 | 0) == (i5 | 0)) break;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAPU16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + (i1 << 1) >> 1] | 0; else i1 = 0;
  HEAP16[i2 >> 1] = i1;
  i2 = i2 + 2 | 0;
  i3 = i3 + 4 | 0;
 }
 return i6 + (i4 << 2) | 0;
}

function _memcmp(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 L1 : do if (!i1) i1 = 0; else {
  i5 = i1;
  i4 = i2;
  while (1) {
   i2 = HEAP8[i4 >> 0] | 0;
   i1 = HEAP8[i3 >> 0] | 0;
   if (i2 << 24 >> 24 != i1 << 24 >> 24) break;
   i5 = i5 + -1 | 0;
   if (!i5) {
    i1 = 0;
    break L1;
   } else {
    i4 = i4 + 1 | 0;
    i3 = i3 + 1 | 0;
   }
  }
  i1 = (i2 & 255) - (i1 & 255) | 0;
 } while (0);
 return i1 | 0;
}

function ___stdout_write(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i4 = i5;
 HEAP32[i2 + 36 >> 2] = 6;
 if ((HEAP32[i2 >> 2] & 64 | 0) == 0 ? (HEAP32[i4 >> 2] = HEAP32[i2 + 60 >> 2], HEAP32[i4 + 4 >> 2] = 21505, HEAP32[i4 + 8 >> 2] = i5 + 12, ___syscall54(54, i4 | 0) | 0) : 0) HEAP8[i2 + 75 >> 0] = -1;
 i4 = ___stdio_write(i2, i1, i3) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function _vsscanf(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i2 = i6;
 i5 = i2;
 i7 = i5 + 112 | 0;
 do {
  HEAP32[i5 >> 2] = 0;
  i5 = i5 + 4 | 0;
 } while ((i5 | 0) < (i7 | 0));
 HEAP32[i2 + 32 >> 2] = 27;
 HEAP32[i2 + 44 >> 2] = i4;
 HEAP32[i2 + 76 >> 2] = -1;
 HEAP32[i2 + 84 >> 2] = i4;
 i7 = _vfscanf(i2, i3, i1) | 0;
 STACKTOP = i6;
 return i7 | 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE7disposeEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i1) return;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = i2;
 if (i2 | 0) {
  i4 = i1 + 8 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) != (i2 | 0)) HEAP32[i4 >> 2] = i5 + (~((i5 + -4 - i3 | 0) >>> 2) << 2);
  __ZdlPv(i2);
 }
 __ZdlPv(i1);
 return;
}

function __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 21516;
 i2 = i1 + 60 | 0;
 HEAP32[i2 >> 2] = 21536;
 i3 = i1 + 8 | 0;
 HEAP32[i3 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 40 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i2);
 return;
}

function ___string_read(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i2 + 84 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i7 = i3 + 256 | 0;
 i5 = _memchr(i6, 0, i7) | 0;
 i5 = (i5 | 0) == 0 ? i7 : i5 - i6 | 0;
 i3 = i5 >>> 0 < i3 >>> 0 ? i5 : i3;
 _memcpy(i1 | 0, i6 | 0, i3 | 0) | 0;
 HEAP32[i2 + 4 >> 2] = i6 + i3;
 i1 = i6 + i5 | 0;
 HEAP32[i2 + 8 >> 2] = i1;
 HEAP32[i4 >> 2] = i1;
 return i3 | 0;
}

function __Znwj(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 while (1) {
  i1 = _malloc(i2) | 0;
  if (i1 | 0) {
   i2 = 6;
   break;
  }
  i1 = __ZSt15get_new_handlerv() | 0;
  if (!i1) {
   i2 = 5;
   break;
  }
  FUNCTION_TABLE_v[i1 & 3]();
 }
 if ((i2 | 0) == 5) {
  i2 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i2 >> 2] = 28944;
  ___cxa_throw(i2 | 0, 2392, 213);
 } else if ((i2 | 0) == 6) return i1 | 0;
 return 0;
}

function __ZNSt3__18ios_base4initEPv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 + 24 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = (i1 | 0) == 0 & 1;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 4098;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 6;
 i3 = i2 + 28 | 0;
 i1 = i2 + 32 | 0;
 i2 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 __ZNSt3__16localeC2Ev(i3);
 return;
}

function _strcmp(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP8[i2 >> 0] | 0;
 if (i3 << 24 >> 24 == 0 ? 1 : i3 << 24 >> 24 != i1 << 24 >> 24) i2 = i3; else {
  do {
   i4 = i4 + 1 | 0;
   i2 = i2 + 1 | 0;
   i3 = HEAP8[i4 >> 0] | 0;
   i1 = HEAP8[i2 >> 0] | 0;
  } while (!(i3 << 24 >> 24 == 0 ? 1 : i3 << 24 >> 24 != i1 << 24 >> 24));
  i2 = i3;
 }
 return (i2 & 255) - (i1 & 255) | 0;
}

function __ZNK12mp5_implicit4cube15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0;
 d5 = +HEAPF32[i2 + 4 >> 2];
 d4 = +HEAPF32[i2 + 32 >> 2];
 d3 = +HEAPF32[i2 + 60 >> 2];
 d3 = d5 * d5 + d4 * d4 + d3 * d3;
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function __ZNK12mp5_implicit3egg15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0;
 d5 = +HEAPF32[i2 + 4 >> 2];
 d4 = +HEAPF32[i2 + 8 >> 2];
 d3 = +HEAPF32[i2 + 12 >> 2];
 d3 = d5 * d5 + d4 * d4 + d3 * d3;
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function __ZNK12mp5_implicit5scone19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 if (+HEAPF32[i1 + 4 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 8 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 12 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 16 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 i1 = 1;
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 8 | 0;
 i2 = _uselocale(HEAP32[i1 >> 2] | 0) | 0;
 i3 = _mbtowc(0, 0, 4) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 if (!i3) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (i1) {
   i1 = _uselocale(i1) | 0;
   if (!i1) i1 = 0; else {
    _uselocale(i1) | 0;
    i1 = 0;
   }
  } else i1 = 1;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = (i3 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i2, i4 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i4 ? (i3 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0) | 0;
 }
 return i2 | 0;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i3 = (i4 - i5 | 0) >>> 2;
 i2 = i5;
 while (1) {
  if ((i2 | 0) == (i4 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + (i1 << 2) >> 2] | 0;
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i5 + (i3 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i3 = (i4 - i5 | 0) >>> 2;
 i2 = i5;
 while (1) {
  if ((i2 | 0) == (i4 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + (i1 << 2) >> 2] | 0;
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i5 + (i3 << 2) | 0;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = i5 + 32 | 0;
 i2 = i5 + 36 | 0;
 i4 = HEAP32[i5 + 40 >> 2] | 0;
 while (1) {
  if (!i4) break;
  i6 = i4 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i1 >> 2] | 0) + (i6 << 2) >> 2] & 31](i3, i5, HEAP32[(HEAP32[i2 >> 2] | 0) + (i6 << 2) >> 2] | 0);
  i4 = i6;
 }
 return;
}

function __ZNSt3__16chrono12steady_clock3nowEv() {
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2;
 _clock_gettime(1, i1 | 0) | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 i3 = ___muldi3(i3 | 0, ((i3 | 0) < 0) << 31 >> 31 | 0, 1e9, 0) | 0;
 i1 = _i64Add(i3 | 0, tempRet0 | 0, i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i1 & 65535;
 i5 = i2 & 65535;
 i3 = Math_imul(i5, i6) | 0;
 i4 = i1 >>> 16;
 i1 = (i3 >>> 16) + (Math_imul(i5, i4) | 0) | 0;
 i5 = i2 >>> 16;
 i2 = Math_imul(i5, i6) | 0;
 return (tempRet0 = (i1 >>> 16) + (Math_imul(i5, i4) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0, i1 + i2 << 16 | i3 & 65535 | 0) | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc(i1, i6, i5, i4, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0, i7 = 0;
 i3 = (i5 - i6 | 0) >>> 2;
 i1 = i2;
 i2 = i6;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) break;
  i7 = HEAP32[i2 >> 2] | 0;
  HEAP8[i1 >> 0] = i7 >>> 0 < 128 ? i7 & 255 : i4;
  i1 = i1 + 1 | 0;
  i2 = i2 + 4 | 0;
 }
 return i6 + (i3 << 2) | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function _fwrite(i2, i5, i1, i3) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i6 = 0;
 i4 = Math_imul(i1, i5) | 0;
 if ((HEAP32[i3 + 76 >> 2] | 0) > -1) {
  i6 = (___lockfile(i3) | 0) == 0;
  i2 = ___fwritex(i2, i4, i3) | 0;
  if (!i6) ___unlockfile(i3);
 } else i2 = ___fwritex(i2, i4, i3) | 0;
 if ((i2 | 0) != (i4 | 0)) i1 = (i2 >>> 0) / (i5 >>> 0) | 0;
 return i1 | 0;
}

function __ZNK12mp5_implicit9scylinder15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0;
 d4 = +HEAPF32[i2 + 24 >> 2];
 d3 = +HEAPF32[i2 + 20 >> 2];
 d3 = d4 * d4 + d3 * d3 + 0.0;
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) {
   i1 = i3;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 >= 128) break;
  if (!((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + (i2 << 1) >> 1] & i4) << 16 >> 16)) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function _copysign(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 d2 = +Math_abs(+d1);
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = i3 & -2147483648 | HEAP32[tempDoublePtr + 4 >> 2];
 HEAP32[tempDoublePtr >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4);
 return;
}

function _memmove(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i4 | 0) < (i1 | 0) & (i1 | 0) < (i4 + i2 | 0)) {
  i3 = i1;
  i4 = i4 + i2 | 0;
  i1 = i1 + i2 | 0;
  while ((i2 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i4 = i4 - 1 | 0;
   i2 = i2 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  }
  i1 = i3;
 } else _memcpy(i1, i4, i2) | 0;
 return i1 | 0;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i5, i4, i1, i3, i2) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 HEAP32[i7 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsnprintf(i5, i4, i3, i7) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) {
   i1 = i3;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < 128 ? (HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + (i2 << 1) >> 1] & i4) << 16 >> 16 : 0) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i1;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) i1 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i1;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) i1 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__18ios_base5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i4;
 i5 = i2 + 28 | 0;
 __ZNSt3__16localeC2ERKS0_(i3, i5);
 __ZNSt3__16localeaSERKS0_(i5, i1) | 0;
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(i2, 1);
 STACKTOP = i4;
 return HEAP32[i3 >> 2] | 0;
}

function _get_v_size() {
 var i1 = 0;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  i1 = -1;
  return i1 | 0;
 } else {
  i1 = HEAP32[12833] | 0;
  i1 = ((HEAP32[i1 + 496 >> 2] | 0) - (HEAP32[i1 + 492 >> 2] | 0) >> 2 >>> 0) / 3 | 0;
  return i1 | 0;
 }
 return 0;
}

function _get_f_size() {
 var i1 = 0;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  i1 = -1;
  return i1 | 0;
 } else {
  i1 = HEAP32[12833] | 0;
  i1 = ((HEAP32[i1 + 508 >> 2] | 0) - (HEAP32[i1 + 504 >> 2] | 0) >> 2 >>> 0) / 3 | 0;
  return i1 | 0;
 }
 return 0;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 54780) | 0;
 HEAP32[i2 + 36 >> 2] = i1;
 HEAP8[i2 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 54772) | 0;
 HEAP32[i2 + 36 >> 2] = i1;
 HEAP8[i2 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 return;
}

function _llvm_cttz_i32(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP8[cttz_i8 + (i2 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 8 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 8 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 16 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 16 | 0;
 return (HEAP8[cttz_i8 + (i2 >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 return __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE5cloneEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
}

function __ZNSt3__16locale2id5__getEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if ((HEAP32[i2 >> 2] | 0) != -1) {
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = 220;
  HEAP32[i1 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(i2, i1, 221);
 }
 STACKTOP = i3;
 return (HEAP32[i2 + 4 >> 2] | 0) + -1 | 0;
}

function __ZN12mp5_implicit17transformed_unionD0Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 HEAP32[i4 >> 2] = 20540;
 i1 = HEAP32[i4 + 12 >> 2] | 0;
 if (!i1) {
  __ZdlPv(i4);
  return;
 }
 i2 = i4 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) != (i1 | 0)) HEAP32[i2 >> 2] = i3 + (~((i3 + -4 - i1 | 0) >>> 2) << 2);
 __ZdlPv(i1);
 __ZdlPv(i4);
 return;
}

function ___cxa_can_catch(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 31](i1, i2, i3) | 0;
 if (i1) HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 STACKTOP = i5;
 return i1 & 1 | 0;
}

function _calloc(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i3) {
  i2 = Math_imul(i1, i3) | 0;
  if ((i1 | i3) >>> 0 > 65535) i2 = ((i2 >>> 0) / (i3 >>> 0) | 0 | 0) == (i1 | 0) ? i2 : -1;
 } else i2 = 0;
 i1 = _malloc(i2) | 0;
 if (!i1) return i1 | 0;
 if (!(HEAP32[i1 + -4 >> 2] & 3)) return i1 | 0;
 _memset(i1 | 0, 0, i2 | 0) | 0;
 return i1 | 0;
}

function __ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE7rethrowEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -16 >> 2] | 0) | 0);
}

function __ZNK12mp5_implicit15double_mushroom19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 if (+HEAPF32[i1 + 4 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 8 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 12 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 i1 = 1;
 return i1 | 0;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vasprintf(i4, i3, i6) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = ___cxa_allocate_exception(36) | 0;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEEC1ERKS6_(i2, i1);
 ___cxa_throw(i2 | 0, 872, 117);
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsscanf(i4, i3, i6) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = ___cxa_allocate_exception(36) | 0;
 __ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEEC1ERKS6_(i2, i1);
 ___cxa_throw(i2 | 0, 760, 99);
}

function __ZNK12mp5_implicit3egg19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 if (+HEAPF32[i1 + 4 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 8 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 12 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 i1 = 1;
 return i1 | 0;
}

function __ZNK12mp5_implicit11unit_sphere15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, d4 = 0.0;
 d3 = +HEAPF32[i2 + 4 >> 2] * 1.1;
 d4 = -d3;
 HEAPF32[i1 >> 2] = d4;
 HEAPF32[i1 + 4 >> 2] = d3;
 HEAPF32[i1 + 8 >> 2] = d4;
 HEAPF32[i1 + 12 >> 2] = d3;
 HEAPF32[i1 + 16 >> 2] = d4;
 HEAPF32[i1 + 20 >> 2] = d3;
 return;
}

function ___uflow(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if ((HEAP32[i2 + 8 >> 2] | 0) == 0 ? (___toread(i2) | 0) != 0 : 0) i1 = -1; else if ((FUNCTION_TABLE_iiii[HEAP32[i2 + 32 >> 2] & 31](i2, i1, 1) | 0) == 1) i1 = HEAPU8[i1 >> 0] | 0; else i1 = -1;
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 i3 = HEAP32[i2 + 8 >> 2] | 0;
 i2 = (HEAP32[i2 >> 2] | 0) + (i3 >> 1) | 0;
 if (i3 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vi[i1 & 255](i2);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = i1 + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 16 >> 2] & 15](i3, i4, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, 0, i2);
 return;
}

function ___shlim(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 HEAP32[i3 + 104 >> 2] = i4;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 i2 = HEAP32[i3 + 4 >> 2] | 0;
 i5 = i1 - i2 | 0;
 HEAP32[i3 + 108 >> 2] = i5;
 if ((i4 | 0) != 0 & (i5 | 0) > (i4 | 0)) HEAP32[i3 + 100 >> 2] = i2 + i4; else HEAP32[i3 + 100 >> 2] = i1;
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3);
 return;
}

function __ZN5boost13property_tree11json_parser17json_parser_errorD0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 return __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE5cloneEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
}

function __ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 return __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE5cloneEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(i5, i6, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i5 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(i5, i6, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i5 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZN5boost6detail12shared_countC2INS_6spirit7classic4impl26object_with_id_base_supplyIjEEEEPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 >> 2] = 0;
 i3 = __Znwj(16) | 0;
 HEAP32[i3 + 4 >> 2] = 1;
 HEAP32[i3 + 8 >> 2] = 1;
 HEAP32[i3 >> 2] = 20896;
 HEAP32[i3 + 12 >> 2] = i1;
 HEAP32[i2 >> 2] = i3;
 return;
}

function __ZNK17implicit_function15get_boundingboxEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAPF32[i1 >> 2] = -1.0;
 HEAPF32[i1 + 4 >> 2] = 1.0;
 HEAPF32[i1 + 8 >> 2] = -1.100000023841858;
 HEAPF32[i1 + 12 >> 2] = 1.100000023841858;
 HEAPF32[i1 + 16 >> 2] = -1.100000023841858;
 HEAPF32[i1 + 20 >> 2] = 1.100000023841858;
 return;
}

function __ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE7rethrowEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -16 >> 2] | 0) | 0);
}

function __ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE7rethrowEv(i1) {
 i1 = i1 | 0;
 __ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE7rethrowEv(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -16 >> 2] | 0) | 0);
}

function __ZNSt3__118__libcpp_refstringC2EPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = _strlen(i1) | 0;
 i3 = __Znwj(i4 + 13 | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = 0;
 i3 = i3 + 12 | 0;
 _memcpy(i3 | 0, i1 | 0, i4 + 1 | 0) | 0;
 HEAP32[i2 >> 2] = i3;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25872;
 __ZNSt3__16localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25808;
 __ZNSt3__16localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 4;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 }
 return i1 | 0;
}

function __ZN5boost13property_tree17file_parser_errorD0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc(i3, i1, i5, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i5 | 0)) break;
  i3 = HEAP8[i1 >> 0] | 0;
  HEAP8[i2 >> 0] = i3 << 24 >> 24 > -1 ? i3 : i4;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i5 | 0;
}

function _sn_write(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i1 = (HEAP32[i1 + 16 >> 2] | 0) - i5 | 0;
 i1 = i1 >>> 0 > i2 >>> 0 ? i2 : i1;
 _memcpy(i5 | 0, i3 | 0, i1 | 0) | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
 return i2 | 0;
}

function __ZN12mp5_implicit17transformed_unionD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 HEAP32[i1 >> 2] = 20540;
 i3 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i3) return;
 i1 = i1 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (i3 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i3 | 0) >>> 2) << 2);
 __ZdlPv(i3);
 return;
}

function __ZNSt3__18numpunctIwEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 28544;
 HEAP32[i2 + 8 >> 2] = 46;
 HEAP32[i2 + 12 >> 2] = 44;
 i1 = i2 + 16 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__18numpunctIcEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 28504;
 HEAP8[i2 + 8 >> 0] = 46;
 HEAP8[i2 + 9 >> 0] = 44;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}
function __ZNSt3__18ios_baseD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25792;
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(i1, 0);
 __ZNSt3__16localeD2Ev(i1 + 28 | 0);
 _free(HEAP32[i1 + 32 >> 2] | 0);
 _free(HEAP32[i1 + 36 >> 2] | 0);
 _free(HEAP32[i1 + 48 >> 2] | 0);
 _free(HEAP32[i1 + 60 >> 2] | 0);
 return;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i4 = (HEAP32[i2 >> 2] | 0) + (i1 << 4) | 0;
  i5 = i4 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i4;
  i2 = i2 + 4 | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i4 = (HEAP8[i2 >> 0] | 0) + (i1 << 4) | 0;
  i5 = i4 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i4;
  i2 = i2 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__15ctypeIcEC2EPKtbj(i4, i3, i2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 4 >> 2] = i1 + -1;
 HEAP32[i4 >> 2] = 28452;
 i1 = i4 + 8 | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP8[i4 + 12 >> 0] = i2 & 1;
 if (!i3) HEAP32[i1 >> 2] = HEAP32[(___ctype_b_loc() | 0) >> 2];
 return;
}

function __ZN5boost13property_tree14ptree_bad_pathD2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 2524;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i2);
 return;
}

function __ZN5boost13property_tree14ptree_bad_dataD2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 2504;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (!i1) {
  __ZNSt13runtime_errorD2Ev(i2);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i2);
 return;
}

function __ZN5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21488;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZN5boost13property_tree17file_parser_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20860;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZNSt13runtime_errorD2Ev(i1);
 return;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _catopen((HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _catopen((HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function _get_v_ptr() {
 var i1 = 0;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  i1 = 0;
  return i1 | 0;
 } else {
  i1 = HEAP32[(HEAP32[12833] | 0) + 492 >> 2] | 0;
  return i1 | 0;
 }
 return 0;
}

function _get_f_ptr() {
 var i1 = 0;
 if (!(HEAP8[51328] | 0)) {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(52020, 29812, 63) | 0;
  i1 = 0;
  return i1 | 0;
 } else {
  i1 = HEAP32[(HEAP32[12833] | 0) + 504 >> 2] | 0;
  return i1 | 0;
 }
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50824] | 0) == 0 ? ___cxa_guard_acquire(50824) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(54644, 27760, _wcslen(27760) | 0);
  ___cxa_guard_release(50824);
 }
 return 54644;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50816] | 0) == 0 ? ___cxa_guard_acquire(50816) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(54632, 27712, _wcslen(27712) | 0);
  ___cxa_guard_release(50816);
 }
 return 54632;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50808] | 0) == 0 ? ___cxa_guard_acquire(50808) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(54620, 27628, _wcslen(27628) | 0);
  ___cxa_guard_release(50808);
 }
 return 54620;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50832] | 0) == 0 ? ___cxa_guard_acquire(50832) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(54656, 27796, _wcslen(27796) | 0);
  ___cxa_guard_release(50832);
 }
 return 54656;
}

function ___uremdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6 | 0;
 ___udivmoddi4(i1, i2, i3, i4, i5) | 0;
 STACKTOP = i6;
 return (tempRet0 = HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function dynCall_iiiiiiiii(i9, i1, i2, i3, i4, i5, i6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[i9 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0) | 0;
}

function __ZNK5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 >> 2] = 21728;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2 + 4 | 0, i1 + 4 | 0);
 return i2 | 0;
}

function __ZN5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21488;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__114__shared_count16__release_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i2, i1);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i2, i1);
 return;
}

function __ZN5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 28964;
 __ZNSt3__118__libcpp_refstringC2EPKc(i2 + 4 | 0, (HEAP8[i1 >> 0] & 1) == 0 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50736] | 0) == 0 ? ___cxa_guard_acquire(50736) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(53820, 48566, 11);
  ___cxa_guard_release(50736);
 }
 return 53820;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50728] | 0) == 0 ? ___cxa_guard_acquire(50728) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(53808, 48545, 20);
  ___cxa_guard_release(50728);
 }
 return 53808;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50744] | 0) == 0 ? ___cxa_guard_acquire(50744) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(53832, 48578, 8);
  ___cxa_guard_release(50744);
 }
 return 53832;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[50752] | 0) == 0 ? ___cxa_guard_acquire(50752) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(53844, 48587, 8);
  ___cxa_guard_release(50752);
 }
 return 53844;
}

function _wmemcpy(i4, i2, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 | 0) {
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i6 = i3;
 i3 = ___muldsi3(i5, i6) | 0;
 i1 = tempRet0;
 return (tempRet0 = (Math_imul(i2, i6) | 0) + (Math_imul(i4, i5) | 0) + i1 | i1 & 0, i3 | 0 | 0) | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 20212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 return;
}

function __ZN5boost13property_tree14ptree_bad_pathD0Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 2524;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i2);
 __ZdlPv(i2);
 return;
}

function __ZN5boost13property_tree14ptree_bad_dataD0Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 2504;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 __ZNSt13runtime_errorD2Ev(i2);
 __ZdlPv(i2);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(i6, i1, i4, i2, i5, i7, i3, i8) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i8 >> 2] = i7;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(i6, i1, i4, i2, i5, i7, i3, i8) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i8 >> 2] = i7;
 return 3;
}

function __ZN5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21124;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 return;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(54896, 3) | 0)) {
  i2 = _pthread_getspecific(HEAP32[13725] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(50083, i1);
 return 0;
}

function dynCall_iiiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iiiiiiii[i8 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function __ZNK12mp5_implicit9scylinder19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 if (+HEAPF32[i1 + 24 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 if (+HEAPF32[i1 + 20 >> 2] < .009999999776482582) {
  i1 = 0;
  return i1 | 0;
 }
 i1 = 1;
 return i1 | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__16localeaSERKS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__114__shared_count12__add_sharedEv(HEAP32[i1 >> 2] | 0);
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i2 >> 2] | 0) | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[13725] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(49980, i2);
}

function _snprintf(i3, i2, i1, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = _vsnprintf(i3, i2, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP32[i2 >> 2] = HEAP8[i1 >> 0];
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i2, i3, i4, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i2, i3, i4, 1114111, 0) | 0;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54748) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54740) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54732) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54724) | 0);
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = (HEAP32[i1 >> 2] | 0) + -4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if ((i2 + -1 | 0) < 0) __ZdlPv((HEAP32[i1 >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54684) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54676) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54668) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53856) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53044) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53036) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53028) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53004) | 0);
 return;
}

function __ZN5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21728;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj(i2, 0, -1, i1, _strlen(i1) | 0) | 0;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2;
 HEAP32[i3 >> 2] = HEAP32[i1 + 60 >> 2];
 i1 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (i1) {
  i1 = _uselocale(i1) | 0;
  if (!i1) i1 = 4; else {
   _uselocale(i1) | 0;
   i1 = 4;
  }
 } else i1 = 1;
 return i1 | 0;
}

function copyTempFloat(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
}

function dynCall_iiiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iiiiiii[i7 & 63](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function __ZNSt3__16locale8__globalEv() {
 if ((HEAP8[51320] | 0) == 0 ? ___cxa_guard_acquire(51320) | 0 : 0) {
  __ZNSt3__16locale5__imp11make_globalEv() | 0;
  HEAP32[13704] = 54812;
  ___cxa_guard_release(51320);
 }
 return HEAP32[13704] | 0;
}

function __ZNSt3__16locale7classicEv() {
 if ((HEAP8[51152] | 0) == 0 ? ___cxa_guard_acquire(51152) | 0 : 0) {
  __ZNSt3__16locale5__imp12make_classicEv() | 0;
  HEAP32[13702] = 54804;
  ___cxa_guard_release(51152);
 }
 return HEAP32[13702] | 0;
}

function _bitshift64Ashr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = (i2 | 0) < 0 ? -1 : 0;
 return i2 >> i1 - 32 | 0;
}

function _newlocale(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 if (((HEAP8[i3 >> 0] | 0) != 0 ? (_strcmp(i3, 47835) | 0) != 0 : 0) ? (_strcmp(i3, 46850) | 0) != 0 : 0) i1 = 0; else if (!i1) i1 = _calloc(1, 4) | 0;
 return i1 | 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 28384;
 i1 = i1 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNKSt3__15ctypeIwE5do_isEtw(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) i1 = (HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + (i1 << 1) >> 1] & i2) << 16 >> 16 != 0; else i1 = 0;
 return i1 | 0;
}

function dynCall_iiiiiid(i7, i1, i2, i3, i4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 return FUNCTION_TABLE_iiiiiid[i7 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6) | 0;
}

function __ZN5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21728;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 4 | 0);
 return;
}

function _sscanf(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsscanf(i2, i1, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i2, i1, _wcslen(i1) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i2, i1, _strlen(i1) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i2, i1, _strlen(i1) | 0) | 0;
}

function _wmemset(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 | 0) {
  i2 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i2 >> 2] = i3;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
 }
 return i4 | 0;
}

function dynCall_viiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiiii[i7 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function __ZNSt13runtime_errorC2ERKS_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 28964;
 i1 = HEAP32[i1 + 4 >> 2] | 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i2 = i1 + -4 | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return;
}

function _bitshift64Shl(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 << i1 | (i3 & (1 << i1) - 1 << 32 - i1) >>> 32 - i1;
  return i3 << i1;
 }
 tempRet0 = i3 << i1 - 32;
 return 0;
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[i3 >> 2] = i2;
 i2 = HEAP32[5466] | 0;
 _vfprintf(i2, i1, i3) | 0;
 _fputc(10, i2) | 0;
 _abort();
}

function _bitshift64Lshr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >>> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = 0;
 return i2 >>> i1 - 32 | 0;
}

function __ZNKSt3__18ios_base6getlocEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3;
 __ZNSt3__16localeC2ERKS0_(i2, i1 + 28 | 0);
 STACKTOP = i3;
 return HEAP32[i2 >> 2] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(54900, 224) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(50033, i1);
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i3, i2, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i2 - i3 | 0;
 return (i5 >>> 0 < i4 >>> 0 ? i5 : i4) | 0;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54788) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54796) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54780) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54772) | 0);
 return;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = __ZNSt3__16locale2id5__getEv(i2) | 0;
 return HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) i1 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
 return i1 | 0;
}

function __ZNSt3__16__clocEv() {
 if ((HEAP8[50672] | 0) == 0 ? ___cxa_guard_acquire(50672) | 0 : 0) {
  HEAP32[13250] = _newlocale(2147483647, 47835, 0) | 0;
  ___cxa_guard_release(50672);
 }
 return HEAP32[13250] | 0;
}

function runPostSets() {}
function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (tempRet0 = i4, i1 - i3 >>> 0 | 0) | 0;
}

function dynCall_iiiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return FUNCTION_TABLE_iiiiii[i6 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) i1 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ((i1 & 255) << 2) >> 2] & 255;
 return i1 | 0;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54716) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54708) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54700) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54692) | 0);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function dynCall_iiiiid(i6, i1, i2, i3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 return FUNCTION_TABLE_iiiiid[i6 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5) | 0;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var i1 = 0;
 i1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[13703] = i1;
 __ZNSt3__114__shared_count12__add_sharedEv(i1);
 return 54812;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53020) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(52992) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54764) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(54756) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(52972) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(52964) | 0);
 return;
}

function dynCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiiii[i6 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __ZNSt3__16localeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[(__ZNSt3__16locale8__globalEv() | 0) >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 __ZNSt3__114__shared_count12__add_sharedEv(i2);
 return;
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 28596, _wcslen(28596) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(53012) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(52980) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 28576, _wcslen(28576) | 0);
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) i1 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + (i1 << 2) >> 2] | 0;
 return i1 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) i1 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + (i1 << 2) >> 2] | 0;
 return i1 | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZNK5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEE4typeEv(i1) {
 i1 = i1 | 0;
 return 816;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function ___cxx_global_var_init_90() {
 var i1 = 0;
 if (HEAP8[50648] | 0) return;
 HEAP32[12838] = 0;
 HEAP32[12839] = -1;
 i1 = 50648;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 return;
}

function dynCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiiii[i5 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 49804, 5);
 return;
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i3 = i1 + i3 >>> 0;
 return (tempRet0 = i2 + i4 + (i3 >>> 0 < i1 >>> 0 | 0) >>> 0, i3 | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 12 | 0);
 return;
}

function __ZNSt3__15ctypeIcED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 28452;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (i1 | 0 ? HEAP8[i2 + 12 >> 0] | 0 : 0) __ZdaPv(i1);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 49799, 4);
 return;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 12 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE7disposeEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 12 >> 2] | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__time_putD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNK12mp5_implicit17transformed_union13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return;
}

function b13(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 abort(13);
 return 0;
}

function __ZNSt3__16localeC2ERKS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 >> 2] = i1;
 __ZNSt3__114__shared_count12__add_sharedEv(i1);
 return;
}

function __ZNK5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEE4whatEv(i1) {
 i1 = i1 | 0;
 return 35751;
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return (i2 | 0) == (i3 | 0) | 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE11get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function dynCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiii[i5 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function _uselocale(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = (_pthread_self() | 0) + 180 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) HEAP32[i1 >> 2] = i3;
 return i2 | 0;
}

function __ZNSt3__18numpunctIwED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 28544;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 16 | 0);
 return;
}

function __ZNSt3__18numpunctIcED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 28504;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZN5boost6detail15sp_counted_base7destroyEv(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25872;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25808;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1 + -8 | 0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) __ZdlPv(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) __ZdlPv(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function dynCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiii[i4 & 31](i1 | 0, i2 | 0, i3 | 0) | 0;
}

function b0(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__16locale2id6__initEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[13247] | 0;
 HEAP32[13247] = i2 + 1;
 HEAP32[i1 + 4 >> 2] = i2 + 1;
 return;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE11get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE19get_untyped_deleterEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 if (i1 >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - i1;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25872;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 25808;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 return;
}

function _wcslen(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2;
 while (1) if (!(HEAP32[i1 >> 2] | 0)) break; else i1 = i1 + 4 | 0;
 return i1 - i2 >> 2 | 0;
}

function ___errno_location() {
 var i1 = 0;
 if (!(HEAP32[12845] | 0)) i1 = 51424; else i1 = HEAP32[(_pthread_self() | 0) + 64 >> 2] | 0;
 return i1 | 0;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 16 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 1;
 return;
}

function __ZSt17__throw_bad_allocv() {
 var i1 = 0;
 i1 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev(i1);
 ___cxa_throw(i1 | 0, 2392, 213);
}

function dynCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 31](i1 | 0, i2 | 0, i3 | 0);
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}
function stackAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + i1 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return i2 | 0;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = (___dynamic_cast(i1, 2368, 2440, 0) | 0) != 0;
 return i1 & 1 | 0;
}

function __ZNSt3__18ios_base5clearEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 16 >> 2] = (HEAP32[i2 + 24 >> 2] | 0) == 0 | i1;
 return;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 12 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__114__shared_count12__add_sharedEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 >>> 0 < 128 ? i1 & 255 : i2) | 0;
}

function __ZNK12mp5_implicit11unit_sphere19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 return !(+HEAPF32[i1 + 4 >> 2] < .009999999776482582) | 0;
}

function dynCall_vidi(i4, i1, d2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 FUNCTION_TABLE_vidi[i4 & 7](i1 | 0, +d2, i3 | 0);
}

function b8(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(8);
 return 0;
}

function _strtoull_l(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = _strtoull(i4, i3, i1) | 0;
 return i4 | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 << 24 >> 24 > -1 ? i1 : i2) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i3 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i3 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt13runtime_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 28964;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(i1 + 4 | 0);
 return;
}

function _strtoll_l(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = _strtoll(i4, i3, i1) | 0;
 return i4 | 0;
}

function _isxdigit(i1) {
 i1 = i1 | 0;
 if ((i1 + -48 | 0) >>> 0 < 10) i1 = 1; else i1 = ((i1 | 32) + -97 | 0) >>> 0 < 6;
 return i1 & 1 | 0;
}

function b5(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 abort(5);
 return 0;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + -8 + 12 | 0);
 return;
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(47101, 47021, 1175, 47130);
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(46992, 47021, 1164, 49934);
}

function __ZNK5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE4typeEv(i1) {
 i1 = i1 | 0;
 return 928;
}

function _strtoll(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _strtox(i3, i2, i1, 0, -2147483648) | 0;
 return i3 | 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE19get_untyped_deleterEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(49831, 49854, 303, 49934);
}

function b15(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(15);
}

function dynCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_iii[i3 & 31](i1 | 0, i2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(51160, 1);
 HEAP32[13701] = 51160;
 return 54804;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 12 | 0);
 return;
}

function _strtoull(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _strtox(i3, i2, i1, -1, -1) | 0;
 return i3 | 0;
}

function __ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function b17(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(17);
 return 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _mbrlen(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return _mbrtowc(0, i2, i1, i3 | 0 ? i3 : 51432) | 0;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN5boost13property_tree11ptree_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__stdinbufIwE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb(i1, 0) | 0;
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = 0; else i1 = _wcrtomb(i1, i2, 0) | 0;
 return i1 | 0;
}

function dynCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vii[i3 & 63](i1 | 0, i2 | 0);
}

function b9(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 abort(9);
 return 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__110__stdinbufIwE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb(i1, 1) | 0;
}

function dynCall_vid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 FUNCTION_TABLE_vid[i3 & 7](i1 | 0, +d2);
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[13726] | 0;
 HEAP32[13726] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1);
 return;
}

function setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function b3(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(3);
}

function _tolower(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (_isupper(i1) | 0) == 0;
 return (i2 ? i1 : i1 | 32) | 0;
}

function _mbsinit(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 1; else i1 = (HEAP32[i1 >> 2] | 0) == 0;
 return i1 & 1 | 0;
}

function _do_read(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return ___string_read(i2, i1, i3) | 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__16locale5__impD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16locale5__impD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_mcc2_cpp() {
 HEAP8[54937] = 44;
 __ZNSt3__16chrono12steady_clock3nowEv() | 0;
 return;
}

function _strtold_l(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+_strtox_255(i3, i2, 2));
}

function __ZNSt3__18numpunctIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18numpunctIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18numpunctIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18numpunctIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b14(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(14);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt13runtime_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function _catgets(i1, i4, i2, i3) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i3 | 0;
}

function dynCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return FUNCTION_TABLE_ii[i2 & 127](i1 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return i1 << 24 >> 24 | 0;
}

function __ZNSt3__18ios_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__15ctypeIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__15ctypeIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 8 >> 0] | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function _cleanup_3(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function __ZNK31transformable_implicit_function19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNK12mp5_implicit17transformed_union19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function _cleanup(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function b18(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(18);
}

function _isspace(i1) {
 i1 = i1 | 0;
 return ((i1 | 0) == 32 | (i1 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _isdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN5boost16exception_detail10clone_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 255](i1 | 0);
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__throw_system_errorEiPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN12mp5_implicit17CrispIntersectionD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNKSt13runtime_error4whatEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZN12mp5_implicit15double_mushroomD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18messagesIwE8do_closeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function b1(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(1);
 return 0;
}

function __ZN12mp5_implicit13CrispSubtractD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNK17implicit_function19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNK12mp5_implicit4cube19integrity_invariantEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN12mp5_implicit11unit_sphereD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN12mp5_implicit11transformedD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _isxdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isxdigit(i1) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9bad_allocC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 28944;
 return;
}

function __ZN12mp5_implicit9scylinderD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _copysignl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_copysign(d1, d2));
}

function __ZN5boost16exception_detail10clone_baseD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _scalbnl(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 return +(+_scalbn(d2, i1));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b11(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(11);
}

function _get_values_size() {
 return HEAP32[(HEAP32[12837] | 0) + 12 >> 2] | 0;
}

function __ZN12mp5_implicit5sconeD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _frexpl(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 return +(+_frexp(d2, i1));
}

function __ZNSt3__16locale5facetD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN12mp5_implicit4cubeD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18messagesIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18messagesIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN12mp5_implicit3eggD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17collateIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17collateIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _isupper(i1) {
 i1 = i1 | 0;
 return (i1 + -65 | 0) >>> 0 < 26 | 0;
}

function __ZN5boost6detail15sp_counted_baseD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b2(i1, d2, i3) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 abort(2);
}

function __ZNSt3__15ctypeIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__121__throw_runtime_errorEPKc(i1) {
 i1 = i1 | 0;
 return;
}

function _fmodl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_fmod(d1, d2));
}

function __GLOBAL__I_000101() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 return;
}

function b16(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(16);
 return 0;
}

function __ZNSt9bad_allocD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _catopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1 | 0;
}

function __ZNSt3__110moneypunctIwLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _get_values_ptr() {
 return HEAP32[HEAP32[12837] >> 2] | 0;
}

function __ZNSt3__114__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv(i1) {
 i1 = i1 | 0;
 return 50460;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 3]();
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZNSt3__16locale5facetD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__112__do_nothingEPv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN17implicit_functionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18messagesIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _freelocale(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function b7(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(7);
}

function __Znaj(i1) {
 i1 = i1 | 0;
 return __Znwj(i1) | 0;
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function b4(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 abort(4);
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function setTempRet0(i1) {
 i1 = i1 | 0;
 tempRet0 = i1;
}

function b10(i1) {
 i1 = i1 | 0;
 abort(10);
 return 0;
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 0;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___ctype_toupper_loc() {
 return 23988;
}

function ___ctype_tolower_loc() {
 return 22448;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b6(i1) {
 i1 = i1 | 0;
 abort(6);
}

function ___ctype_b_loc() {
 return 22444;
}

function b12() {
 abort(12);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,___stdout_write,___stdio_seek,___stdio_write,___stdio_read,_sn_write,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,_do_read,b1
,b1,b1,b1];
var FUNCTION_TABLE_vidi = [b2,__ZNK12mp5_implicit11unit_sphere6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit15double_mushroom6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit4cube6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit9scylinder6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit3egg6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit5scone6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit11transformed6rotateEfN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE];
var FUNCTION_TABLE_viiiii = [b3,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_vid = [b4,__ZNK12mp5_implicit11unit_sphere6resizeEf,__ZNK12mp5_implicit15double_mushroom6resizeEf,__ZNK12mp5_implicit4cube6resizeEf,__ZNK12mp5_implicit9scylinder6resizeEf,__ZNK12mp5_implicit3egg6resizeEf,__ZNK12mp5_implicit5scone6resizeEf,__ZNK12mp5_implicit11transformed6resizeEf];
var FUNCTION_TABLE_iiiiiid = [b5,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b5];
var FUNCTION_TABLE_vi = [b6,__ZN5boost13property_tree14ptree_bad_dataD2Ev,__ZN5boost13property_tree14ptree_bad_dataD0Ev,__ZN5boost13property_tree14ptree_bad_pathD2Ev,__ZN5boost13property_tree14ptree_bad_pathD0Ev,__ZNSt13runtime_errorD2Ev,__ZN5boost13property_tree11ptree_errorD0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev
,__ZN17implicit_functionD2Ev,__ZN12mp5_implicit11unit_sphereD0Ev,__ZN12mp5_implicit15double_mushroomD0Ev,__ZN12mp5_implicit4cubeD0Ev,__ZN12mp5_implicit9scylinderD0Ev,__ZN12mp5_implicit3eggD0Ev,__ZN12mp5_implicit5sconeD0Ev,__ZN12mp5_implicit17transformed_unionD2Ev,__ZN12mp5_implicit17transformed_unionD0Ev,__ZN12mp5_implicit11transformedD0Ev,__ZN12mp5_implicit17CrispIntersectionD0Ev,__ZN12mp5_implicit13CrispSubtractD0Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE7rethrowEv,__ZThn36_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev,__ZThn36_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev,__ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE7rethrowEv,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED1Ev,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEED0Ev,__ZN5boost16exception_detail10clone_baseD2Ev,__ZN5boost16exception_detail10clone_baseD0Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED2Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED0Ev,__ZThn36_N5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED1Ev,__ZThn36_N5boost16exception_detail19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEED0Ev,__ZN5boost13property_tree17file_parser_errorD2Ev,__ZN5boost13property_tree11json_parser17json_parser_errorD0Ev,__ZN5boost13property_tree17file_parser_errorD0Ev,__ZN5boost6detail15sp_counted_baseD2Ev
,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEED0Ev,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE7disposeEv,__ZN5boost6detail15sp_counted_base7destroyEv,__ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEED2Ev,__ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEED0Ev,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEED0Ev,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE7disposeEv,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_ED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_ED0Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE7rethrowEv,__ZThn20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev,__ZThn20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev,__ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE7rethrowEv,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED1Ev,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEED0Ev,__ZN5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED2Ev,__ZN5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED0Ev,__ZThn20_N5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED1Ev,__ZThn20_N5boost16exception_detail19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_11__wrap_iterIPcEEEEED0Ev,__ZN5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEED2Ev,__ZN5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_ED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_ED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_ED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_ED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_ED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_ED0Ev,__ZN5boost6spirit7classic4impl15abstract_parserINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSB_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSB_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSD_ISH_SK_SH_SO_SP_SQ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev
,__ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_ED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED0Ev,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEED0Ev,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE7disposeEv,__ZN5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_ED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_ED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_ED0Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED2Ev,__ZN5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEED0Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE7rethrowEv,__ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev,__ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev,__ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE7rethrowEv,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED1Ev,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEED0Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED2Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED0Ev,__ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED1Ev,__ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_pathEED0Ev,__ZN5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEED2Ev,__ZN5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEED0Ev,__ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev,__ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev
,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE7rethrowEv,__ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev,__ZThn12_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev,__ZTv0_n16_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE7rethrowEv,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED1Ev,__ZTv0_n20_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEED0Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED2Ev,__ZN5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED0Ev,__ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED1Ev,__ZThn12_N5boost16exception_detail19error_info_injectorINS_13property_tree14ptree_bad_dataEED0Ev,__ZN5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev,__ZN5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev
,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev
,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,_cleanup,_cleanup_3,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__112__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_vii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNK12mp5_implicit11unit_sphere15get_boundingboxEv,__ZNK12mp5_implicit11unit_sphere4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit15double_mushroom15get_boundingboxEv,__ZNK12mp5_implicit15double_mushroom4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit4cube15get_boundingboxEv,__ZNK12mp5_implicit4cube4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit9scylinder15get_boundingboxEv,__ZNK12mp5_implicit9scylinder4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit3egg15get_boundingboxEv,__ZNK12mp5_implicit3egg4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit5scone15get_boundingboxEv,__ZNK12mp5_implicit5scone4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK12mp5_implicit17transformed_union15get_boundingboxEv,__ZNK12mp5_implicit11transformed4moveEN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEE,__ZNK17implicit_function15get_boundingboxEv,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv
,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiiii = [b8,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_iiiiid = [b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
var FUNCTION_TABLE_ii = [b10,__ZNKSt13runtime_error4whatEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNK12mp5_implicit11unit_sphere19integrity_invariantEv,__ZNK12mp5_implicit15double_mushroom19integrity_invariantEv,__ZNK12mp5_implicit4cube19integrity_invariantEv,__ZNK12mp5_implicit9scylinder19integrity_invariantEv,__ZNK12mp5_implicit3egg19integrity_invariantEv,__ZNK12mp5_implicit5scone19integrity_invariantEv,__ZNK12mp5_implicit17transformed_union19integrity_invariantEv,__ZNK31transformable_implicit_function19integrity_invariantEv,__ZNK17implicit_function19integrity_invariantEv,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE5cloneEv,__ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree11json_parser17json_parser_errorEEEE5cloneEv,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE19get_untyped_deleterEv,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE19get_untyped_deleterEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_E5cloneEv,__ZNK5boost6spirit7classic12parser_errorINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_11__wrap_iterIPcEEE4whatEv,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE5cloneEv,__ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6spirit7classic12parser_errorINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_11__wrap_iterIPcEEEEEEE5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE5cloneEv,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE19get_untyped_deleterEv
,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_E5cloneEv,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE5cloneEv,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE5cloneEv,__ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_pathEEEE5cloneEv,__ZNK5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEE4typeEv,__ZNK5boost3any6holderINS_13property_tree11string_pathINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS2_13id_translatorISA_EEEEE5cloneEv,__ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE5cloneEv,__ZTv0_n12_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_13property_tree14ptree_bad_dataEEEE5cloneEv,__ZNK5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE4typeEv,__ZNK5boost3any6holderINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5cloneEv,___stdio_close,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv
,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv
,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_viii = [b11,__ZNK12mp5_implicit11unit_sphere13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit11unit_sphere13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit15double_mushroom13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit15double_mushroom13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit4cube13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit4cube13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit9scylinder13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit9scylinder13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit3egg13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit3egg13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit5scone13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit5scone13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit17transformed_union13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit17transformed_union13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit17CrispIntersection13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit17CrispIntersection13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,__ZNK12mp5_implicit13CrispSubtract13eval_implicitERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPNS2_IfLj1ES5_EE,__ZNK12mp5_implicit13CrispSubtract13eval_gradientERKN5boost11multi_arrayIfLj2ENSt3__19allocatorIfEEEEPS6_,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_v = [b12,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_iiiiiiiii = [b13,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_iiiii = [b14,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b14,b14];
var FUNCTION_TABLE_viiiiii = [b15,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_iii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl26object_with_id_base_supplyIjEEE11get_deleterERKSt9type_info,__ZN5boost6spirit7classic4impl14grammar_helperINS1_7grammarINS_13property_tree11json_parser12json_grammarINS5_11basic_ptreeINSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEESF_NS9_4lessISF_EEEEEENS1_14parser_contextINS1_5nil_tEEEEESJ_NS1_7scannerINS9_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSU_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSU_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSW_IS10_S13_S10_S17_S18_S19_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEEE8undefineEPSN_,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic4impl14grammar_helperINS3_7grammarINS_13property_tree11json_parser12json_grammarINS7_11basic_ptreeINSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEESH_NSB_4lessISH_EEEEEENS3_14parser_contextINS3_5nil_tEEEEESL_NS3_7scannerINSB_11__wrap_iterIPcEENS3_16scanner_policiesINS3_28skip_parser_iteration_policyINS3_11alternativeINSW_INS3_12space_parserENS3_13confix_parserINS3_6strlitIPKcEENS3_11kleene_starINS3_14anychar_parserEEENSW_INS3_10eol_parserENS3_10end_parserEEENS3_21unary_parser_categoryENS3_10non_nestedENS3_9is_lexemeEEEEENSY_IS12_S15_S12_S19_S1A_S1B_EEEENS3_16iteration_policyEEENS3_12match_policyENS3_13action_policyEEEEEEEE11get_deleterERKSt9type_info,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_11alternativeINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSD_INSD_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSD_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSM_ISQ_ST_SQ_SX_SY_SZ_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1A_EES1B_EEEENS5_ISC_SV_EEEES19_S1A_E16do_parse_virtualERKS19_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS1_6actionINS1_5chlitIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE10a_object_sEEENS1_11alternativeINS5_IS7_NSM_10a_object_eEEENS4_INS1_11list_parserINS1_4ruleINS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINSP_INSP_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSP_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS11_IS15_S18_S15_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1P_EES7_NS1_16no_list_endtokenENS1_21plain_parser_categoryEEENS1_16assertive_parserISI_SR_EEEEEEEES1O_S1P_E16do_parse_virtualERKS1O_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS1_16assertive_parserINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS1_6actionINS1_4ruleINS1_7scannerINS6_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSL_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSL_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSN_ISR_SU_SR_SY_SZ_S10_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1B_EENS_13property_tree11json_parser7contextINS1D_11basic_ptreeISC_SC_NS6_4lessISC_EEEEE6a_nameEEEEENS5_ISC_NS1_5chlitIcEEEEEENS5_ISC_S1C_EEEES1A_S1B_E16do_parse_virtualERKS1A_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_16assertive_parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS1_4ruleINS1_7scannerINS5_11__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSL_ISP_SS_SP_SW_SX_SY_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES19_EEEES18_S19_E16do_parse_virtualERKS18_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS4_INS4_INS1_6actionINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENSF_ISJ_SM_SJ_SQ_SR_SS_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES13_EENS_13property_tree11json_parser7contextINS15_11basic_ptreeINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEES1E_NS8_4lessIS1E_EEEEE12a_string_valEEENS5_INS4_INS4_INS4_IS14_SJ_EESJ_EESJ_EENS1I_13a_literal_valEEEEES14_EES14_EES12_S13_E16do_parse_virtualERKS12_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8sequenceINS4_INS4_INS1_8optionalINS1_5chlitIcEEEENS1_11alternativeIS7_NS4_INS1_5rangeIcEENS1_11kleene_starINS1_12digit_parserEEEEEEEEENS5_INS4_IS7_NS1_8positiveISD_EEEEEEEENS5_INS4_INS4_INS1_5chsetIcEENS5_ISO_EEEESJ_EEEEEENS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_28skip_parser_iteration_policyINS9_INS9_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENSC_INS1_14anychar_parserEEENS9_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS12_IS16_S18_S16_S1C_S1D_S1E_EEEENS1_16iteration_policyEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE16do_parse_virtualERKS1O_,__ZN5boost6detail17sp_counted_impl_pINS_6spirit7classic11basic_chsetIcEEE11get_deleterERKSt9type_info,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_8positiveINS1_10contiguousINS1_13confix_parserINS1_5chlitIcEENS1_11kleene_starINS1_4ruleINS1_7scannerINSt3__111__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS1_11alternativeINSJ_INS1_12space_parserENS6_INS1_6strlitIPKcEENS9_INS1_14anychar_parserEEENSJ_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS6_ISO_SQ_SO_SU_SV_SW_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES18_EEEES8_SU_SV_NS1_10non_lexemeEEEEEEENSB_ISF_NSG_IS12_S14_S15_EEEES18_E16do_parse_virtualERKS1G_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_10differenceINS6_INS1_14anychar_parserENS1_6strlitIPKcEEEESB_EENS_13property_tree11json_parser7contextINSE_11basic_ptreeINSt3__112basic_stringIcNSI_11char_traitsIcEENSI_9allocatorIcEEEESO_NSI_4lessISO_EEEEE6a_charEEENS1_8sequenceINS1_5chlitIcEENS1_16assertive_parserISO_NS1_4ruleINS1_7scannerINSI_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserISB_NS1_11kleene_starIS7_EENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS18_ISB_S1A_SB_S1E_S1F_S1G_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tES1S_EEEEEEEES1R_S1S_E16do_parse_virtualERKS1R_,__ZNK5boost6spirit7classic4impl15concrete_parserINS1_11alternativeINS1_6actionINS1_5chsetIcEENS_13property_tree11json_parser7contextINS8_11basic_ptreeINSt3__112basic_stringIcNSC_11char_traitsIcEENSC_9allocatorIcEEEESI_NSC_4lessISI_EEEEE8a_escapeEEENS1_8sequenceINS1_5chlitIcEENS5_INS1_11uint_parserImLi16ELj4ELi4EEENSM_9a_unicodeEEEEEEENS1_7scannerINSC_11__wrap_iterIPcEENS1_16scanner_policiesINS1_27no_skipper_iteration_policyINS1_28skip_parser_iteration_policyINS4_INS4_INS1_12space_parserENS1_13confix_parserINS1_6strlitIPKcEENS1_11kleene_starINS1_14anychar_parserEEENS4_INS1_10eol_parserENS1_10end_parserEEENS1_21unary_parser_categoryENS1_10non_nestedENS1_9is_lexemeEEEEENS16_IS1A_S1D_S1A_S1H_S1I_S1J_EEEENS1_16iteration_policyEEEEENS1_12match_policyENS1_13action_policyEEEEENS1_5nil_tEE16do_parse_virtualERKS1U_,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw
,__ZNKSt3__15ctypeIwE8do_widenEc,b16,b16];
var FUNCTION_TABLE_iiiiii = [b17,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17];
var FUNCTION_TABLE_viiii = [b18,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b18,b18,b18,b18,b18,b18,b18];

  return { _set_object: _set_object, _get_gradients_ptr: _get_gradients_ptr, _i64Subtract: _i64Subtract, _memset: _memset, _bitshift64Lshr: _bitshift64Lshr, _get_gradients_size: _get_gradients_size, _finish_geometry: _finish_geometry, _bitshift64Shl: _bitshift64Shl, _unset_object: _unset_object, _set_x: _set_x, _unset_x: _unset_x, _calculate_implicit_values: _calculate_implicit_values, _get_v_size: _get_v_size, _memcpy: _memcpy, _get_f: _get_f, _get_values_ptr: _get_values_ptr, _i64Add: _i64Add, _get_values_size: _get_values_size, _get_v: _get_v, _calculate_implicit_gradients: _calculate_implicit_gradients, ___errno_location: ___errno_location, _get_f_size: _get_f_size, ___cxa_can_catch: ___cxa_can_catch, _build_geometry: _build_geometry, _free: _free, _memmove: _memmove, _get_f_ptr: _get_f_ptr, _malloc: _malloc, _get_v_ptr: _get_v_ptr, ___cxa_is_pointer_type: ___cxa_is_pointer_type, __GLOBAL__I_000101: __GLOBAL__I_000101, ___cxx_global_var_init_90: ___cxx_global_var_init_90, __GLOBAL__sub_I_mcc2_cpp: __GLOBAL__sub_I_mcc2_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_vidi: dynCall_vidi, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var _set_object = Module["_set_object"] = asm["_set_object"];
var _get_gradients_ptr = Module["_get_gradients_ptr"] = asm["_get_gradients_ptr"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _get_gradients_size = Module["_get_gradients_size"] = asm["_get_gradients_size"];
var _finish_geometry = Module["_finish_geometry"] = asm["_finish_geometry"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _unset_object = Module["_unset_object"] = asm["_unset_object"];
var _set_x = Module["_set_x"] = asm["_set_x"];
var _unset_x = Module["_unset_x"] = asm["_unset_x"];
var _memset = Module["_memset"] = asm["_memset"];
var _get_v_size = Module["_get_v_size"] = asm["_get_v_size"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var ___cxx_global_var_init_90 = Module["___cxx_global_var_init_90"] = asm["___cxx_global_var_init_90"];
var _get_f = Module["_get_f"] = asm["_get_f"];
var _get_values_ptr = Module["_get_values_ptr"] = asm["_get_values_ptr"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _get_values_size = Module["_get_values_size"] = asm["_get_values_size"];
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var _get_v = Module["_get_v"] = asm["_get_v"];
var _calculate_implicit_gradients = Module["_calculate_implicit_gradients"] = asm["_calculate_implicit_gradients"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _get_f_size = Module["_get_f_size"] = asm["_get_f_size"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _get_v_ptr = Module["_get_v_ptr"] = asm["_get_v_ptr"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _get_f_ptr = Module["_get_f_ptr"] = asm["_get_f_ptr"];
var __GLOBAL__sub_I_mcc2_cpp = Module["__GLOBAL__sub_I_mcc2_cpp"] = asm["__GLOBAL__sub_I_mcc2_cpp"];
var _calculate_implicit_values = Module["_calculate_implicit_values"] = asm["_calculate_implicit_values"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _build_geometry = Module["_build_geometry"] = asm["_build_geometry"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_vidi = Module["dynCall_vidi"] = asm["dynCall_vidi"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = asm["stackAlloc"];
Runtime.stackSave = asm["stackSave"];
Runtime.stackRestore = asm["stackRestore"];
Runtime.establishStackSpace = asm["establishStackSpace"];
Runtime.setTempRet0 = asm["setTempRet0"];
Runtime.getTempRet0 = asm["getTempRet0"];
if (memoryInitializer) {
 if (typeof Module["locateFile"] === "function") {
  memoryInitializer = Module["locateFile"](memoryInitializer);
 } else if (Module["memoryInitializerPrefixURL"]) {
  memoryInitializer = Module["memoryInitializerPrefixURL"] + memoryInitializer;
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, Runtime.GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = (function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   HEAPU8.set(data, Runtime.GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  });
  function doBrowserLoad() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, (function() {
    throw "could not load memory initializer " + memoryInitializer;
   }));
  }
  if (Module["memoryInitializerRequest"]) {
   function useRequest() {
    var request = Module["memoryInitializerRequest"];
    if (request.status !== 200 && request.status !== 0) {
     console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
     doBrowserLoad();
     return;
    }
    applyMemoryInitializer(request.response);
   }
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
Module["callMain"] = Module.callMain = function callMain(args) {
 args = args || [];
 ensureInitRuntime();
 var argc = args.length + 1;
 function pad() {
  for (var i = 0; i < 4 - 1; i++) {
   argv.push(0);
  }
 }
 var argv = [ allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL) ];
 pad();
 for (var i = 0; i < argc - 1; i = i + 1) {
  argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
  pad();
 }
 argv.push(0);
 argv = allocate(argv, "i32", ALLOC_NORMAL);
 try {
  var ret = Module["_main"](argc, argv, 0);
  exit(ret, true);
 } catch (e) {
  if (e instanceof ExitStatus) {
   return;
  } else if (e == "SimulateInfiniteLoop") {
   Module["noExitRuntime"] = true;
   return;
  } else {
   if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
   throw e;
  }
 } finally {
  calledMain = true;
 }
};
function run(args) {
 args = args || Module["arguments"];
 if (preloadStartTime === null) preloadStartTime = Date.now();
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (Module["_main"] && shouldRunNow) Module["callMain"](args);
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = Module.run = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"]) {
  return;
 }
 if (Module["noExitRuntime"]) {} else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["exit"](status);
 } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
  quit(status);
 }
 throw new ExitStatus(status);
}
Module["exit"] = Module.exit = exit;
var abortDecorators = [];
function abort(what) {
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach((function(decorator) {
   output = decorator(output, what);
  }));
 }
 throw output;
}
Module["abort"] = Module.abort = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
var shouldRunNow = true;
if (Module["noInitialRun"]) {
 shouldRunNow = false;
}
Module["noExitRuntime"] = true;
run();




